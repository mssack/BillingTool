<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CsWpfBase</name>
    </assembly>
    <members>
        <member name="T:CsWpfBase.Db.attributes.CsDbDataRowInterfaceAttribute">
            <summary>The attribute for a row in a <see cref="T:CsWpfBase.Db.models.CsDbTableRow"/>.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataRowInterfaceAttribute.Database">
            <summary>The name of the data base.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataRowInterfaceAttribute.TableName">
            <summary>The name of the data base.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataRowInterfaceAttribute.Generated">
            <summary>The generation string</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataRowInterfaceAttribute.Hash">
            <summary>The generation hash</summary>
        </member>
        <member name="M:CsWpfBase.Db.attributes.CsDbDataRowInterfaceAttribute.ToCode">
            <summary>Returns the attribute as C# Code</summary>
        </member>
        <member name="T:CsWpfBase.Db.attributes.CsDbDataContextAttribute">
            <summary>The Attribute for the <see cref="T:CsWpfBase.Db.models.CsDbDataContext" />.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataContextAttribute.Name">
            <summary>The name of the data base.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataContextAttribute.Generated">
            <summary>The generation string</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataContextAttribute.Hash">
            <summary>The generation hash</summary>
        </member>
        <member name="M:CsWpfBase.Db.attributes.CsDbDataContextAttribute.ToCode">
            <summary>Returns the attribute as C# Code</summary>
        </member>
        <member name="T:CsWpfBase.Db.attributes.CsDbViewRowAttribute">
            <summary>The attribute for a row in a <see cref="T:CsWpfBase.Db.models.CsDbViewRow"/>.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbViewRowAttribute.Database">
            <summary>The name of the data base.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbViewRowAttribute.ViewName">
            <summary>The name of the data base.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbViewRowAttribute.Generated">
            <summary>The generation string</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbViewRowAttribute.Hash">
            <summary>The generation hash</summary>
        </member>
        <member name="M:CsWpfBase.Db.attributes.CsDbViewRowAttribute.ToCode">
            <summary>Returns the attribute as C# Code</summary>
        </member>
        <member name="T:CsWpfBase.Db.attributes.CsDbDataViewAttribute">
            <summary>The Attribute for the <see cref="T:CsWpfBase.Db.models.CsDbView`1" />.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataViewAttribute.Name">
            <summary>The name of the View.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataViewAttribute.Database">
            <summary>The name of the data base.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataViewAttribute.Generated">
            <summary>The generation string</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataViewAttribute.Hash">
            <summary>The generation hash</summary>
        </member>
        <member name="M:CsWpfBase.Db.attributes.CsDbDataViewAttribute.ToCode">
            <summary>Returns the attribute as C# Code</summary>
        </member>
        <member name="T:CsWpfBase.Db.attributes.columnAttributes.CsDbResolvesRelationAttribute">
            <summary>Defines the relation this method or property uses to resolve the data.</summary>
        </member>
        <member name="M:CsWpfBase.Db.attributes.columnAttributes.CsDbResolvesRelationAttribute.#ctor(System.String)">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Db.attributes.columnAttributes.CsDbResolvesRelationAttribute.#ctor(CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.columnAttributes.CsDbResolvesRelationAttribute.RelationName">
            <summary>The name of the relation.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.columnAttributes.CsDbResolvesRelationAttribute.PkTable">
            <summary>Primary key table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.columnAttributes.CsDbResolvesRelationAttribute.PkColumn">
            <summary>Primary key column</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.columnAttributes.CsDbResolvesRelationAttribute.FkTable">
            <summary>Foreign key table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.columnAttributes.CsDbResolvesRelationAttribute.FkColumn">
            <summary>Foreign key column</summary>
        </member>
        <member name="M:CsWpfBase.Db.attributes.columnAttributes.CsDbResolvesRelationAttribute.GetCode">
            <summary>Converts the attribute and its current content to the c# code.</summary>
        </member>
        <member name="T:CsWpfBase.Db.attributes.columnAttributes.CsDbDataColumnAttribute">
            <summary>A db column attribute for the CsDb system. Holds all the .Net values of the column.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.columnAttributes.CsDbDataColumnAttribute.MaxLength">
            <summary>The maximum db data length.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.columnAttributes.CsDbDataColumnAttribute.Default">
            <summary>Native default value</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.columnAttributes.CsDbDataColumnAttribute.IsNullable">
            <summary>Defines if the column is null able.</summary>
        </member>
        <member name="M:CsWpfBase.Db.attributes.columnAttributes.CsDbDataColumnAttribute.ToCode">
            <summary>Returns the attribute as C# Code</summary>
        </member>
        <member name="T:CsWpfBase.Db.attributes.columnAttributes.CsDbNativeDataColumnAttribute">
            <summary>A db column attribute for the CsDb system. Holds all the native values of the column.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.columnAttributes.CsDbNativeDataColumnAttribute.Table">
            <summary>The native column name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.columnAttributes.CsDbNativeDataColumnAttribute.Name">
            <summary>The native column name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.columnAttributes.CsDbNativeDataColumnAttribute.Type">
            <summary>The native database type.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.columnAttributes.CsDbNativeDataColumnAttribute.MaxLength">
            <summary>The maximum db data length.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.columnAttributes.CsDbNativeDataColumnAttribute.Default">
            <summary>Native default value</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.columnAttributes.CsDbNativeDataColumnAttribute.IsNullable">
            <summary>Defines if the column is null able.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.columnAttributes.CsDbNativeDataColumnAttribute.Description">
            <summary>Native description</summary>
        </member>
        <member name="M:CsWpfBase.Db.attributes.columnAttributes.CsDbNativeDataColumnAttribute.To_Attribute_Code">
            <summary>Returns the attribute as C# Code</summary>
        </member>
        <member name="M:CsWpfBase.Db.attributes.columnAttributes.CsDbNativeDataColumnAttribute.To_NewObject_Code">
            <summary>Returns the attribute as C# Code</summary>
        </member>
        <member name="T:CsWpfBase.Db.attributes.CsDbDataSetAttribute">
            <summary>The Attribute for the <see cref="T:CsWpfBase.Db.models.CsDbDataSet" />.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataSetAttribute.Name">
            <summary>The name of the data base.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataSetAttribute.Generated">
            <summary>The generation string</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataSetAttribute.Hash">
            <summary>The generation hash</summary>
        </member>
        <member name="M:CsWpfBase.Db.attributes.CsDbDataSetAttribute.ToCode">
            <summary>Returns the attribute as C# Code</summary>
        </member>
        <member name="T:CsWpfBase.Db.attributes.CsDbDataRowAttribute">
            <summary>The attribute for a row in a <see cref="T:CsWpfBase.Db.models.CsDbTableRow"/>.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataRowAttribute.Database">
            <summary>The name of the data base.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataRowAttribute.TableName">
            <summary>The name of the data base.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataRowAttribute.Generated">
            <summary>The generation string</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataRowAttribute.Hash">
            <summary>The generation hash</summary>
        </member>
        <member name="M:CsWpfBase.Db.attributes.CsDbDataRowAttribute.ToCode">
            <summary>Returns the attribute as C# Code</summary>
        </member>
        <member name="T:CsWpfBase.Db.attributes.CsDbDataTableAttribute">
            <summary>The Attribute for the <see cref="T:CsWpfBase.Db.models.CsDbTable`1"/>.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataTableAttribute.Name">
            <summary>The name of the table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataTableAttribute.Database">
            <summary>The name of the data base.</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataTableAttribute.Generated">
            <summary>The generation string</summary>
        </member>
        <member name="P:CsWpfBase.Db.attributes.CsDbDataTableAttribute.Hash">
            <summary>The generation hash</summary>
        </member>
        <member name="M:CsWpfBase.Db.attributes.CsDbDataTableAttribute.ToCode">
            <summary>Returns the attribute as C# Code</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.architecture.CsDbArchitecture">
            <summary>A database context, is a subset of databases inside a database server.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.CsDbArchitecture.#ctor">
            <summary>The database context name could be a server or something similar.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.CsDbArchitecture.Name">
            <summary>The context name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.CsDbArchitecture.Databases">
            <summary>A list of all Databases inside this architecture.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.CsDbArchitecture.GetCodeBundle">
            <summary>Write an code bundle for the db architecture.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.CsDbArchitecture.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.generators.CsDbArcGen_SqlCe.Architecture">
            <summary>The generated architecture</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.generators.CsDbArcGen_SqlCe.Generate">
            <summary>Generates the architecture.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.generators.CsDbArcGen_SqlCe.DatabaseCreator.PrimaryColumnNameMapping">
            <summary>Table to primary column name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.generators.CsDbArcGen_Sql.Architecture">
            <summary>The generated architecture</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.generators.CsDbArcGen_Sql.#ctor(CsWpfBase.Db.router.CsDbRouter)">
            <summary>Creates the generator with an existing router.</summary>
            <param name="router">The router must not be opened before.</param>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.generators.CsDbArcGen_Sql.Generate">
            <summary>Generates the architecture.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.generators.CsDbArcGen_Sql.DatabaseCreator.PrimaryColumnNameMapping">
            <summary>Table to primary column name.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.generators.bases.IGenerateCsDbArcContext.Generate">
            <summary>Generates the architecture.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase">
            <summary>Creates a new database architecture.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase.Owner">
            <summary>Gets the Owner.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase.Name">
            <summary>The Database name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase.TableNameConventions">
            <summary>Naming conventions to replace the default naming of a table, row and table property.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase.RelationNameConventions">
            <summary>Naming conventions to replace the default naming of a referencing property or associated property.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase.Tables">
            <summary>A list of all tables inside this architecture.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase.Views">
            <summary>A list of all views inside this architecture.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase.Relations">
            <summary>A list of all relations in this architecture.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase.ReadTableNameConventions(System.String,System.String)">
            <summary>Reads the conventions from a string where each line represent one convention.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase.ReadRelationNameConventions(System.String,System.String)">
            <summary>Reads the conventions from a string where each line represent one convention.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase.RemoveTable(CsWpfBase.Db.codegen.architecture.parts.CsDbArcTable)">
            <summary>Removes the table. All associated Relation will be removed either.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase.RemoveView(CsWpfBase.Db.codegen.architecture.parts.CsDbArcView)">
            <summary>Removes the view.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase.CreateTable(System.String)">
            <summary>Creates a new table and checks for already existing tables. If table already exists an exception will be thrown.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase.CreateView(System.String)">
            <summary>Creates a new view and checks for already existing views. If view already exists an exception will be thrown.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn">
            <summary>Contains architecture information about a column inside a table.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.#ctor(CsWpfBase.Db.codegen.architecture.parts.bases.CsDbArcTableViewBase)">
            <summary>Creates a new ArchitectureColumn and associate</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.Owner">
            <summary>Gets or sets the Owner.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.OwnerView">
            <summary>Gets or sets the Owner.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.Name">
            <summary>The native name of the db column</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.Description">
            <summary>The native description of the db column.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.Type">
            <summary>The native type of the db column.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.Nullable">
            <summary>The native nullable string of the db column</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.MaxLength">
            <summary>The native max length of the db column.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.DefaultValue">
            <summary>The native default value of the db column.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.DotNetType">
            <summary>The associated .Net value of the <see cref="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.Type" /> property. if it is a value type this will not return nullable bool.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.DotNetIsNullable">
            <summary>The associated .Net value of the <see cref="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.Nullable" /> property.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.DotNetMaxLength">
            <summary>The associated .Net value of the <see cref="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.MaxLength" /> property.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.DotNetDefaultValue">
            <summary>The associated .Net value of the <see cref="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.DefaultValue" /> property.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.architecture.parts.CsDbArcRelation">
            <summary>Contains architecture information about a relation between two tables.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcRelation.Name">
            <summary>Gets or sets the Name of the relation. Usually it is the FK_Name</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcRelation.PrimaryKey">
            <summary>Gets or sets the PrimaryKey.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcRelation.ForeignKey">
            <summary>Gets or sets the ForeignKey.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcRelation.DeleteRule">
            <summary>Gets or sets the DeleteRule.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcRelation.UpdateRule">
            <summary>Gets or sets the UpdateRule.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcRelation.Create(System.String,CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn,CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn)">
            <summary>Associates two tables with each other. Automatically adds this relation to the associated table relation collection.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcRelation.Remove">
            <summary>Removes this relation from primary key and foreign key table.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcRelation.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.architecture.parts.CsDbArcTable">
            <summary>Contains architecture information about a db table.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcTable.RemoveColumn(CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn)">
            <summary>Removes the column from this table and removes all associated relations.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcTable.Relations">
            <summary>Gets the relations associated with this table</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcTable.PrimaryColumn">
            <summary>Gets or sets the PrimaryColumn.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.CsDbArcTable.Level">
            <summary>
                Gets a value which describes the position of the table inside the whole database. This can be used to determine the dependency's for this table.
                Level 0 means that this table depends on no other table inside the database.
            </summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcTable.Create(CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase,System.String)">
            <summary>This initialize method should only be called by the <see cref="T:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase" /> class.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcTable.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.architecture.parts.bases.CsDbArcTableViewBase">
            <summary>This is the base class for views and tables.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.bases.CsDbArcTableViewBase.#ctor(CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase,System.String)">
            <summary>This initialize method should only be called by the <see cref="T:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase" /> class.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.bases.CsDbArcTableViewBase.RemoveColumn(CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn)">
            <summary>Removes the column from this table and removes all associated relations.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.bases.CsDbArcTableViewBase.Columns">
            <summary>Gets the columns defined for this table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.bases.CsDbArcTableViewBase.Owner">
            <summary>The architecture collection this table belongs to.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.architecture.parts.bases.CsDbArcTableViewBase.Name">
            <summary>Gets the native name of the table or view.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.bases.CsDbArcTableViewBase.CreateColumn">
            <summary>Creates a new associated column.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.architecture.parts.CsDbArcView">
            <summary>Used to represent views.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcView.Create(CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase,System.String)">
            <summary>This initialize method should only be called by the <see cref="T:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase" /> class.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.architecture.parts.CsDbArcView.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.CsDbCodeBundle">
            <summary>Defines a set of source code files and folders for a particular database server.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundle.Architecture">
            <summary>The data base server architecture.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundle.NameSpace">
            <summary>The name space used for this set of databases.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundle.Directory">
            <summary>The source directory for the databases the context and all stuff belonging to the data base server.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundle.ProjectFilePath">
            <summary>The file path for the target project.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundle.FileExtension">
            <summary>Gets the file extension which is appended to each file: default '.generated.cs'.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundle.Databases">
            <summary>The data bases inside this server.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.CsDbCodeBundle.SetPaths(System.String,System.String,System.String)">
            <summary>Sets the target paths accordingly.</summary>
            <param name="parentDirectory">the owning directory where the database should be generated at.</param>
            <param name="nameSpace">The root name space should be same like of the object inside the <paramref name="parentDirectory" />.</param>
            <param name="projectFile">The file of the owning project.</param>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.CsDbCodeBundle.Write(System.Boolean)">
            <summary>Writes the code bundle to the file system.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.CsDbCodeBundle.FromArchitecture(CsWpfBase.Db.codegen.architecture.CsDbArchitecture)">
            <summary>Creates the code bundle from an existing <see cref="T:CsWpfBase.Db.codegen.architecture.CsDbArchitecture" />.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb">
            <summary>Defines a set of source code files and folders for a particular database.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.DataSet">
            <summary>The data set code file for the data base.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.Tables">
            <summary>The code files for the tables inside this database.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.Views">
            <summary>The code files for the views inside this database.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.Rows">
            <summary>The code files for the rows inside this database.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.RowInterfaces">
            <summary>The code files for the data row interfaces inside this database.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.Architecture">
            <summary>The data base architecture.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.DataSetNameSpace">
            <summary>The name space for the data set.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.TablesNameSpace">
            <summary>The name space for the tables.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.ViewsNameSpace">
            <summary>The name space for the views.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.RowsNameSpace">
            <summary>The name space for the rows.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.RowInterfacesNameSpace">
            <summary>The name space for the row interfaces.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.DataSetDirectory">
            <summary>The directory for the data set.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.TablesDirectory">
            <summary>The directory for the tables.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.ViewsDirectory">
            <summary>The directory for the views.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.RowsDirectory">
            <summary>The directory for the rows.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.RowInterfacesDirectory">
            <summary>The directory for the row interfaces.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb.FromArchitecture(CsWpfBase.Db.codegen.code.CsDbCodeBundle,CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase)">
            <summary>Creates the code base from an existing <see cref="T:CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase" />.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.CsDbCodeBundleWriter">
            <summary>Writes a code bundle to a project.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleWriter.CodeBundle">
            <summary>The basis of this writer.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.CsDbCodeBundleWriter.GeneratedFiles">
            <summary>The files which have been generated (Created or modified) by the writer.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.CsDbCodeBundleWriter.Start(System.Boolean)">
            <summary>Starts the generator</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation">
            <summary>Maps the architecture to the code base.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation.#ctor(CsWpfBase.Db.codegen.architecture.parts.CsDbArcRelation,CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_Column,CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_Column)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation.Architecture">
            <summary>underlaying architecture.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation.PkKey">
            <summary>primary Key</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation.FkKey">
            <summary>foreign key</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation.Convention">
            <summary>Gets the associated naming convention if one exist.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation.Attribute">
            <summary>The attribute for methods or object which are related to this relation.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation.PkMethods">
            <summary>Methods for selecting a single item.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation.FkMethods">
            <summary>Methods for selecting many items.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation.AssociatedProperty">
            <summary>The associated property inside the data row. This links to one item of Pk</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation.ReferencingProperty">
            <summary>The referencing property inside the data row. This references to multiple instances of fk.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation.Create(CsWpfBase.Db.codegen.architecture.parts.CsDbArcRelation,CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_Column,CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_Column)">
            <summary>Creates the code base relations and maps it to the associated tables. </summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation.Get_PkSelectDescription">
            <summary>Get the select description for summarys. Use this if you want to point to one item.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation.Get_FkSelectDescription">
            <summary>Get the select description for summarys. Use this if you want to point to many items.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation.Get_RelationDescription_PointingTowardPk">
            <summary>Get the relation description for summarys. Use this if you want to point to one item.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelation.Get_RelationDescription_PointingTowardFk">
            <summary>Get the relation description for summarys. Use this if you want to point to many items.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelationFileTemplate">
            <summary>Used for file template which have a relational background.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelationFileTemplate.Relation">
            <summary>Get the relation this template is based on.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelationFileTemplate.DataSet">
            <summary>The dataset of the current code base.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelationFileTemplate.PkColumn">
            <summary>The code class of the primary key column of the <see cref="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelationFileTemplate.Relation" />.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelationFileTemplate.PkRow">
            <summary>The code class of the primary key row of the <see cref="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelationFileTemplate.Relation" />.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelationFileTemplate.PkTable">
            <summary>The code class of the primary key table of the <see cref="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelationFileTemplate.Relation" />.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelationFileTemplate.FkColumn">
            <summary>The code class of the foreign key column of the <see cref="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelationFileTemplate.Relation" />.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelationFileTemplate.FkRow">
            <summary>The code class of the foreign key row of the <see cref="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelationFileTemplate.Relation" />.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelationFileTemplate.FkTable">
            <summary>The code class of the foreign key table of the <see cref="P:CsWpfBase.Db.codegen.code.extensions.CsDbCodeRelationFileTemplate.Relation" />.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataContext">
            <summary>A file for a DbContext class.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataContext.#ctor(CsWpfBase.Db.codegen.code.CsDbCodeBundle)">
            <summary>Creates a new db context code file.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_BundledDataMethods">
            <summary>This method is used to invalidate a complete row.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_CopyMethods">
            <summary>The copy methods takes care of the cloning process into an interface and from an interface.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_CopyMethods.CopyFromName">
            <summary>Copy from method name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_CopyMethods.CopyToName">
            <summary>Copy to method name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_CopyMethods.CopyFromButIgnoreName">
            <summary>Copy from method name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_CopyMethods.CopyFromButOnlyName">
            <summary>Copy from method name.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_Reload">
            <summary>The reload method for a single datarow.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_Reload.Name">
            <summary>Gets the name of the reload method</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_Invalidate">
            <summary>This method is used to invalidate a complete row.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_Invalidate.Name">
            <summary>Gets the name of the Invalidate Method.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_ApplyDefaults">
            <summary>Used to set the default database values on this row.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_ApplyDefaults.Name">
            <summary>Get the name of the method.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_Methods">
            <summary>Collapses methods for the data row.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_Methods.Reload">
            <summary>The Method used to reload a single datarow.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_Methods.SetDefaultValues">
            <summary>The method used to set default values.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_Methods.Invalidate">
            <summary>The method used to invalidate the complete row.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_Methods.CopyMethods">
            <summary>The copy methods.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.methods.CsDbcTableRow_Methods.BundledDataMethods">
            <summary>The bundled Data methods.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.CsDbcTableRow_NativeColumnName_To_PropertyMapping.CodeBundle">
            <summary>Gets the owning code base.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.CsDbcTableRow_NativeColumnName_To_PropertyMapping.Row">
            <summary>Gets the owning row.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datarowParts.associated.CsDbcTableRow_AssociatedProperty">
            <summary>Used to load and store another a relation based instance of another row.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.associated.CsDbcTableRow_AssociatedProperty.Name">
            <summary>The name of the property.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.associated.CsDbcTableRow_AssociatedProperty.LoadedProperty">
            <summary>The name of the field which says if property is loaded or not.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.associated.CsDbcTableRow_AssociatedProperty.DataField">
            <summary>The name of the backing store field of the property.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_Column">
            <summary>The code for a column inside <see cref="T:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRow" /> code.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_Column.#ctor(CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn,CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRow)">
            <summary>Creates a new column.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_Column.Architecture">
            <summary>Gets the underlaying architecture</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_Column.CodeBundle">
            <summary>Gets the owning code base.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_Column.Row">
            <summary>Gets the owning row.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_Column.Name">
            <summary>Gets or sets the Name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_Column.NativeAttributes">
            <summary>Gets or sets the ColumnAttribute.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_Column.DotNetAttributes">
            <summary>Gets or sets the CsDbDotNetAttribute.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_Column.NativeNameConstant">
            <summary>Gets the name of the constant which holds the native name of the column.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_UnsignedColumn">
            <summary>Used to wrap 'Unsigned_' data columns around another wrapper to provide unsigned values.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_UnsignedColumn.#ctor(CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_Column)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.columns.CsDbcTableRow_UnsignedColumn.Name">
            <summary>Gets the name of the unsigned property.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datarowParts.referencing.CsDbcTableRow_ReferencingProperty">
            <summary>The link to the foreign key table of this row.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.referencing.CsDbcTableRow_ReferencingProperty.Name">
            <summary>The name of the property.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datarowParts.referencing.CsDbcTableRow_ReferencingProperty.DataFieldName">
            <summary>The field which stores the collection.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datasetParts.CsDbcSet_ViewProperty">
            <summary>Template for a view property inside a data set.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datasetParts.CsDbcSet_TableProperty">
            <summary>Template for a table property inside a data set.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.foreignkeybundle.CsDbcTable_ForeignKeyFindOrLoadMethod">
            <summary>The load then find method for a foreign key.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.foreignkeybundle.CsDbcTable_ForeignKeyFindOrLoadMethod.Name">
            <summary>Gets the name of the method LoadThenFind_By</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.foreignkeybundle.CsDbcTable_ForeignKeyMethodBundle">
            <summary>collapses select methods for a relation.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.foreignkeybundle.CsDbcTable_ForeignKeyMethodBundle.FindMethod">
            <summary>The method to Find row in local data.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.foreignkeybundle.CsDbcTable_ForeignKeyMethodBundle.LoadThenFindMethod">
            <summary>The method to load and then find row in local data.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.foreignkeybundle.CsDbcTable_ForeignKeyMethodBundle.FindOrLoadMethod">
            <summary>The method to find and then Load row in local data.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.foreignkeybundle.CsDbcTable_ForeignKeyFindMethod">
            <summary>The find method for a foreign key.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.foreignkeybundle.CsDbcTable_ForeignKeyFindMethod.Name">
            <summary>Get the name of the find method.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.foreignkeybundle.CsDbcTable_ForeignKeyLoadThenFindMethod">
            <summary>The load then find method for a foreign key.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.foreignkeybundle.CsDbcTable_ForeignKeyLoadThenFindMethod.Name">
            <summary>Gets the name of the method LoadThenFind_By</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.CsDbcTable_Overrides">
            <summary>Collapses methods which are overriden from base class.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.CsDbcTable_Overrides.LoadDataMethodName">
            <summary>Get the name of the LoadData method</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.CsDbcTable_Overrides.GenericFindOrLoadMethodName">
            <summary>Get the name of the generic_FindOrLoad method</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.CsDbcTable_Overrides.GenericLoadThenFindMethodName">
            <summary>Get the name of the generic_LoadThenFind method</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.CsDbcTable_Overrides.GenericFindMethodName">
            <summary>Get the name of the generic_Find method</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.CsDbcTable_PrimaryKeyMethods">
            <summary>Collapses primary key methods.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.CsDbcTable_PrimaryKeyMethods.Table">
            <summary>The owning table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.CsDbcTable_PrimaryKeyMethods.FindName">
            <summary>Gets the name of the Find method which is used to select by the primary key in the local data.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.CsDbcTable_PrimaryKeyMethods.FindOrLoadName">
            <summary>
                Gets the name of the FindOrLoad method which is used to select by the primary key in the local data. If nothing is found the database is
                queried.
            </summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.CsDbcTable_PrimaryKeyMethods.LoadThenFindName">
            <summary>Gets the name of the LoadThenFind method which is used to query the data base and after that find the result in local data.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.CsDbcTable_Methods">
            <summary>Holds all methods which are applied to the data table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.CsDbcTable_Methods.Overrides">
            <summary>Collapses Methods for the primary key</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.CsDbcTable_Methods.PrimaryKey">
            <summary>Collapses Methods for the primary key</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.CsDbcTable_Methods.ForeignKeyBundles">
            <summary>All foreign key method bundles from this table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.datatableParts.methods.CsDbcTable_Methods.Table">
            <summary>The owner table.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.datatableParts.CsDbcTable_ColAttribute">
            <summary>Used for col attribute providing.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataView">
            <summary>A file for a view class.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataView.#ctor(CsWpfBase.Db.codegen.architecture.parts.CsDbArcView,CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb)">
            <summary>Creates a new code set.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataView.CodeBundle">
            <summary>Gets the Owner.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataView.Architecture">
            <summary>Gets the underlaying architecture.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataView.Constants">
            <summary>Gets the constants used to point to a native column name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataView.Overrides">
            <summary>Override functions</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataView.SingularName">
            <summary>Gets or sets the SingularName.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataView.PluralName">
            <summary>Gets or sets the PluralName.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataView.Name">
            <summary>Gets or sets the Name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataView.NativeName">
            <summary>Gets or sets the NativeName.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataView.NativeNameConstant">
            <summary>Gets the name of the constant which provides the native name of the table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataView.PropertyName">
            <summary>This is the name of the property inside the DataSet.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataView.Row">
            <summary>The view row from the table.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRow">
            <summary>A file for a table class.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRow.#ctor(CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataTable)">
            <summary>Creates a new code set.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRow.Architecture">
            <summary>Gets the underlaying architecture.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRow.CodeBundle">
            <summary>Gets the Owner.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRow.Table">
            <summary>Gets the associated table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRow.Interface">
            <summary>Gets the associated interface</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRow.Columns">
            <summary>Gets the columns inside this data row.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRow.UnsignedColumns">
            <summary>Gets the columns inside this data row.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRow.PkColumn">
            <summary>Gets the primary key column.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRow.Methods">
            <summary>Gets the row reload method.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRow.NativeColumnNameToProperty">
            <summary>Gets the row reload method.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRow.Name">
            <summary>Gets or sets the Name.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataSet">
            <summary>A file for a table class.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataSet.#ctor(CsWpfBase.Db.codegen.architecture.parts.CsDbArcDatabase,CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb)">
            <summary>Creates a new code set.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataSet.Architecture">
            <summary>The underlaying architecture.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataSet.CodeBundle">
            <summary>Gets the owning code bundle.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataSet.Name">
            <summary>Gets or sets the Name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataSet.FullQualifiedName">
            <summary>Gets the full qualified type name.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataTable">
            <summary>A file for a table class.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataTable.#ctor(CsWpfBase.Db.codegen.architecture.parts.CsDbArcTable,CsWpfBase.Db.codegen.code.CsDbCodeBundleForDb)">
            <summary>Creates a new code set.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataTable.CodeBundle">
            <summary>Gets the Owner.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataTable.Architecture">
            <summary>Gets the underlaying architecture.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataTable.Row">
            <summary>Gets the associated row.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataTable.Methods">
            <summary>Gets the methods used by this table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataTable.Relations">
            <summary>The code base relations</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataTable.SingularName">
            <summary>Gets or sets the SingularName.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataTable.PluralName">
            <summary>Gets or sets the PluralName.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataTable.PropertyName">
            <summary>This is the name of the property inside the DataSet.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataTable.Name">
            <summary>Gets or sets the Name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataTable.NativeNameConstant">
            <summary>Gets the name of the constant which provides the native name of the table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataTable.NativeName">
            <summary>Gets or sets the NativeName.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.dataviewparts.overrides.CsDbcView_Overrides">
            <summary>Collapses the override function inside a view.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.columns.CsDbcViewRow_Column">
            <summary>The code for a column inside <see cref="T:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRow" /> code.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.columns.CsDbcViewRow_Column.#ctor(CsWpfBase.Db.codegen.architecture.parts.CsDbArcColumn,CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.CsDbcViewRow)">
            <summary>Creates a new column.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.columns.CsDbcViewRow_Column.CodeBundle">
            <summary>Gets the owning code base.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.columns.CsDbcViewRow_Column.Row">
            <summary>Gets the owning row.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.columns.CsDbcViewRow_Column.Architecture">
            <summary>Gets the underlaying architecture</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.columns.CsDbcViewRow_Column.NativeAttributes">
            <summary>Gets or sets the ColumnAttribute.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.columns.CsDbcViewRow_Column.DotNetAttributes">
            <summary>Gets or sets the CsDbDotNetAttribute.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.columns.CsDbcViewRow_Column.Name">
            <summary>Gets or sets the Name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.columns.CsDbcViewRow_Column.NativeNameConstant">
            <summary>Gets the name of the constant which holds the native name of the column.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.columns.CsDbcViewRow_UnsignedColumn">
            <summary>Used to wrap 'Unsigned_' data columns around another wrapper to provide unsigned values.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.columns.CsDbcViewRow_UnsignedColumn.#ctor(CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.columns.CsDbcViewRow_Column)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.columns.CsDbcViewRow_UnsignedColumn.Name">
            <summary>Gets the name of the unsigned property.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.CsDbcViewRow">
            <summary>Template for a row file for a view.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.CsDbcViewRow.Columns">
            <summary>Gets the columns associated with this row.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.CsDbcViewRow.Name">
            <summary>Gets or sets the Name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.dataviewparts.row.CsDbcViewRow.CodeBundle">
            <summary>Gets the owning code base.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.dataviewparts.constants.CsDbcView_Constant">
            <summary>Used as a Wrapper for a single constant.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.dataviewparts.constants.CsDbcView_Constant.Name">
            <summary>The name of the constant.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRowInterface">
            <summary>Used for the interface creation for a row.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.database.CsDbCodeDataRowInterface.Name">
            <summary>Gets the name of the interface.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.database.interfaceParts.CsDbcRowInterface_Member">
            <summary>a member of the interface.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.files.CsDbCodeNamespace">
            <summary>Provides a name space wrapper around source code.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.CsDbCodeNamespace.FileComment">
            <summary>Gets or sets the FileComment.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.CsDbCodeNamespace.Usings">
            <summary>Gets or sets the Usings.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.CsDbCodeNamespace.Namespace">
            <summary>Gets or sets the Namespace.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.files.CsDbCodeNamespace.Content">
            <summary>The Content inside of the namespace.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.code.namingconventions.NamingConvention">
            <summary>Used to specialize naming of database tables.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.namingconventions.NamingConvention.ParseFromLine(System.String,System.String)">
            <summary>Parses a convention from a character delimited string.</summary>
            <param name="line">The line must match the following convention: {NativeName};{TableClassName};{TableRowName};{TablePropertyName}</param>
            <param name="delimiter">The delimiter between each property</param>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.namingconventions.NamingConvention.ParseFromRow(System.Data.DataRow,System.Int32,System.Int32,System.Int32)">
            <summary>Parses a convention from a row.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.code.namingconventions.NamingConvention.ParseFromRow(System.Data.DataRow)">
            <summary>Parses a convention from a row with well defined column names.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.namingconventions.NamingConvention.NativeName">
            <summary>The native name of the table, view or relation.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.namingconventions.NamingConvention.Singular">
            <summary>Gets the singular name of the <see cref="P:CsWpfBase.Db.codegen.code.namingconventions.NamingConvention.NativeName" />.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.code.namingconventions.NamingConvention.Plural">
            <summary>Gets the plural name of the <see cref="P:CsWpfBase.Db.codegen.code.namingconventions.NamingConvention.NativeName" />.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.CsDbCodeGen">
            <summary>For further infos see <see cref="T:CsWpfBase.Db.CsDb" />.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.CsDbCodeGen.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.CsDbCodeGen.Convert">
            <summary>Convert functions.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.CsDbCodeGen.Statics">
            <summary>Static values needed for db functions.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.CsDbCodeGen.Create">
            <summary>Creates architectures or code.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.CsDbCodeGen.Tracing">
            <summary>Used for tracing messages while code is generating.</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.CsDbCodeGenConvert">
            <summary>For further infos see <see cref="T:CsWpfBase.Db.CsDb" />.</summary>
        </member>
        <member name="F:CsWpfBase.Db.codegen.CsDbCodeGenConvert.SqlDbTypeMappings">
            <summary>SqlDbType to c# type mapping</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.CsDbCodeGenConvert.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.CsDbCodeGenConvert.ToType(System.Data.SqlDbType)">
            <summary>Converts the <see cref="T:System.Data.SqlDbType" /> into the matching <see cref="T:System.Type" />.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.CsDbCodeGenConvert.ToMemberName(System.String,System.Boolean)">
            <summary>Converts a db name to a valid c# name</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.CsDbCodeGenCreate">
            <summary>see <see cref="T:CsWpfBase.Db.CsDb" />.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.CsDbCodeGenCreate.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.CsDbCodeGenCreate.Architecture_From_SqlCe(CsWpfBase.Db.router.CsDbRouter[])">
            <summary>Creates an architecture from SqlCe routers belonging to one context.</summary>
        </member>
        <member name="M:CsWpfBase.Db.codegen.CsDbCodeGenCreate.Architecture_From_Sql(System.String,System.String,System.String)">
            <summary>
                Creates the architecture from an new connection created with the following connection string:
                <para>Data Source={server};User id={user};Password={password}</para>
                The architecture contains all tables which are accessible by the specified user.
            </summary>
            <param name="server">The target server name</param>
            <param name="user">The user name for the connection</param>
            <param name="password">The password</param>
        </member>
        <member name="P:CsWpfBase.Db.codegen.CsDbCodeGenTracing.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="T:CsWpfBase.Db.codegen.CsDbCodeGenStatics">
            <summary>see CsDb property</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.CsDbCodeGenStatics.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.CsDbCodeGenStatics.NewGuidFunction">
            <summary>This is the value which will be used if the database default value is a function for creating a new guid.</summary>
        </member>
        <member name="P:CsWpfBase.Db.codegen.CsDbCodeGenStatics.DateTimeNowFunction">
            <summary>This is the value which will be used if the database default value is a function for creating the current date and time.</summary>
        </member>
        <member name="T:CsWpfBase.Db.router.CsDbRouter">
            <summary>
                Used to route database query's through a abstract database connection. This is the main operating interface of the whole <see cref="T:CsWpfBase.Db.CsDb" />
                namespace. Use it whenever data from an generic database is required.
            </summary>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.GetAdapter(System.Data.Common.DbCommand)">
            <summary>Creates a new <see cref="T:System.Data.Common.DbDataAdapter" /> of the specific type using the command. Do not change any settings of the data adapter.</summary>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.GetCommand">
            <summary>Returns a complete new instance of type <see cref="T:System.Data.Common.DbCommand"/>.</summary>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.GetCommandBuilder(System.Data.Common.DbDataAdapter)">
            <summary>Returns a complete new instance of type <see cref="T:System.Data.Common.DbCommandBuilder"/>. Use <paramref name="adapter"/> for initialization.</summary>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.Initialize">
            <summary>Returns a complete new instance of type <see cref="T:System.Data.Common.DbConnection"/>.</summary>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.Open">
            <summary>Opens the connection. If opening does not succeed exception will be stored in state.</summary>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.Close">
            <summary>Closes the connection if intilized and opened.</summary>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.LoadSchema(System.Data.DataSet,System.String)">
            <summary>Fill the target set with a table, this table is not filled but with the correct Schema. This is useful when adding new items to the table.</summary>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.LoadSchema(System.Data.DataTable,System.Object)">
            <summary>Fill the target table with the schema of the db, this table is not filled. This is useful when adding new items to the table.</summary>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.LoadSchema``1">
            <summary>
                Creates a new instance of a specific table, this table is not filled but filled with the schema of the table with name DataTable.TableName. This
                is useful when adding new items to the table.
            </summary>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.LoadTable(System.Data.DataTable)">
            <summary>Loads the complete db table into the target using the table name.</summary>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.LoadTable``1">
            <summary>Creates and load the complete db table into a new instance. Using the table name.</summary>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.SaveChanges(System.Data.DataTable,System.Object)">
            <summary>Securely saves the changes to the database.</summary>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.SaveChanges(System.Data.DataSet,System.Object)">
            <summary>Securely saves the changes to the database.</summary>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.ExecuteCommand(System.String,System.Object)">
            <summary>Executes a command and delivers the result.</summary>
            <returns>
                The number of rows successfully added to or refreshed in the DataSet. This does not include rows affected by statements that do not return
                rows.
            </returns>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.ExecuteDataSetCommand(System.String,System.Object)">
            <summary>Executes a command and delivers the result.</summary>
            <returns>
                The number of rows successfully added to or refreshed in the DataSet. This does not include rows affected by statements that do not return
                rows.
            </returns>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.ExecuteNonQuery(System.String,System.Object)">
            <summary>Executes a command and delivers the result.</summary>
        </member>
        <member name="P:CsWpfBase.Db.router.CsDbRouter.State">
            <summary>Current connection state.</summary>
        </member>
        <member name="P:CsWpfBase.Db.router.CsDbRouter.Connection">
            <summary>Gets or sets the Connection.</summary>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.GetDefaultAdapter(System.String)">
            <summary>Returns a <see cref="T:System.Data.Common.DbDataAdapter" /> with the specified command as <see cref="T:System.Data.Common.DbCommand" />.</summary>
            <param name="command">The command which needs to be associated with the <see cref="T:System.Data.Common.DbDataAdapter" />.</param>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.GetDefaultCommand(System.String)">
            <summary>
                Returns a <see cref="T:System.Data.Common.DbCommand" /> with the specified command as <paramref name="command" /> as content. Automatically sets the connection for
                the command.
            </summary>
        </member>
        <member name="M:CsWpfBase.Db.router.CsDbRouter.Dispose">
            <summary>
                All references to this object are freed by setting <see cref="E:CsWpfBase.Ev.Objects.Base.PropertyChanged" /> to null. In inherited
                classes override this method to free all other events.
            </summary>
        </member>
        <member name="T:CsWpfBase.Db.router.CsDbRouterState">
            <summary>The state of a connection.</summary>
        </member>
        <member name="P:CsWpfBase.Db.router.CsDbRouterState.IsConnecting">
            <summary>Gets if connection is currently building.</summary>
        </member>
        <member name="P:CsWpfBase.Db.router.CsDbRouterState.IsConnected">
            <summary>Gets if currently connected.</summary>
        </member>
        <member name="P:CsWpfBase.Db.router.CsDbRouterState.LastException">
            <summary>Gets or sets the LastException.</summary>
        </member>
        <member name="T:CsWpfBase.Db.interfaces.IContainDbProxy">
            <summary>Contains a connection, or a database proxy or something else.</summary>
        </member>
        <member name="P:CsWpfBase.Db.interfaces.IContainDbProxy.DbProxy">
            <summary>The db proxy all commands should be routed through this.</summary>
        </member>
        <member name="T:CsWpfBase.Db.interfaces.IDbProxyAssociateable">
            <summary>Used <see cref="T:CsWpfBase.Db.interfaces.IDbProxy" /> which can be initialized by the <see cref="M:CsWpfBase.Db.interfaces.IDbProxyAssociateable.Associate(System.String)" /> method.</summary>
        </member>
        <member name="M:CsWpfBase.Db.interfaces.IDbProxyAssociateable.Associate(System.String)">
            <summary>Associates the <see cref="T:CsWpfBase.Db.interfaces.IDbProxy" /> with a database name.</summary>
            <param name="catalogName">the name of the target data base.</param>
        </member>
        <member name="T:CsWpfBase.Db.interfaces.IDbProxy">
            <summary>Used whenever execute command functionality is needed.</summary>
        </member>
        <member name="M:CsWpfBase.Db.interfaces.IDbProxy.SaveChanges(System.Data.DataSet,System.Object)">
            <summary>Securely saves the changes to the database.</summary>
        </member>
        <member name="M:CsWpfBase.Db.interfaces.IDbProxy.SaveChanges(System.Data.DataTable,System.Object)">
            <summary>Securely saves the changes to the database.</summary>
        </member>
        <member name="M:CsWpfBase.Db.interfaces.IDbProxy.ExecuteCommand(System.String,System.Object)">
            <summary>Executes a command and delivers the result.</summary>
            <returns>
                The number of rows successfully added to or refreshed in the DataSet. This does not include rows affected by statements that do not return
                rows.
            </returns>
        </member>
        <member name="M:CsWpfBase.Db.interfaces.IDbProxy.ExecuteDataSetCommand(System.String,System.Object)">
            <summary>Executes a command and delivers the result.</summary>
            <returns>
                The number of rows successfully added to or refreshed in the DataSet. This does not include rows affected by statements that do not return
                rows.
            </returns>
        </member>
        <member name="M:CsWpfBase.Db.interfaces.IDbProxy.ExecuteNonQuery(System.String,System.Object)">
            <summary>Executes a command and delivers the result.</summary>
        </member>
        <member name="T:CsWpfBase.Db.CsDb">
            <summary>Database toolkit for connections with different data types.</summary>
        </member>
        <member name="P:CsWpfBase.Db.CsDb.CodeGen">
            <summary>Code generating</summary>
        </member>
        <member name="P:CsWpfBase.Db.CsDb.Statements">
            <summary>Useful statements for database operations.</summary>
        </member>
        <member name="T:CsWpfBase.Db.models.bases.CsDbContextBase">
            <summary>The base class for all db context.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbContextBase.Name">
            <summary>Gets the native database server name of the context.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbContextBase.Set_DbProxy``1">
            <summary>Sets all db proxy's inside this context.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbContextBase.LoadConstraints">
            <summary>Loads the constraints on all data sets inside this context.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbContextBase.GetDatabaseByName(System.String)">
            <summary>Retrieves the database by database name.</summary>
        </member>
        <member name="T:CsWpfBase.Db.models.bases.CsDbDataSetBase">
            <summary>The base class for all data sets generated by the cs db engine</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbDataSetBase.TableNames">
            <summary>Gets all table names owned by this data set.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbDataSetBase.CsDbRelations">
            <summary>Returns an array which contains all relations for this data set. You can also use the static property ReflectedRelations from the class.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbDataSetBase.CsDbRelationsPerTableType">
            <summary>Returns an array which contains all relations for this data set. You can also use the static property ReflectedRelations from the class.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbDataSetBase.LoadConstraints">
            <summary>First it loads the schema and after that it enforces the constraint's.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbDataSetBase.SaveAnabolic(System.Object)">
            <summary>Saves the tables in an order which is good for creating new items.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbDataSetBase.SaveKatabolic(System.Object)">
            <summary>Saves the tables in an order which is good for deleting items.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbDataSetBase.SchemaSet">
            <summary>Used as a database template for the schema.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbDataSetBase.GetTableByName(System.String)">
            <summary>Get the right table by its table name</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbDataSetBase.DataContextName">
            <summary>Gets the name of the owning context. this is typically the db server name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbDataSetBase.DbProxy">
            <summary>Tables inside can use this to execute commands.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbDataSetBase.GetChanges">
            <summary>Gets a copy of the dataset that contains all changes made to it since it was loaded or since <see cref="M:System.Data.DataSet.AcceptChanges" />.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbDataSetBase.SaveUnspecific(System.Object)">
            <summary>Universal save method can be used to save the data to the proxy without caring about anabolic order or katabolic order.</summary>
        </member>
        <member name="T:CsWpfBase.Db.models.bases.CsDbTableBase">
            <summary>The base object for all tables inside the db engine.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.DownloadRows">
            <summary><c>SELECT (DefaultSqlSelector) FROM [{TableName}]</c></summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.DownloadRows(System.Int32)">
            <summary><c>SELECT <paramref name="top" /> (DefaultSqlSelector) FROM [{TableName}]</c></summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.Generic_FindOrLoad(System.Object)">
            <summary>
                This is the generic method to select by the primary key. Try to find the <paramref name="primaryKeyValue" /> in local data. If
                <paramref name="primaryKeyValue" /> is not found it will be loaded from database.
            </summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.Generic_LoadThenFind(System.Object)">
            <summary>
                This is the generic method to select by the primary key. Load or update data from database then try to find <paramref name="primaryKeyValue" />
                in local data.
            </summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.Generic_Find(System.Object)">
            <summary>This is the generic method to select by the primary key. Try to find <paramref name="primaryKeyValue" /> in local data.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbTableBase.Generic_Collection">
            <summary>This is the generic version of the Collection property.</summary>
        </member>
        <member name="E:CsWpfBase.Db.models.bases.CsDbTableBase.PropertyChanged">
            <summary>occurs whenever a cell changes or a property inside this class.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbTableBase.DbProxy">
            <summary>The db proxy all commands should be routed through this.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbTableBase.DefaultSqlSelector">
            <summary>The default sql column selector used by the generated properties. (SELECT {DefaultSqlSelector} FROM ...</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.SetProperty``1(``0@,``0,System.String)">
            <summary>Sets the property and calls on property changed if anything have changed.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.OnPropertyChanged(System.String)">
            <summary>
                Invokes the property changed event for a value. IMPORTENT: Also sends property changed for all depending properties. Use
                <see cref="T:System.Windows.Markup.DependsOnAttribute" /> to specify properties that depends on other properties.
            </summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.RaisePropertyChanged(System.String)">
            <summary>Invokes the property changed event for a property.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.RowInternalPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>Occurs whenever a property changes inside a row.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.OnRowChanged(System.Data.DataRowChangeEventArgs)">
            <summary>Raises the <see cref="E:System.Data.DataTable.RowChanged" /> event.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
            <summary>Raises the <see cref="E:System.Data.DataTable.RowDeleted" /> event.</summary>
            <param name="e">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.OnColumnChanged(System.Data.DataColumnChangeEventArgs)">
            <summary>Occurs whenever a value of a column changes directly.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbTableBase.HasBeenLoaded">
            <summary>If HasBeenLoaded equals true, the generated properties will not execute a sql command. Instead it will search in the locally available data.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbTableBase.DataSet">
            <summary>Gets the owning data set.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbTableBase.DataContext">
            <summary>Gets the owning data context.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.GetRelations">
            <summary>Gets the relations for this table type.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.SaveChanges(System.Object)">
            <summary>Saves the changes of the table to the proxy</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.LoadSchema">
            <summary>Loads only the schema of the table, no data. This method is secured from multiple invocations.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.CloneTo_Native">
            <summary>Creates a new native table with the schema and data from the current fixed table.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbTableBase.SqlParam(System.String)">
            <summary>Converts a value to a valid sql param</summary>
        </member>
        <member name="T:CsWpfBase.Db.models.bases.CsDbRowBase">
            <summary>The base class for all rows used by the db engine.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbRowBase.#ctor(System.Data.DataRowBuilder)">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbRowBase.ApplyDefaults">
            <summary>Applys the database default values to the row.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbRowBase.ApplyExtendedDefaults">
            <summary>Applys the database extended default values, described by developer, to the row.</summary>
        </member>
        <member name="E:CsWpfBase.Db.models.bases.CsDbRowBase.PropertyChanged">
            <summary>occurs whenever a cell changes or a property inside this class.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbRowBase.DbProxy">
            <summary>The db proxy all commands should be routed through this.</summary>
        </member>
        <member name="E:CsWpfBase.Db.models.bases.CsDbRowBase.InternalPropertyChanged">
            <summary>occurs whenever a cell changes or a property inside this class.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbRowBase.GetDbValue``1(System.String,System.String)">
            <summary>Get the value of a column by the native column name</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbRowBase.SetProperty``1(``0@,``0,System.String)">
            <summary>Sets the property and calls on property changed if anything have changed.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbRowBase.OnPropertyChanged(System.String)">
            <summary>
                Invokes the property changed event for a value. IMPORTENT: Also sends property changed for all depending properties. Use
                <see cref="T:System.Windows.Markup.DependsOnAttribute" /> to specify properties that depends on other properties.
            </summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbRowBase.RaisePropertyChanged(System.String)">
            <summary>Invokes the property changed event for a property.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbRowBase.OnColumnChanged(System.String)">
            <summary>Used to notify about change if user changes the data base field directly.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbRowBase.OnRowChanged">
            <summary>Used to notify about change if user changes the data base field directly.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbRowBase.Table">
            <summary>Gets the owning table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbRowBase.DataSet">
            <summary>Gets the owning DataSet.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbRowBase.DataContext">
            <summary>Gets the owning Context.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbRowBase.IsPropertyChangedHandled">
            <summary>Get a value which defines if the property changed event is currently used</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.bases.CsDbRowBase.ChangeLock">
            <summary>Used to prevent duplicated <see cref="M:CsWpfBase.Db.models.bases.CsDbRowBase.OnPropertyChanged(System.String)" /> invocation. While Outsie cannot invoke property changed.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbRowBase.GetRelations">
            <summary>Gets the relations for this row type.</summary>
        </member>
        <member name="T:CsWpfBase.Db.models.bases.CsDbRowBase.EnumWrapper">
            <summary>Helper method for enum wrapping property's</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbRowBase.EnumWrapper.Get``1(System.Object,``0)">
            <summary>Gets the value from the column value.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.bases.CsDbRowBase.EnumWrapper.Set(System.Action)">
            <summary>Sets the column value.</summary>
        </member>
        <member name="T:CsWpfBase.Db.models.CsDbDataContext">
            <summary>The base class for database context.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.CsDbDataContext.Sets">
            <summary>A list of all available data sets.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbDataContext.SaveTo_Bytes">
            <summary>Serializes this context into a binary.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbDataContext.LoadFrom_Bytes(System.Byte[])">
            <summary>Deserializes this context from binary.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbDataContext.GetSet``1(``0@)">
            <summary>Get the associated data set.</summary>
        </member>
        <member name="T:CsWpfBase.Db.models.CsDbDataSet">
            <summary>The base class for all data sets generated by the cs db engine</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbDataSet.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.CsDbDataSet.Collection">
            <summary>Gets the bind able collection of the tables. This is useful in binding scenery's</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.CsDbDataSet.DataContext">
            <summary>Gets the owning data context for this data set. The owning context is the relative addressing method for other databases on the same server.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbDataSet.LoadSchema">
            <summary>Load all schema from all tables.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbDataSet.Set_DbProxy``1">
            <summary>Sets the db proxy by an <see cref="T:CsWpfBase.Db.interfaces.IDbProxyAssociateable"/> type.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbDataSet.Set_DbProxy(CsWpfBase.Db.interfaces.IDbProxy)">
            <summary>Sets the db proxy.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbDataSet.ExecuteCommand(System.String,System.Boolean)">
            <summary>
                Executes a command on a data set. The results tables have to match with the native table names in data base. Otherwise the tables cannot be
                associated to the right table.
            </summary>
            <param name="command">The sql command which delivers multiple tables.</param>
            <param name="preserveChanges">if true, the current row version will not be changed.</param>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbDataSet.CloneTo_Native">
            <summary>Creates a new native data set with the schema and data from the current fixed typed dataset.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbDataSet.LoadFrom_Native(System.Data.DataSet)">
            <summary>Loads the data from the native dataset.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbDataSet.SetHasBeenLoaded(System.Boolean)">
            <summary>Overrides the has been loaded flag on all tables</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbDataSet.GetTable``1(System.String)">
            <summary>Find a table inside the table collection. If it does not exist create it.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbDataSet.AddRelation(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Data.Rule,System.Data.Rule)">
            <summary>Adds the specific set of arguments as an relation to the data set.</summary>
            <param name="name">The name of the relation.</param>
            <param name="parent">the parent data column.</param>
            <param name="child">the child column.</param>
            <param name="deleteRule">the delete rule for the relation.</param>
            <param name="updateRule">the update rule for the relation.</param>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbDataSet.AddAnabolicChanges(System.Data.DataSet,System.Data.DataTable)">
            <summary>Adds anabolic changes to a specific data set. This means only added and modified rows will be included.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbDataSet.AddKatabolicChanges(System.Data.DataSet,System.Data.DataTable)">
            <summary>Adds katabolic changes to a specific data set. This means only deleted and modified rows will be included.</summary>
        </member>
        <member name="T:CsWpfBase.Db.models.CsDbTable">
            <summary>The base for each row inside the db engine.</summary>
        </member>
        <member name="T:CsWpfBase.Db.models.CsDbTable`1">
            <summary>The base for each row inside the db engine.</summary>
        </member>
        <member name="F:CsWpfBase.Db.models.CsDbTable`1.ContractReferences">
            <summary>All contracts handled by this table.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTable`1.OnRowChanged(System.Data.DataRowChangeEventArgs)">
            <summary>Raises the <see cref="E:System.Data.DataTable.RowChanged" /> event.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTable`1.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
            <summary>Raises the <see cref="E:System.Data.DataTable.RowDeleted" /> event.</summary>
            <param name="e">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data. </param>
        </member>
        <member name="P:CsWpfBase.Db.models.CsDbTable`1.Generic_Collection">
            <summary>This is the generic version of the Collection property.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTable`1.RowInternalPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>Occurs whenever a property changes inside a row.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTable`1.GetRowType">
            <summary>Gets the generic row type.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTable`1.NewRowFromBuilder(System.Data.DataRowBuilder)">
            <summary>Creates a specified generic type as <see cref="T:System.Data.DataRow" /> for this <see cref="T:System.Data.DataSet" />.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTable`1.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTable`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.CsDbTable`1.Collection">
            <summary>Gets a bind able collection which can be sorted.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.CsDbTable`1.Item(System.Int32)">
            <summary>Gets the row at the specific position.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.CsDbTable`1.Contracts">
            <summary>Returns all active contracts</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTable`1.CreateContractCollection(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Collections.Generic.IEnumerable{`0})">
            <summary>Creates a new contract by defining a condition. The <see cref="T:CsWpfBase.Db.models.helper.ContractCollection`1" /> itself takes care of the refreshing.</summary>
            <param name="condition">The condition is used to check new rows against that condition and add it to the collection if needed.</param>
            <param name="initialCatalog">
                The initial catalog is the list of rows which should be checked at the initialization process. Subsequent filtering will be processed over the
                whole table.
            </param>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTable`1.Select(System.String)">
            <summary>Selects specified rows. local data only</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTable`1.Select(System.String,System.String)">
            <summary>Selects specified rows and order by <paramref name="sort" />. local data only</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTable`1.Select(System.String,System.String,System.Data.DataViewRowState)">
            <summary>Selects specified rows and order by <paramref name="sort" />. local data only</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTable`1.NewRow">
            <summary>
                Creates a new row but do not add it to the collection. This does automatically apply's the default values to the rows specified by the
                <see cref="M:CsWpfBase.Db.models.bases.CsDbRowBase.ApplyDefaults" /> method.
            </summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTable`1.Add(`0)">
            <summary>Adds a row by adding it to the rows collection</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTable`1.DownloadRows(System.String,System.Boolean,System.Boolean)">
            <summary>
                Loads the rows from the data base by passing the <paramref name="sqlcommand" /> to the <see cref="P:CsWpfBase.Db.models.bases.CsDbTableBase.DbProxy" /> instance. The Result
                will be merged into the 'loading table' (=Caching).
            </summary>
            <param name="sqlcommand">The sql command which should be processed</param>
            <param name="createCollection">
                Specify whether the result should be analyzed and packed to a collection, which will be returned from this method. If you do not use the return
                value set this param to false.
            </param>
            <param name="preserveChanges">Specify whether the current changes should be preserved. If you specify false, all changes will be overwritten.</param>
        </member>
        <member name="T:CsWpfBase.Db.models.CsDbTableRow">
            <summary>The base for each row inside the db engine.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTableRow.#ctor(System.Data.DataRowBuilder)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.CsDbTableRow.PkValue">
            <summary>Gets the value from the primary key column on this row.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTableRow.SetDbValue``1(``0,System.String,System.String)">
            <summary>sets the value of a column and notify property changed.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTableRow.Copy_BundledData_Into_DataSet(CsWpfBase.Db.models.CsDbDataSet)">
            <summary>
                Loads the complete data bundle of the current row into a target data set.
                <para>A data bundle is defined as a set of all rows inside a database which are connected via relations.</para>
                <para>The currently selected row is the root of the bundle</para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTableRow.Copy_BundledData_In_New_DataSet">
            <summary>
                Loads the complete data bundle of the current row into a new data set.
                <para>A data bundle is defined as a set of rows inside a database which are connected via relations.</para>
                <para>The currently selected row is the root of the bundle</para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbTableRow.Download_BundledData">
            <summary>
                Loads the complete data bundle of the current row into the actual data set.
                <para>A data bundle is defined as a set of rows inside a database which are connected via relations.</para>
                <para>The currently selected row is the root of the bundle</para>
            </summary>
        </member>
        <member name="T:CsWpfBase.Db.models.CsDbView`1">
            <summary>The base for each row inside the db engine.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbView`1.Generic_FindOrLoad(System.Object)">
            <summary>This method is not supported on Views.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbView`1.Generic_LoadThenFind(System.Object)">
            <summary>This method is not supported on Views.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbView`1.Generic_Find(System.Object)">
            <summary>This method is not supported on Views.</summary>
        </member>
        <member name="T:CsWpfBase.Db.models.CsDbViewRow">
            <summary>The base for each row inside the db engine.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbViewRow.#ctor(System.Data.DataRowBuilder)">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.CsDbViewRow.ApplyDefaults">
            <summary>This method is not implemented on Views.</summary>
        </member>
        <member name="T:CsWpfBase.Db.models.helper.ContractCollection">
            <summary>
                A full bind able collection. This collection is bound to a table and a contract. The collection will be automatically filled with the items which
                meets the requirements of the contract.
            </summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.ContractCollection.Count">
            <summary>The items count.</summary>
        </member>
        <member name="E:CsWpfBase.Db.models.helper.ContractCollection.CollectionChanged">
            <summary>Occurs whenever the collection changes</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.ContractCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.ContractCollection.Item(System.Int32)">
            <summary>Gets the item at the specific position.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.ContractCollection.Tag">
            <summary>Gets or sets the Tag.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.ContractCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>invokes the collection changed event</summary>
            <param name="e"></param>
        </member>
        <member name="T:CsWpfBase.Db.models.helper.ContractCollection`1">
            <summary>
                A full bind able collection. This collection is bound to a table and a contract. The collection will be automatically filled with the items which
                meets the requirements of the contract.
            </summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.ContractCollection`1.#ctor(CsWpfBase.Db.models.CsDbTable{`0},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Creates a new collection which is based on a <paramref name="table" /> and a contract. The contract is used to validate a row inside the table.
                If the contract returns true the row will be added to the collection.
            </summary>
            <param name="table">The table this collection belongs to.</param>
            <param name="condition">
                If the result of this function is true the item will be included in this collection. Otherwise the item will be deleted or
                not included.
            </param>
            <param name="startingCollection">
                The collection to start with. If collection is null the whole table will be searched and validated with
                <paramref name="condition" />.
            </param>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.ContractCollection`1.Count">
            <summary>The items count.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.ContractCollection`1.Finalize">
            <summary>Destructor</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.ContractCollection`1.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.ContractCollection`1.Condition">
            <summary>The contract is a function which validates an item whether it belongs to the collection or not.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.ContractCollection`1.Table">
            <summary>The owning table of this collection.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.ContractCollection`1.Item(System.Int32)">
            <summary>Gets the item at the specific position.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.ContractCollection`1.Evaluate">
            <summary>Revalidates the contract on all items inside the owning table. This can be useful if contract condition changes.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.ContractCollection`1.Sort(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Sorts the list.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.ContractCollection`1.SortDesc(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Sorts the list.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.ContractCollection`1.AddCondition(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>Adds another condition 'which will be and combined' to the current condition set and evaluates the collection.</summary>
            <param name="condition"></param>
        </member>
        <member name="T:CsWpfBase.Db.models.helper.CsDbRelation">
            <summary>Storage class for db relations. Use this object whenever you need some dynamic database operations @ runtime.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsDbRelation.#ctor(System.Type,System.Type,System.Type,System.Type,System.String,System.String,System.String,System.String,System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbRelation.PkTableType">
            <summary>Gets the table type of the primary key table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbRelation.PkRowType">
            <summary>Gets the row type of the primary key table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbRelation.FkTableType">
            <summary>Gets the table type of the foreign key table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbRelation.FkRowType">
            <summary>Gets the row type of the foreign key table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbRelation.PkTableName">
            <summary>Gets the name of the primary key table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbRelation.PkColumnName">
            <summary>Gets the name of the primary key column.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbRelation.FkTableName">
            <summary>Gets the name of the foreign key table.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbRelation.FkColumnName">
            <summary>Gets the name of the foreign key column.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbRelation.PkColumnProperty">
            <summary>The reflected property info of the primary key column.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbRelation.FkColumnProperty">
            <summary>The reflected property info for the foreign key column.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbRelation.PkReferenceProperty">
            <summary>The reflected property for the reference towards the primary key row.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbRelation.FkReferenceProperty">
            <summary>The reflected property for the reference towards the foreign key rows.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsDbRelation.GetPkValueFromPkRow(System.Object)">
            <summary>Get the value of the pk column on a specific row. Returns null if <paramref name="row" /> is null.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsDbRelation.GetFkValueFromFkRow(System.Object)">
            <summary>Get the value of the fk column on a specific row. Returns null if <paramref name="row" /> is null.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsDbRelation.GetPkRowFromFkRow(System.Object)">
            <summary>Get the value of the pk column on a specific row. Returns null if <paramref name="row" /> is null.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsDbRelation.GetFkRowsFromPkRow(System.Object)">
            <summary>Get the value of the fk column on a specific row. Returns null if <paramref name="row" /> is null.</summary>
        </member>
        <member name="T:CsWpfBase.Db.models.helper.CsDbTableRowCollection`1">
            <summary>A bind able collection extension for the <see cref="T:CsWpfBase.Db.models.CsDbTable`1" />.</summary>
        </member>
        <member name="E:CsWpfBase.Db.models.helper.CsDbTableRowCollection`1.PropertyChanged">
            <summary>Occurs whenever a property changes.</summary>
        </member>
        <member name="E:CsWpfBase.Db.models.helper.CsDbTableRowCollection`1.CollectionChanged">
            <summary>Occurs whenever th collection changes.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsDbTableRowCollection`1.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsDbTableRowCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbTableRowCollection`1.Count">
            <summary>The items count.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbTableRowCollection`1.Item(System.Int32)">
            <summary>Gets the item at the specific position.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsDbTableRowCollection`1.Sort(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean)">
            <summary>
                Sorts the collection by a given property. The sort algorithm checks the properties which are accessed by the <paramref name="by" /> method and
                listens to the associated property changed event on the rows. If <paramref name="by" /> equals null the sort engine stops to sort.
            </summary>
            <param name="by">The method to select a property on the row</param>
            <param name="autosort">if activated the collection takes care of resorting the list if needed.</param>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsDbTableRowCollection`1.SortDes(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean)">
            <summary>
                Sorts the collection by a given property descending. The sort algorithm checks the properties which are accessed by the <paramref name="by" />
                method and listens to the associated property changed event on the rows. If <paramref name="by" /> equals null the sort engine stops to sort.
            </summary>
            <param name="by">The method to select a property on the row</param>
            <param name="autosort">if activated the collection takes care of resorting the list if needed.</param>
        </member>
        <member name="T:CsWpfBase.Db.models.helper.CsWeakReference`1">
            <summary>Represents a weak reference, which references an object while still allowing that object to be reclaimed by garbage collection.</summary>
            <typeparam name="T">The type of the object that is referenced.</typeparam>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsWeakReference`1.#ctor(`0)">
            <summary>Initializes a new instance of the CsWeakReference{T} class, referencing the specified object.</summary>
            <param name="target">The object to reference.</param>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsWeakReference`1.#ctor(`0,System.Boolean)">
            <summary>Initializes a new instance of the CsWeakReference{T} class, referencing the specified object and using the specified resurrection tracking.</summary>
            <param name="target">An object to track.</param>
            <param name="trackResurrection">
                Indicates when to stop tracking the object. If true, the object is tracked after finalization; if false, the object is only tracked until
                finalization.
            </param>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsWeakReference`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance of the CsWeakReference{T} class, referencing the specified object and using the specified resurrection tracking.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsWeakReference`1.Target">
            <summary>Gets or sets the object (the target) referenced by the current CsWeakReference{T} object.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsWeakReference`1.TryGetTarget(`0@)">
            <summary>Try to get the value</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsWeakReference`1.SetTarget(`0)">
            <summary>Sets the target</summary>
        </member>
        <member name="T:CsWpfBase.Db.models.helper.CsDbRouter_SqlDirect">
            <summary>A class used for the cs db tools to directly connect with a database.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsDbRouter_SqlDirect.Associate(System.String)">
            <summary>Associates the <see cref="T:CsWpfBase.Db.interfaces.IDbProxy" /> with a database name.</summary>
            <param name="catalogName">the name of the target data base.</param>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsDbRouter_SqlDirect.GetAdapter(System.Data.Common.DbCommand)">
            <summary>Gets a data adapter with the specified command.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsDbRouter_SqlDirect.GetCommand">
            <summary>Gets a db command.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsDbRouter_SqlDirect.GetCommandBuilder(System.Data.Common.DbDataAdapter)">
            <summary>Get command builder.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsDbRouter_SqlDirect.Initialize">
            <summary>Creates a new instance of <see cref="T:System.Data.Common.DbConnection" />.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsDbRouter_SqlDirect.ExecuteDataSetCommand(System.String,System.Object)">
            <summary>Executes a command and delivers the result.</summary>
            <returns>
                The number of rows successfully added to or refreshed in the DataSet. This does not include rows affected by statements that do not return
                rows.
            </returns>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbRouter_SqlDirect.Catalog">
            <summary>The name of the catalog</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbRouter_SqlDirect.DataSource">
            <summary>The name of the server which needs to be connected.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbRouter_SqlDirect.UserName">
            <summary>The user name.</summary>
        </member>
        <member name="P:CsWpfBase.Db.models.helper.CsDbRouter_SqlDirect.Password">
            <summary>The password.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.helper.CsDbRouter_SqlDirect.ResetConnectionString">
            <summary>Sets the connection string which is used to directly connect to the databse.</summary>
        </member>
        <member name="M:CsWpfBase.Db.models.internalhelper.CsDbTraceProxy.ExecuteNonQuery(System.String,System.Object)">
            <summary>Executes a command and delivers the result.</summary>
        </member>
        <member name="T:CsWpfBase.Db.statements.CsDbStatements">
            <summary></summary>
        </member>
        <member name="P:CsWpfBase.Db.statements.CsDbStatements.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Db.statements.CsDbStatements.SqlCe">
            <summary>Collapses statements which can be used for an SQLCE database.</summary>
        </member>
        <member name="T:CsWpfBase.Db.statements.sqlce.SqlCeStatements">
            <summary></summary>
        </member>
        <member name="P:CsWpfBase.Db.statements.sqlce.SqlCeStatements.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Db.statements.sqlce.SqlCeStatements.GetTimeBetweenSelector(System.String,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
                Returns a selector for searching time values in a datetime column for dates between <paramref name="from" /> and <paramref name="to" />. The
                return value can be used in WHERE clause.
                <code>
            SELECT * FROM WHERE {returnvalue} AND ... ORDER BY ...
            </code>
            </summary>
            <param name="column">The datetime column.</param>
            <param name="from">The datetime from</param>
            <param name="to">The datetime to</param>
            <param name="normalizeToDay">normalize to day means ignore time.</param>
        </member>
        <member name="T:CsWpfBase.Db.tools.controls.CsDbDataSetEditor">
            <summary>Interaction logic for CsDbDataSetEditor.xaml</summary>
            <summary>
            CsDbDataSetEditor
            </summary>
        </member>
        <member name="F:CsWpfBase.Db.tools.controls.CsDbDataSetEditor.ItemSourceProperty">
            <summary>The data set item source property.</summary>
        </member>
        <member name="M:CsWpfBase.Db.tools.controls.CsDbDataSetEditor.#ctor">
            <summary>Creates a nwe instance of the data set editor.</summary>
        </member>
        <member name="P:CsWpfBase.Db.tools.controls.CsDbDataSetEditor.ItemSource">
            <summary>The data set which needs to be edited.</summary>
        </member>
        <member name="M:CsWpfBase.Db.tools.controls.CsDbDataSetEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CsWpfBase.Db.tools.controls.CsDbTableEditor">
            <summary>Interaction logic for CsDbTableEditor.xaml</summary>
            <summary>
            CsDbTableEditor
            </summary>
        </member>
        <member name="M:CsWpfBase.Db.tools.controls.CsDbTableEditor.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CsWpfBase.Db.tools.rowbundlecreators.RowBundleCreator">
            <summary>Used to create data bundles, usually beginning with one row witch is connected through a network of relations.</summary>
        </member>
        <member name="M:CsWpfBase.Db.tools.rowbundlecreators.RowBundleCreator.#ctor(CsWpfBase.Db.models.CsDbTableRow,CsWpfBase.Db.models.CsDbDataSet)">
            <summary>Creates a new bundle creator instance, can be used to copy the whole network around a row into another dataset.</summary>
        </member>
        <member name="M:CsWpfBase.Db.tools.rowbundlecreators.RowBundleCreator.StartTransfer">
            <summary>Starts the transfer.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Attributes.EnumDescriptionAttribute">
            <summary>Expand default Description attribute with an DisplayNameDescription</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Attributes.EnumDescriptionAttribute.#ctor(System.String,System.String)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Attributes.EnumDescriptionAttribute.Name">
            <summary>The display name of the enum.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Exceptions.CsGlobalException">
            <summary>Used for all exceptions thrown by this application.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Exceptions.CsGlobalFunctionNotConfiguredException">
            <summary>Occurs whenever a function is not installed prior to usage or is currently not supported by application type.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Objects.Base">
            <summary>Base, serialize- and bind- able, super base type. Provides different methods.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.Base.Dispose">
            <summary>
                All references to this object are freed by setting <see cref="E:CsWpfBase.Ev.Objects.Base.PropertyChanged" /> to null. In inherited
                classes override this method to free all other events.
            </summary>
        </member>
        <member name="E:CsWpfBase.Ev.Objects.Base.PropertyChanged">
            <summary>Thread comprehensive property changed implementation.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.Base.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.Base.RaisePropertyChange(CsWpfBase.Ev.Objects.Base,System.String)">
            <summary>Invokes the <see cref="E:CsWpfBase.Ev.Objects.Base.PropertyChanged" /> event. Equivalent for protected <see cref="M:CsWpfBase.Ev.Objects.Base.OnPropertyChanged(System.String)" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.Base.RaiseAllPropertyChanged(CsWpfBase.Ev.Objects.Base)">
            <summary>Invokes the <see cref="E:CsWpfBase.Ev.Objects.Base.PropertyChanged" /> event for all property's in a <see cref="T:CsWpfBase.Ev.Objects.Base" /> using
                <see cref="N:System.Reflection" />
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.Base.SetProperty``1(``0@,``0,System.String)">
            <summary>
                Implementation of the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface. Checks whether the backing field
                already provides this reference or value. If backing field provides the same value, no notification is sent, if you
                want to force a notification use <see cref="M:CsWpfBase.Ev.Objects.Base.OnPropertyChanged(System.String)" />
            </summary>
            <typeparam name="T">the generic controller, used to provide intellisense feature.</typeparam>
            <param name="backingField">The backing field where the property stores the reference</param>
            <param name="value">The new value.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.Base.OnPropertyChanged(System.String)">
            <summary>Sends a notification to <see cref="E:CsWpfBase.Ev.Objects.Base.PropertyChanged" /> subscriber.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Objects.BaseRegister`1">
            <summary>
                A register is used whenever a List is needed but the list functions should be hidden from outer side. Thread
                comprehensive <see cref="T:System.Collections.Specialized.INotifyCollectionChanged" /> mechanism, to ensure that updates gets correctly dispatched
                to Ui if needed.
                <para>
                    CAVE: When using this list with Ui don't use it in combination with <see cref="T:System.Windows.Data.CollectionView" />
                    this could result in deadlocks or unpredictable behaviors. Instead use <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />
                    and dispatch all changes by yourself.
                </para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.CheckReentrancy">
            <summary>
                Checks whether the register is currently firing CollectionChanged event and is modified while invoking. The
                List allows changes only on the last invocation in the CollectionChanged event. This method should be called before
                any changes are applied to the source list. This prevents restricted modifications which could lead to
                unpredictable behaviors.
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.OnCountChanged">
            <summary>Sends a property changed event for the count property</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.OnIndexerChanged">
            <summary>Sends a property changed event for the current List indexer [].</summary>
        </member>
        <member name="F:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChangedInvocationList">
            <summary>Defines the invocation list for the <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" /> event.</summary>
        </member>
        <member name="F:CsWpfBase.Ev.Objects.BaseRegister`1._isInCollectionChangeMode">
            <summary>This bool is used to prevent reentrant while firing the <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" /> event.</summary>
        </member>
        <member name="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged">
            <summary>
                Invokes automatically on UI.
                <para>
                    CAVE: When the event is fired there could already been a lot of other changes to the list. This unpredictable
                    behavior comes from the async dispatch mechanism. This event shouldn't be used by anyone, using this event in
                    combination with enumeration of the list could result in unpredictable behavior.
                </para>
                <para>There is no problem with this event when used in web context.</para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                Automatically dispatches all changes to the ui dispatcher if one is available (only available in WPF
                applications). By calling <see cref="M:CsWpfBase.Ev.Objects.BaseRegister`1.InvokeCollectionChangedDelegates(System.Delegate[],System.Collections.Specialized.NotifyCollectionChangedEventArgs)" /> it also avoids changes while
                <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" /> is firing.
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.InvokeCollectionChangedDelegates(System.Delegate[],System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                Invokes the invocation list (<see cref="F:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChangedInvocationList" />) and prevents changes while firing.
                <para>
                    Include 'DEBUGLOCKS' flag as build attribute to see whenever this method is called-> look forward to NCCEA in
                    Debug window.
                </para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.GetEnumerator">
            <summary>Use this method to override all enumerators accessed through this class.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.BaseRegister`1.Item(System.Int32)">
            <summary>Gets or sets an item in the list.</summary>
            <exception cref="T:System.AccessViolationException">Throws when change is made while firing <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" />
                event.</exception>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.BaseRegister`1.Count">
            <summary>Gets the amount of items in the register. Internal calls <see cref="P:System.Collections.Generic.List`1.Count" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.Contains(`0)">
            <summary>Determines whether an element is in the Register. Internal calls <see cref="M:System.Collections.Generic.List`1.Contains(`0)" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.IndexOf(`0)">
            <summary>Determines the index of a specific item in the IList. Internal calls <see cref="M:System.Collections.Generic.List`1.IndexOf(`0)" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.ForEach(System.Action{`0})">
            <summary>Iterates through register.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.Replace(System.Collections.Generic.IEnumerable{`0})">
            <summary>Replaces the internal List (<see cref="P:CsWpfBase.Ev.Objects.BaseRegister`1.InternalList" />) with an <see cref="T:System.Collections.Generic.IEnumerable`1" />.</summary>
            <exception cref="T:System.AccessViolationException">Throws when change is made while firing <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" />
                event.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.Add(`0)">
            <summary>First re entrance is checked and then adds an item to the collection. <see cref="M:System.Collections.Generic.List`1.Add(`0)" /></summary>
            <exception cref="T:System.AccessViolationException">Throws when change is made while firing <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" />
                event.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.Add(System.Collections.Generic.IEnumerable{`0})">
            <summary>First re entrance is checked and then adds items to the collection.</summary>
            <exception cref="T:System.AccessViolationException">Throws when change is made while firing <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" />
                event.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.Insert(System.Int32,`0)">
            <summary>First re entrance is checked and then inserts an item to the collection. <see cref="M:System.Collections.Generic.List`1.Insert(System.Int32,`0)" /></summary>
            <exception cref="T:System.AccessViolationException">Throws when change is made while firing <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" />
                event.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.Remove(`0)">
            <summary>First re entrance is checked and then removes an item from the collection. <see cref="M:System.Collections.Generic.List`1.Remove(`0)" /></summary>
            <exception cref="T:System.AccessViolationException">Throws when change is made while firing <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" />
                event.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.Remove(System.Collections.Generic.IEnumerable{`0})">
            <summary>First re entrance is checked and then removes items from the collection.</summary>
            <exception cref="T:System.AccessViolationException">Throws when change is made while firing <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" />
                event.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.RemoveAt(System.Int32)">
            <summary>First re entrance is checked and then removes an item from the collection. <see cref="M:System.Collections.Generic.List`1.RemoveAt(System.Int32)" /></summary>
            <exception cref="T:System.AccessViolationException">Throws when change is made while firing <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" />
                event.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.Clear">
            <summary>First re entrance is checked and then clears the collection. <see cref="M:System.Collections.Generic.List`1.Clear" /></summary>
            <exception cref="T:System.AccessViolationException">Throws when change is made while firing <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" />
                event.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.Move(System.Int32,System.Int32)">
            <summary>First re entrance is checked and then moves an item in the collection. </summary>
            <exception cref="T:System.AccessViolationException">Throws when change is made while firing <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" />
                event.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.CopyTo(`0[],System.Int32)">
            <summary>First re entrance is checked and then copy's the collection to an array.
                <see cref="M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)" />
            </summary>
            <exception cref="T:System.AccessViolationException">Throws when change is made while firing <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" />
                event.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.Sort(System.Func{`0,System.Object})">
            <summary>First re entrance is checked and then collection is sorted.</summary>
            <exception cref="T:System.AccessViolationException">Throws when change is made while firing <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" />
                event.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilate``1(System.Collections.Generic.IEnumerable{``0},CsWpfBase.Ev.Objects.BaseRegister{`0}.Assimilator{``0})">
            <summary>
                Change this collection to look like a model. Uses an <see cref="T:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilator`1" /> to compare and convert
                items.
            </summary>
            <typeparam name="TN"></typeparam>
            <param name="model">The model which is used to modify this collection</param>
            <param name="assimilator">
                An specific <see cref="T:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilator`1" /> which is capable to convert and compare items from
                model to this collection.
            </param>
            <exception cref="T:System.IO.InvalidDataException">Throws when the list consists of value types. Value types are not allowed</exception>
            <exception cref="T:System.InvalidOperationException">
                Throws when no convert mechanism is defined in the
                <paramref name="assimilator" />.
            </exception>
            <exception cref="T:System.AccessViolationException">
                Throws when change is made while firing <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" />
                event.
            </exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilate(System.Collections.Generic.IEnumerable{`0},CsWpfBase.Ev.Objects.BaseRegister{`0}.Assimilator)">
            <summary>Change this collection to look like a model. Uses an <see cref="T:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilator" /> to compare and convert items.</summary>
            <param name="model">The model which is used to modify this collection</param>
            <param name="assimilator">
                An specific <see cref="T:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilator" /> which is capable to convert and compare items from
                model to this collection.
            </param>
            <exception cref="T:System.IO.InvalidDataException">Throws when the list consists of value types. Value types are not allowed</exception>
            <exception cref="T:System.AccessViolationException">
                Throws when change is made while firing <see cref="E:CsWpfBase.Ev.Objects.BaseRegister`1.CollectionChanged" />
                event.
            </exception>
        </member>
        <member name="T:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilator">
            <summary>
                Used to assimilate an existing list to mirror an model. Extend and withdraws items and after order it like the
                model.
            </summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilator.EqualFunc">
            <summary>This function is used to compare two instances instead of using the Equality comparer.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilator.OnAdded">
            <summary>Invokes when an item was added to the collection. As a example: Use this method to invoke an OnAdded event</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilator.OnPairFound">
            <summary>Invokes when a pair is found by the EqualFunc. As a example: Use this method to update an existing item.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilator.OnRemoved">
            <summary>Invokes when an existing item was removed. As a example: Use this method to invoke an OnRemoved event.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilator`1">
            <summary>
                Used to assimilate an existing list to mirror an model. Extend and withdraws items and order it like the
                model.
            </summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilator`1.EqualFunc">
            <summary>This function is used to compare two objects.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilator`1.ConvertFunc">
            <summary>
                Invokes when an item need to be added to the collection. Convert the item an as a example: Use this method to
                invoke an OnAdded event
            </summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilator`1.OnPairFound">
            <summary>Invokes when a pair is found by the EqualFunc. As a example: Use this method to update an existing item.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilator`1.OnRemoved">
            <summary>Invokes when an existing item was removed. As a example: Use this method to invoke an OnRemoved event.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Objects.BaseRegisterTs`1">
            <summary>
                A <code>RegisterTs</code> a so called thread safe register is used whenever a register is needed which
                automatically provides thread safety.
                <para />
                Define DEBUGLOCKS to see whenever a lock is applied.
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.AquireWriteLock">
            <summary>
                Use the returned object to ensure thread safety over code block.
                <code>
             using(<see cref="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.AquireWriteLock" />)
             {
            	thread safe operations;
             }</code>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.AquireReadLock">
            <summary>
                Use the returned object to ensure thread safety over code block.
                <code>
             using(<see cref="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.AquireReadLock" />)
             {
            	thread safe operations;
             }</code>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.AquireUpgradeableReadLock">
            <summary>
                Use the returned object to ensure thread safety over code block.
                <code>
             using(<see cref="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.AquireUpgradeableReadLock" />)
             {
            	thread safe operations;
             }</code>
            </summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.BaseRegisterTs`1.Count">
            <summary>
                Encapsulates <see cref="P:CsWpfBase.Ev.Objects.BaseRegister`1.Count" />. CAVE: When using, think of thread safety and use locks to
                prevent race conditions!!!
            </summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.BaseRegisterTs`1.Item(System.Int32)">
            <summary>
                Encapsulates <see cref="P:CsWpfBase.Ev.Objects.BaseRegister`1.Item(System.Int32)" />. CAVE: When using, think of thread safety and use locks to
                prevent race conditions!!!
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.Contains(`0)">
            <summary>
                Encapsulates <see cref="M:CsWpfBase.Ev.Objects.BaseRegister`1.Contains(`0)" />. CAVE: When using, think of thread safety and use locks
                to prevent race conditions!!!
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.IndexOf(`0)">
            <summary>
                Encapsulates <see cref="M:CsWpfBase.Ev.Objects.BaseRegister`1.IndexOf(`0)" />. CAVE: When using, think of thread safety and use locks to
                prevent race conditions!!!
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.Replace(System.Collections.Generic.IEnumerable{`0})">
            <summary>Encapsulate <see cref="M:CsWpfBase.Ev.Objects.BaseRegister`1.Replace(System.Collections.Generic.IEnumerable{`0})" /> with an write lock.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.Add(`0)">
            <summary>Encapsulate <see cref="M:CsWpfBase.Ev.Objects.BaseRegister`1.Add(`0)" /> with an write lock.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.Add(System.Collections.Generic.IEnumerable{`0})">
            <summary>Encapsulate <see cref="M:CsWpfBase.Ev.Objects.BaseRegister`1.Add(System.Collections.Generic.IEnumerable{`0})" /> with an write lock.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.Insert(System.Int32,`0)">
            <summary>Encapsulate <see cref="M:CsWpfBase.Ev.Objects.BaseRegister`1.Insert(System.Int32,`0)" /> with an write lock.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.Remove(`0)">
            <summary>Encapsulate <see cref="M:CsWpfBase.Ev.Objects.BaseRegister`1.Remove(`0)" /> with an write lock.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.Remove(System.Collections.Generic.IEnumerable{`0})">
            <summary>Encapsulate <see cref="M:CsWpfBase.Ev.Objects.BaseRegister`1.Remove(System.Collections.Generic.IEnumerable{`0})" /> with an write lock.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.RemoveAt(System.Int32)">
            <summary>Encapsulate <see cref="M:CsWpfBase.Ev.Objects.BaseRegister`1.RemoveAt(System.Int32)" /> with an write lock.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.Clear">
            <summary>Encapsulate <see cref="M:CsWpfBase.Ev.Objects.BaseRegister`1.Clear" /> with an write lock.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.Move(System.Int32,System.Int32)">
            <summary>Encapsulate <see cref="M:CsWpfBase.Ev.Objects.BaseRegister`1.Move(System.Int32,System.Int32)" /> with an write lock.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.CopyTo(`0[],System.Int32)">
            <summary>Encapsulate <see cref="M:CsWpfBase.Ev.Objects.BaseRegister`1.CopyTo(`0[],System.Int32)" /> with an write lock.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.Sort(System.Func{`0,System.Object})">
            <summary>Encapsulate <see cref="M:CsWpfBase.Ev.Objects.BaseRegister`1.Sort(System.Func{`0,System.Object})" /> with an write lock.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.Assimilate(System.Collections.Generic.IEnumerable{`0},CsWpfBase.Ev.Objects.BaseRegister{`0}.Assimilator)">
            <summary>Encapsulate <see cref="M:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilate(System.Collections.Generic.IEnumerable{`0},CsWpfBase.Ev.Objects.BaseRegister{`0}.Assimilator)" /> with an write lock.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.BaseRegisterTs`1.Assimilate``1(System.Collections.Generic.IEnumerable{``0},CsWpfBase.Ev.Objects.BaseRegister{`0}.Assimilator{``0})">
            <summary>Encapsulate <see cref="M:CsWpfBase.Ev.Objects.BaseRegister`1.Assimilate``1(System.Collections.Generic.IEnumerable{``0},CsWpfBase.Ev.Objects.BaseRegister{`0}.Assimilator{``0})" /> with an write lock.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessResult">
            <summary>Provides a Result for an endless but pause able operation.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1">
            <summary>Provides a State for an endless but pause able state.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.#ctor(`0)">
            <summary>Initializes a new <see cref="T:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1" /> and automatically sets its owner.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.OnContinued">
            <summary>Invokes the corresponding Event.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.OnPausing">
            <summary>Invokes the corresponding Event.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.OnPaused">
            <summary>Invokes the corresponding Event.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.OnStarted">
            <summary>Invokes the corresponding Event.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.SetStarted(CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessResult)">
            <summary>
                Sets the state to Started state. CAVE: Use <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.Lock" /> around setting the state to ensure thread safety!!
                <para>Pass result parameter to automatically set result accordingly. </para>
            </summary>
            <exception cref="T:System.InvalidOperationException">When the state is other then Unaltered.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.SetPausing(CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessResult)">
            <summary>
                Sets the state to pausing state. CAVE: Use <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.Lock" /> around setting the state to ensure thread safety!!
                <para>Pass result parameter to automatically set result accordingly. </para>
            </summary>
            <exception cref="T:System.InvalidOperationException">When the state is other then running.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.SetPaused(CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessResult)">
            <summary>
                Sets the state to paused state. CAVE: Use <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.Lock" /> around setting the state to ensure thread safety!!
                <para>Pass result parameter to automatically set result accordingly. </para>
            </summary>
            <exception cref="T:System.InvalidOperationException">When the state is other then pausing.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.SetContinued(CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessResult)">
            <summary>
                Sets the state to continued state. CAVE: Use <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.Lock" /> around setting the state to ensure thread safety!!
                <para>Pass result parameter to automatically set result accordingly. </para>
            </summary>
            <exception cref="T:System.InvalidOperationException">When the state is other then Paused.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.ReleaseAllSubscriptions">
            <summary>Releases all subscribers to the events hold by this class.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.Dispose">
            <summary>releases all subscriptions from all events.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.ToString">
            <summary>Returns not the type but the current state of this class.</summary>
            <returns></returns>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.Lock">
            <summary>
                State lock. Locks concurrent threads from event subscription. CAVE: Don't use this lock if you are not the owner of that state. To prevent dead
                locks use this lock ONLY in logically owner!!!
            </summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.IsUnaltered">
            <summary>Determines if the operation is currently not started.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.IsPausing">
            <summary>Determines if the operation is currently entering the pause state.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.IsPaused">
            <summary>Determines if the operation is paused.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.IsRunning">
            <summary>Determines if the operation is currently running.</summary>
        </member>
        <member name="E:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.Continued">
            <summary>Occurs when the operation is being continued from pause.</summary>
        </member>
        <member name="E:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.Paused">
            <summary>Occurs when the operation is paused.</summary>
        </member>
        <member name="E:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.Pausing">
            <summary>Occurs when the operation is currently pausing.</summary>
        </member>
        <member name="E:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.Started">
            <summary>Occurs when the operation is started.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.IsPauseable">
            <summary>Gets whether state is in a mode where cancellation is possible or reasonable.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.Event_Add(CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState{`0}.EvDel@,CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState{`0}.EvDel,System.Func{System.Boolean})">
            <summary>Thread safe adds an delegate to an delegate field.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.Event_Remove(CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState{`0}.EvDel@,CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState{`0}.EvDel)">
            <summary>Thread safe removes an delegate from an delegate field.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.Event_Invoke(CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState{`0}.EvDel@)">
            <summary>Invokes an event.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Objects.FuncExt.Endless.BaseEndlessState`1.EvDel">
            <summary>Standard Delegate</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult">
            <summary>
                Defines the standard layout for a result class. Use this class whenever something like a function needs a result
                wrapper.
                <para>
                    Inherited objects should not have references to other objects. The results should stay in a 'box', so don't
                    include any references to other bigger objects to reduce needed ram space. The result class should be able to
                    provide all needed objects on its own.
                </para>
                <para>
                    Do not include any events, cause events contains references to other objects. All events should be included
                    into a separate state classes. The state classes should be of type <see cref="T:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1" />
                </para>
                <para>
                    The result class is not thread safe be careful when using it in a threaded environment. Normally a result is
                    combined with a state class which in combination provides thread safety if state is correctly handled by state
                    lock.
                </para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult.ToString">
            <summary>Returns not the type.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult.IsFaulted">
            <summary>Determines if function was faulted. If null then the function has not finished yet.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult.IsCanceled">
            <summary>Determines if function was canceled. If null then the function has not finished yet.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult.IsSucceeded">
            <summary>Determines if function was succeeded. If null then the function has not finished yet.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult.Exception">
            <summary>If function is faulted gets the associated exception.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult.Duration">
            <summary>Gets the execution duration. If null then the function has not finished yet.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult.IsDefined">
            <summary>Determines if function is already completed and result values are defined.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult.StartTime">
            <summary>Gets the start time of the function. If null then the function has not started yet or no start time exists.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult.SetStartTime(System.Nullable{System.DateTime})">
            <summary>Sets the results start time.
                <para>CAVE: No thread safety.</para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult.SetSucceeded(System.Nullable{System.TimeSpan})">
            <summary>Sets the result to succeeded.
                <para>CAVE: No thread safety.</para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult.SetFaulted(System.Exception,System.Nullable{System.TimeSpan})">
            <summary>Sets the result to faulted.
                <para>CAVE: No thread safety.</para>
            </summary>
            <param name="exc"></param>
            <param name="duration"></param>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult.SetCanceled(System.Nullable{System.TimeSpan})">
            <summary>Sets the result to canceled.
                <para>CAVE: No thread safety.</para>
            </summary>
            <param name="duration"></param>
        </member>
        <member name="T:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1">
            <summary>
                Provides a default state class.
                <para>
                    ---->Override <see cref="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.ReleaseAllSubscriptions" /> to ensure that events in the base class are correctly
                    released.
                </para>
                <para>---->Override methods beginning with Pre* to extend the state setters.</para>
                <para>---->Include descriptions for the properties <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsSucceeded" /> and <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsFaulted" />.</para>
                <para>
                    ---->Don't forget to set owner after deserialization, which is not necessarily needed cause after
                    deserialization no state changes or subscription are allowed, but maybe base class needs the owner. To avoid
                    unpredictable behavior, implement it anyway.
                </para>
                <para>All new function or events should take car of <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Lock" /> to ensure thread safety</para>
            </summary>
            <example>
                Use this as en example implementation for a new state. Don't forget to implement needed property's in result class
                <code>
             [field:NonSerialized] private EvDel _eventName;
             public event EvDel Online
             {
             	add { AutoRejectEvent_Add(ref _eventName, ref value, () => Condition); }
             	remove { AutoRejectEvent_Remove(ref _eventName, ref value); }
             }
             internal void SetOnline(BaseResult result)
             {
             	result.SetResultProp();
             	OnEventName();
             }
             private void OnEventName()
             {
             	AutoRejectEvent_Invoke(ref _eventName);
             }
             protected override void ReleaseAllSubscriptions()
             {
             	base.ReleaseAllSubscriptions();
             	_eventName = null;
             }
              </code>
            </example>
            <typeparam name="TOwner">Defines the owner object. The object is used by the events to give a reference to the sender.</typeparam>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.#ctor(`0)">
            <summary>Initializes a new <see cref="T:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1" /> and automatically sets its owner.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Dispose">
            <summary>releases all subscriptions from all events.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.SetRunning(CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult,System.Nullable{System.DateTime})">
            <summary>
                Sets the state to running state. If state is in running state everything must be initialized to ensure working
                cancel method. CAVE: Use <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Lock" /> around setting the state to ensure thread safety!!
                <para>Pass result parameter to automatically set result accordingly. </para>
            </summary>
            <exception cref="T:System.InvalidOperationException">When the state is already started or completed.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.SetCanceling">
            <summary>Sets the state to canceling state. Call <code>SetCanceled</code> to define cancellation completion. CAVE: Use
                <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Lock" /> around setting the state to ensure thread safety!!</summary>
            <exception cref="T:System.InvalidOperationException">When the state is other then running.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.SetCanceled(CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult,System.Nullable{System.TimeSpan})">
            <summary>
                Sets the state to canceled state. CAVE: Use <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Lock" /> around setting the state to ensure thread
                safety!!
                <para>Pass result parameter to automatically set result accordingly. </para>
            </summary>
            <exception cref="T:System.InvalidOperationException">When the state is other then canceling.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.SetFaulted(CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult,System.Exception,System.Nullable{System.TimeSpan})">
            <summary>
                Sets the state to faulted state. CAVE: Use <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Lock" /> around setting the state to ensure thread
                safety!!
                <para>Pass result parameter to automatically set result accordingly. </para>
            </summary>
            <exception cref="T:System.InvalidOperationException">When the state is other then running or already canceling.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.SetSucceeded(CsWpfBase.Ev.Objects.FuncExt.Limited.BaseResult,System.Nullable{System.TimeSpan})">
            <summary>
                Sets the state to succeeded state. CAVE: Use <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Lock" /> around setting the state to ensure thread
                safety!!
                <para>Pass result parameter to automatically set result accordingly. </para>
            </summary>
            <exception cref="T:System.InvalidOperationException">When the state is other then running or already canceling.</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.SendRunningEvents">
            <summary>Sends the associated events (<see cref="E:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Started" />) by calling the so called 'On' method.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.SendCancelingEvents">
            <summary>Sends the associated events (<see cref="E:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Canceling" />) by calling the so called 'On' method.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.SendCanceledEvents">
            <summary>
                Sends the associated events (<see cref="E:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Canceled" />, <see cref="E:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Completed" />) by calling the so called 'On'
                method.
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.SendFaultedEvents">
            <summary>
                Sends the associated events (<see cref="E:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Faulted" />, <see cref="E:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Completed" />) by calling the so called 'On'
                method.
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.SendSucceededEvents">
            <summary>
                Sends the associated events (<see cref="E:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Succeeded" />, <see cref="E:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Completed" />) by calling the so called 'On'
                method.
            </summary>
        </member>
        <member name="E:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Canceled">
            <summary>
                CAVE: AutoRejectEvent only subscribe if <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsCompleted" /> and <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsCanceled" /> is false.
                Otherwise Event subscription is discarded. After event is fired all subscriptions are removed.
            </summary>
            <exception cref="T:System.Runtime.Serialization.SerializationException">On deserialized origin, no subscriptions are allowed</exception>
        </member>
        <member name="E:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Canceling">
            <summary>
                CAVE: AutoRejectEvent only subscribe if <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsCompleted" /> and <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsCanceling" /> is false.
                Otherwise Event subscription is discarded. After event is fired all subscriptions are removed.
            </summary>
            <exception cref="T:System.Runtime.Serialization.SerializationException">On deserialized origin, no subscriptions are allowed</exception>
        </member>
        <member name="E:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Completed">
            <summary>
                CAVE: AutoRejectEvent only subscribe if <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsCompleted" /> is false. Otherwise Event subscription is
                discarded. After event is fired all subscriptions are removed.
            </summary>
            <exception cref="T:System.Runtime.Serialization.SerializationException">On deserialized origin, no subscriptions are allowed</exception>
        </member>
        <member name="E:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Faulted">
            <summary>
                CAVE: AutoRejectEvent only subscribe if <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsCompleted" /> and <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsFaulted" /> is false.
                Otherwise Event subscription is discarded. After event is fired all subscriptions are removed.
            </summary>
            <exception cref="T:System.Runtime.Serialization.SerializationException">On deserialized origin, no subscriptions are allowed</exception>
        </member>
        <member name="E:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Started">
            <summary>
                CAVE: AutoRejectEvent only subscribe if <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsCompleted" /> and <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsRunning" /> is false.
                Otherwise Event subscription is discarded. After event is fired all subscriptions are removed.
            </summary>
            <exception cref="T:System.Runtime.Serialization.SerializationException">On deserialized origin, no subscriptions are allowed</exception>
        </member>
        <member name="E:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Succeeded">
            <summary>
                CAVE: AutoRejectEvent only subscribe if <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsCompleted" /> and <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsSucceeded" /> is false.
                Otherwise Event subscription is discarded. After event is fired all subscriptions are removed.
            </summary>
            <exception cref="T:System.Runtime.Serialization.SerializationException">On deserialized origin, no subscriptions are allowed</exception>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.AutoRejectEvent_Add(CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState{`0}.EvDel@,CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState{`0}.EvDel@,System.Func{System.Boolean})">
            <summary>
                CAVE: Event subscription only if <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsCompleted" /> is false and <paramref name="discard" /> is false.
                Adds an delegate(<paramref name="value" />) to an event(<paramref name="event" />).
                <para>Method is working thread safe. Subscriptions are only allowed while lock is free.</para>
            </summary>
            <param name="event">A reference to a delegate to which <paramref name="value" /> is added</param>
            <param name="value">A reference to a delegate which will be added to <paramref name="event" />.</param>
            <param name="discard">When true, event subscription is not performed.</param>
            <remarks>
                Param <paramref name="discard" /> can not be an boolean cause value should be determined in lock. And not
                before!! So do not remove the 'Func' implementation.
            </remarks>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.AutoRejectEvent_Remove(CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState{`0}.EvDel@,CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState{`0}.EvDel@)">
            <summary>Removes an AutoResetEvent delegate.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.AutoRejectEvent_Invoke(CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState{`0}.EvDel@)">
            <summary>Invokes an AutoResetEvent and removes all subscribers.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.ReleaseAllSubscriptions">
            <summary>Releases all subscribers to the events hold by this class.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Lock">
            <summary>
                State lock. Locks concurrent threads from event subscription. CAVE: Don't use this lock if you are not the
                owner of that state. To prevent dead locks use this lock ONLY in logically owner!!!
            </summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsUnaltered">
            <summary>
                Determine if state was already set to running. Use this boolean to determine if already some state change
                happened.
            </summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsRunning">
            <summary>Gets whether the operation is currently running.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsCanceling">
            <summary>Gets whether the operation is in cancellation state and waits for completion.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsCanceled">
            <summary>Gets whether the operation was completed by cancellation.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsFaulted">
            <summary>
                Gets whether the operation was completed with an exception. Obtain base class documentation for more precise
                description.
            </summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsSucceeded">
            <summary>
                Gets whether the operation was completed successfully. Obtain base class documentation for more precise
                description.
            </summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsCompleted">
            <summary>Gets whether the operation was completed.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.Exception">
            <summary>Gets the assigned exception. Obtain <see cref="P:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsFaulted" /> to check whether operation was faulted.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.IsCancleAble">
            <summary>Gets whether state is in a mode where cancellation is possible or reasonable.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Objects.FuncExt.Limited.BaseState`1.EvDel">
            <summary>Generic delegate is used by the standard auto reset events.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Objects.FuncExt.BaseOption">
            <summary>
                Defines the standard layout for a option class. Use this class whenever there is a need for an option pool.
                <para>
                    An option is per definition clone able. The <see cref="M:CsWpfBase.Ev.Objects.FuncExt.BaseOption.ToString" /> method should provide a list of the
                    options.
                </para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.BaseOption.CopyTo``1(``0)">
            <summary>
                Copy all option relevant fields to the target object. Typically typecast the <paramref name="target" /> param
                to the current object type.
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.FuncExt.BaseOption.Clone">
            <summary>Clones actual object into a new object by using <see cref="M:CsWpfBase.Ev.Objects.FuncExt.BaseOption.CopyTo``1(``0)" /> method.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Objects.SmallHash">
            <summary>Provides a class for hashing to short strings.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.SmallHash.FromBuffer(System.Byte[])">
            <summary>hashing from buffer. Result in format of 000-000</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.SmallHash.FromString(System.String)">
            <summary>hashing from string. Result in format of 000-000</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Objects.RelayCommand">
            <summary>The relay command.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.RelayCommand.#ctor(System.Action,System.Func{System.Boolean})">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.RelayCommand.#ctor(System.Action{System.Object})">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.RelayCommand.#ctor(System.Action)">
            <summary>ctor</summary>
        </member>
        <member name="E:CsWpfBase.Ev.Objects.RelayCommand.CanExecuteChanged">
            <summary>event</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.RelayCommand.CanExecute(System.Object)">
            <summary>Defines the method that determines whether the command can execute in its current state.</summary>
            <returns>true if this command can be executed; otherwise, false.</returns>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.RelayCommand.Execute(System.Object)">
            <summary>Defines the method to be called when the command is invoked.</summary>
            <param name="parameter">Data used by the command.  If the command does not require data to be passed, this object can be set to null.</param>
        </member>
        <member name="M:CsWpfBase.Ev.Objects.RelayCommand.Execute">
            <summary>Executes the command</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.BinaryWriterExtensions">
            <summary>Wraps <see cref="T:System.IO.BinaryWriter" /> extensions</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.BinaryWriterExtensions.Write_LengthOfFollowingBlock(System.IO.BinaryWriter)">
            <summary>Writes the length of the following block encapsuled by the using block to the stream.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.ByteArrayConversions">
            <summary>Wraps a bunch of functions for converting byte[]'s.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ByteArrayConversions.ConvertTo_Base64(System.Byte[],System.Base64FormattingOptions)">
            <summary>Converts an byte[] to an Base64 string</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ByteArrayConversions.ConvertTo_Hex(System.Byte[],System.String)">
            <summary>Converts an byte[] to an hex string. For each byte there will be two characters in hex.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ByteArrayConversions.ConvertTo_Bytes(System.String)">
            <summary>Converts an Base64 string to an byte[].</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ByteArrayConversions.ConvertTo_Bytes(System.Object)">
            <summary>Converts an <see cref="T:System.SerializableAttribute"/> object into an byte[] by using the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/>.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ByteArrayConversions.ConvertTo_Object(System.Byte[])">
            <summary>Converts an <see cref="T:System.SerializableAttribute"/> object into an byte[] by using the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/>.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ByteArrayConversions.ConvertTo_Object``1(System.Byte[])">
            <summary>Converts an <see cref="T:System.SerializableAttribute"/> object into an byte[] by using the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/>.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ByteArrayConversions.Sha1Hash(System.Byte[])">
            <summary>
                SHA-1 produces a 160-bit (20-byte) hash value known as a message digest. A SHA-1 hash value is typically rendered as a hexadecimal number, 40
                digits long.
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ByteArrayConversions.Md5Hash(System.Byte[])">
            <summary>
                MD5 produces a 128-bit (16-byte) hash value known as a message-digest. The Algorithm is a widely used cryptographic hash function producing a
                hash value, typically expressed in text format as a 32 digit hexadecimal number. MD5 has been utilized in a wide variety of cryptographic
                applications, and is also commonly used to verify data integrity.
            </summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.ColorExtensions">
            <summary>Bunch of data extension methods.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ColorExtensions.GetHexRepresentation(System.Windows.Media.Color,System.Boolean)">
            <summary>Returns a DataTables content for debug purpose. </summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.DirectoryInfoExtensions">
            <summary>Wraps a bunch of DateTime extensions</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.DirectoryInfoExtensions.GoUpward_Until(System.IO.DirectoryInfo,System.String,System.Boolean)">
            <summary>goes the directory structure up until it finds directory with sepcific name</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.DirectoryInfoExtensions.Create_If_NotExists(System.IO.DirectoryInfo)">
            <summary>creates the directory if it does not exist already.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.DateTimeExtensions">
            <summary>Wraps a bunch of DateTime extensions</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.DateTimeExtensions.Age(System.DateTime)">
            <summary>Gets the age for an birthday.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.DateTimeExtensions.EndOfDay(System.DateTime)">
            <summary>Gets the current date with the time adjusted to the end of day.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.DateTimeExtensions.StartOfDay(System.DateTime)">
            <summary>Gets the current date with the time adjusted to the start of the day.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.DateTimeExtensions.EndOfDay(System.Nullable{System.DateTime})">
            <summary>Gets the current date with the time adjusted to the end of day.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.DateTimeExtensions.StartOfDay(System.Nullable{System.DateTime})">
            <summary>Gets the current date with the time adjusted to the start of the day.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.EnumerationHandlingExtensions">
            <summary>Wraps a bunch of extension methods for <see cref="T:System.Collections.Generic.IEnumerable`1" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.EnumerationHandlingExtensions.ForEach``1(System.Collections.Generic.IList{``0},System.Action{``0})">
            <summary>Iterates over one item and yield returns it.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.EnumerationHandlingExtensions.Join(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>Extension method for <see cref="M:System.String.Join(System.String,System.Collections.Generic.IEnumerable{System.String})" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.EnumerationHandlingExtensions.MaxObject``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>Finds the object where a specific value is the maximum in that list and returns the object itself.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.EnumerationHandlingExtensions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>Finds the object where a specific value is the maximum in that list and returns the object itself.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.EnumExtensions">
            <summary>Wraps a bunch of extension methods for enum's.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.EnumExtensions.GetName(System.Enum)">
            <summary>Using one of the following Names: <see cref="P:CsWpfBase.Ev.Attributes.EnumDescriptionAttribute.Name" /> or <see cref="T:System.Enum" /> value itself.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.EnumExtensions.GetDescription(System.Enum)">
            <summary>
                Using one of the following Names: <see cref="P:CsWpfBase.Ev.Attributes.EnumDescriptionAttribute.Name" /> or <see cref="T:System.ComponentModel.DescriptionAttribute" /> or <see cref="T:System.Enum" />
                value itself.
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.EnumExtensions.GetAttribute``1(System.Enum)">
            <summary>Finds all Attributes of specific type, even derived types.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.ExceptionHandlingExtensions">
            <summary>Wraps a bunch of extension methods for <see cref="T:System.Exception" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ExceptionHandlingExtensions.MostInner(System.Exception)">
            <summary>Returns the most inner exception in a exception. Traversing the inner exception.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ExceptionHandlingExtensions.CastOrFindInInnerExceptions``1(System.Exception)">
            <summary>Returns the exception in a exception if it is of type <paramref name="T"/>. Traversing the inner exception.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.ExpressionExtensions">
            <summary>Gets Expression extensions.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ExpressionExtensions.GetReferencedProperties``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>Returns a list of all properties referenced from <typeparamref name="T" />.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions">
            <summary>Wraps a bunch of reading and writing functions.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.CreateDirectory_IfNotExists(System.IO.FileInfo)">
            <summary>Creates the owning directory if it's not exists.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.DeleteFile_IfExists(System.IO.FileInfo)">
            <summary>Deletes existing file if exists.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.AppendIndexToFile_IfExists(System.IO.FileInfo)">
            <summary>Appends an index to an file.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.In_Desktop_Directory(System.IO.FileInfo)">
            <summary>returns a <see cref="T:System.IO.FileInfo" /> with the same file name but the directory will be the desktop.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.SaveAs_Utf8String(System.String,System.IO.FileInfo)">
            <summary>
                Saves a string to file using <see cref="T:System.Text.UTF8Encoding" />.
                <para>If file exists then file is deleted.</para>
                <para>If directory not exists then directory is created</para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.SaveAs_UnicodeString(System.String,System.IO.FileInfo)">
            <summary>
                Saves a string to file using <see cref="T:System.Text.UnicodeEncoding" />.
                <para>If file exists then file is deleted.</para>
                <para>If directory not exists then directory is created</para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.SaveAs_SerializedBinary(System.Object,System.IO.FileInfo)">
            <summary>
                Serialize a file using <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.
                <para>If file exists then file is deleted.</para>
                <para>If directory not exists then directory is created</para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.SaveTo_File(System.Byte[],System.IO.FileInfo)">
            <summary>
                Saves the binary to a file using the .NET Framework (File.WriteAllBytes).
                <para>If file exists then file is deleted.</para>
                <para>If directory not exists then directory is created</para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.SaveTo_File(System.Byte[],System.String)">
            <summary>
                Saves the binary to a file using the .NET Framework (File.WriteAllBytes).
                <para>If file exists then file is deleted.</para>
                <para>If directory not exists then directory is created</para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.SaveAs_JpgFile(System.Windows.Media.Imaging.BitmapSource,System.IO.FileInfo,System.Int32)">
            <summary>Saves a image as jpg file.
                <para>If file exists then file is deleted.</para>
                <para>If directory not exists then directory is created</para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.SaveAs_PngFile(System.Windows.Media.Imaging.BitmapSource,System.IO.FileInfo,System.Windows.Media.Imaging.PngInterlaceOption)">
            <summary>Saves a image as png file.
                <para>If file exists then file is deleted.</para>
                <para>If directory not exists then directory is created</para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.SaveAs_GifFile(System.Windows.Media.Imaging.BitmapSource,System.IO.FileInfo)">
            <summary>Saves a image as gif file.
                <para>If file exists then file is deleted.</para>
                <para>If directory not exists then directory is created</para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.SaveAs_BmpFile(System.Windows.Media.Imaging.BitmapSource,System.IO.FileInfo)">
            <summary>Saves a image as bmp file.
                <para>If file exists then file is deleted.</para>
                <para>If directory not exists then directory is created</para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.SaveAs_TiffFile(System.Windows.Media.Imaging.BitmapSource,System.IO.FileInfo,System.Windows.Media.Imaging.TiffCompressOption)">
            <summary>Saves a image as tiff file.
                <para>If file exists then file is deleted.</para>
                <para>If directory not exists then directory is created</para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.SaveAs_WmpFile(System.Windows.Media.Imaging.BitmapSource,System.IO.FileInfo)">
            <summary>Saves a image as wmp file.
                <para>If file exists then file is deleted.</para>
                <para>If directory not exists then directory is created</para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.LoadAs_Object_From_SerializedBinary``1(System.IO.FileInfo)">
            <summary>Deserialize a file using <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.LoadAs_UTF8String(System.IO.FileInfo)">
            <summary>Uses UTF8 encoding</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.LoadAs_UnicodeString(System.IO.FileInfo)">
            <summary>Uses UTF8 encoding</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.LoadAs_Image(System.IO.FileInfo)">
            <summary>Loads an image from a file.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.FileWritingAndReadingExtensions.LoadAs_ByteArray(System.IO.FileInfo)">
            <summary>Reads the complete content of a file as byte array. Using the File.ReadAllBytes(string filename) method (.NET 2.0).</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.ImageExtensions">
            <summary>Wraps a bunch of functions for converting from and to <see cref="T:System.Windows.Media.Imaging.BitmapImage" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ImageExtensions.ResizeToMaximum(System.Windows.Media.Imaging.BitmapSource,System.Int32,System.Int32)">
            <summary>
                Resizes the image to a defined maximum. Preserves the aspect ratio.
                <para>Image[200x100].ResizeToMaximum(100,100) results in a new image of size [100x50]</para>
                <para>Image[100x200].ResizeToMaximum(100,100) results in a new image of size [50x100]</para>
            </summary>
            <param name="image">The image from which the new image will be created.</param>
            <param name="maximumWidth">The maximum allowed width for the new image.</param>
            <param name="maximumHeight">The maximum allowed height for the new image.</param>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ImageExtensions.UniformFill(System.Windows.Media.Imaging.BitmapSource,System.Double,System.Double)">
            <summary>
                Resizes the image to a defined width and height. Preserves the aspect ratio. After the process the image will fit into a rectengular of size
                <paramref name="width" /> and <paramref name="height" />.
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ImageExtensions.ResizeToMaximum(System.Windows.Media.Imaging.BitmapSource,System.Int64)">
            <summary>
                Resizes the image to a defined maximum pixel amount. Preserves the aspect ratio.
                <para>Image[100x100].ResizeToMaximum(100) results in a new image of size [10x10]</para>
                <para>Image[200x50].ResizeToMaximum(100) results in a new image of size [20x5]</para>
            </summary>
            <param name="image">The image from which the new image will be created.</param>
            <param name="pixels">The maximum amount of pixels in the new image.</param>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ImageExtensions.ConvertTo_JpgByteArray(System.Windows.Media.Imaging.BitmapSource,System.Int32)">
            <summary>Creates a converted copy of the image (jpg formatted).</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ImageExtensions.ConvertTo_PngByteArray(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Imaging.PngInterlaceOption)">
            <summary>Creates a converted copy of the image (png formatted).</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ImageExtensions.ConvertTo_GifByteArray(System.Windows.Media.Imaging.BitmapSource)">
            <summary>Creates a converted copy of the image (gif formatted).</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ImageExtensions.ConvertTo_BmpByteArray(System.Windows.Media.Imaging.BitmapSource)">
            <summary>Creates a converted copy of the image (bmp formatted).</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ImageExtensions.ConvertTo_TiffByteArray(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Imaging.TiffCompressOption)">
            <summary>Creates a converted copy of the image (tiff formatted).</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ImageExtensions.ConvertTo_WmpByteArray(System.Windows.Media.Imaging.BitmapSource)">
            <summary>Creates a converted copy of the image (wmp formatted).</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ImageExtensions.ConvertTo_Image(System.Byte[])">
            <summary>
                Converts an buffer, created by one of the following methods, to an <see cref="T:System.Windows.Media.Imaging.BitmapImage" />.
                <para>
                    <see cref="M:CsWpfBase.Ev.Public.Extensions.ImageExtensions.ConvertTo_JpgByteArray(System.Windows.Media.Imaging.BitmapSource,System.Int32)" /> or
                </para>
                <para>
                    <see cref="M:CsWpfBase.Ev.Public.Extensions.ImageExtensions.ConvertTo_PngByteArray(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Imaging.PngInterlaceOption)" /> or
                </para>
                <para>
                    <see cref="M:CsWpfBase.Ev.Public.Extensions.ImageExtensions.ConvertTo_TiffByteArray(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Imaging.TiffCompressOption)" /> or
                </para>
                <para>
                    <see cref="M:CsWpfBase.Ev.Public.Extensions.ImageExtensions.ConvertTo_GifByteArray(System.Windows.Media.Imaging.BitmapSource)" /> or
                </para>
                <para>
                    <see cref="M:CsWpfBase.Ev.Public.Extensions.ImageExtensions.ConvertTo_BmpByteArray(System.Windows.Media.Imaging.BitmapSource)" /> or
                </para>
                <para>
                    <see cref="M:CsWpfBase.Ev.Public.Extensions.ImageExtensions.ConvertTo_WmpByteArray(System.Windows.Media.Imaging.BitmapSource)" />
                </para>
            </summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.IntExtensions">
            <summary>Collapsing extension methods for <see cref="T:System.Int32" />
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.IntExtensions.ToByteSizeString(System.Nullable{System.UInt64})">
            <summary>Format <paramref name="value" /> into a human readable string Like: <c>150.0 KB</c> or <c>1.2 GB</c>.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.IntExtensions.ToByteSizeString(System.UInt64)">
            <summary>Format <paramref name="value" /> into a human readable string Like: <c>150.0 KB</c> or <c>1.2 GB</c>.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.IntExtensions.ToByteSizeString(System.Nullable{System.UInt32})">
            <summary>Format <paramref name="value" /> into a human readable string Like: <c>150.0 KB</c> or <c>1.2 GB</c>.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.IntExtensions.ToByteSizeString(System.UInt32)">
            <summary>Format <paramref name="value" /> into a human readable string Like: <c>150.0 KB</c> or <c>1.2 GB</c>.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.ManagementExtensions">
            <summary>Wraps a bunch of functions for Management.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ManagementExtensions.TryGet``1(System.Management.ManagementObject,System.String)">
            <summary>Try's to get the specific value.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.RandomExtensions">
            <summary>Wraps a bunch of random extensions.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.RandomExtensions.Next_By_Type(System.Random,System.Type)">
            <summary>Gets a random value for a primitive type, Strings will be created with length between 10-255 characters.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.RandomExtensions.NextString(System.Random,System.Int32)">
            <summary>Generates a random alphanumerical string of a specific <paramref name="length" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.RandomExtensions.NextBoolean(System.Random)">
            <summary>Creates a new random <see cref="T:System.Boolean" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.RandomExtensions.NextChar(System.Random)">
            <summary>Creates a new random <see cref="T:System.Char" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.RandomExtensions.NextByte(System.Random)">
            <summary>Creates a new random <see cref="T:System.Byte" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.RandomExtensions.NextSByte(System.Random)">
            <summary>Creates a new random <see cref="T:System.SByte" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.RandomExtensions.NextUInt16(System.Random)">
            <summary>Creates a new random <see cref="T:System.UInt16" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.RandomExtensions.NextUInt32(System.Random)">
            <summary>Creates a new random <see cref="T:System.UInt32" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.RandomExtensions.NextUInt64(System.Random)">
            <summary>Creates a new random <see cref="T:System.UInt64" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.RandomExtensions.NextInt16(System.Random)">
            <summary>Creates a new random <see cref="T:System.Int16" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.RandomExtensions.NextInt32(System.Random)">
            <summary>Creates a new random <see cref="T:System.Int32" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.RandomExtensions.NextInt64(System.Random)">
            <summary>Creates a new random <see cref="T:System.Int64" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.RandomExtensions.NextFloat(System.Random)">
            <summary>Creates a new random <see cref="T:System.Single" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.RandomExtensions.NextDouble(System.Random)">
            <summary>Creates a new random <see cref="T:System.Double" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.RandomExtensions.NextDecimal(System.Random)">
            <summary>Creates a new random <see cref="T:System.Decimal" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.RandomExtensions.BufferOfSize(System.Random,System.Int32)">
            <summary>Creates a new random buffer of a specific <paramref name="size" />.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.StreamExtensions">
            <summary>Collapses a lot of stream extensions.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StreamExtensions.ToByteArray(System.IO.Stream,System.Int32)">
            <summary>Reads the stream completely into a binary array. It does that by re validating if everything has arrived.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StreamExtensions.ToByteArray(System.IO.Stream,System.Int64)">
            <summary>Reads the stream completely into a binary array. It does that by re validating if everything has arrived.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions">
            <summary>Wraps string builder functions.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.Substring(System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>Takes a sub string out of the <see cref="T:System.Text.StringBuilder" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.Remove(System.Text.StringBuilder,System.Char)">
            <summary>Removes a char from the <see cref="T:System.Text.StringBuilder" />
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.RemoveFromEnd(System.Text.StringBuilder,System.Int32)">
            <summary>Removes characters from end of the <see cref="T:System.Text.StringBuilder" />;</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.Clear(System.Text.StringBuilder)">
            <summary>Clears the string builder.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.LTrim(System.Text.StringBuilder)">
            <summary>Trim left spaces of string</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.RTrim(System.Text.StringBuilder)">
            <summary>Trim right spaces of string</summary>
            <param name="sb"></param>
            <returns></returns>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.Trim(System.Text.StringBuilder)">
            <summary>Trim spaces around string</summary>
            <param name="sb"></param>
            <returns></returns>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.IndexOf(System.Text.StringBuilder,System.Char)">
            <summary>Get index of a char</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.IndexOf(System.Text.StringBuilder,System.Char,System.Int32)">
            <summary>Get index of a char starting from a given index</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.IndexOf(System.Text.StringBuilder,System.String)">
            <summary>Get index of a string</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.IndexOf(System.Text.StringBuilder,System.String,System.Int32)">
            <summary>Get index of a string from a given index</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.IndexOf(System.Text.StringBuilder,System.String,System.Boolean)">
            <summary>Get index of a string with case option</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.IndexOf(System.Text.StringBuilder,System.String,System.Int32,System.Boolean)">
            <summary>Get index of a string from a given index with case option</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.LastIndexOf(System.Text.StringBuilder,System.String,System.Int32)">
            <summary>
                Gets the last index of string. Beginning at the <paramref name="startIndex" /> and searching backwards to the
                beginning of the string
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.StartsWith(System.Text.StringBuilder,System.String)">
            <summary>Determine whether a string starts with a given text</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.StartsWith(System.Text.StringBuilder,System.String,System.Boolean)">
            <summary>Determine whether a string starts with a given text (with case option)</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringBuilderExtensions.StartsWith(System.Text.StringBuilder,System.String,System.Int32,System.Boolean)">
            <summary>Determine whether a string is begin with a given text</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.StringHandlingExtensions">
            <summary>Wraps a bunch of Extension methods for <see cref="T:System.String" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringHandlingExtensions.IsNullOrEmpty(System.String)">
            <summary>Extension method for <see cref="M:System.String.IsNullOrEmpty(System.String)" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringHandlingExtensions.ToLowerName(System.String)">
            <summary>Converts the string to another string with the first char ToLower</summary>
            <example>NameOf => nameOf</example>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringHandlingExtensions.Expand(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
                Expands a string to a specific length by adding a text (<paramref name="expansiontext" />) to the beginning of the input or the end. If
                <paramref name="input" /> already exceeds or is equal to <paramref name="length" /> the input is returned.
            </summary>
            <param name="input">the text to be expanded</param>
            <param name="length">the destination length</param>
            <param name="expansiontext">the text which is used to expand the input.</param>
            <param name="insertBefore">Defines if expansion text is added at position 0</param>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringHandlingExtensions.Cut(System.String,System.Int32,System.String)">
            <summary>
                Cuts a string to a specific length by removing characters from the end of a string. If input length is already appropriate the method returns the
                input.
            </summary>
            <param name="input">the text to be shortened</param>
            <param name="length">the destination length</param>
            <param name="appendix">the last characters of shortened string will be replaced with this sequence</param>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringHandlingExtensions.CutMiddle(System.String,System.Int32,System.String)">
            <summary>
                Cuts a string to a specific length by removing characters from the middle of a string. If input length is already appropriate the method returns
                the input.
            </summary>
            <param name="input">the string to be shortened.</param>
            <param name="length">the destination length</param>
            <param name="insert">the character to be inserted in the middle</param>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringHandlingExtensions.Split(System.String,System.String)">
            <summary>Extension method for <see cref="M:System.Text.RegularExpressions.Regex.Split(System.String,System.String)" />.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringHandlingExtensions.LevenstheinDistance(System.String,System.String)">
            <summary>Calculates the distance to the next string</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringHandlingExtensions.SmallHash(System.String)">
            <summary>
                Calculates a hash from the <paramref name="input" />. Result in format of 000-000. CAVE: This is not a save hashing algorithm hash collisions
                should be considered as normal.
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringHandlingExtensions.Sha1Hash(System.String)">
            <summary>Calculates a hash from the <paramref name="input" />. Hex representation.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.StringHandlingExtensions.Md5Hash(System.String)">
            <summary>Calculates a hash from the <paramref name="input" />. Hex representation.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.ThreadingExtensions">
            <summary>Wraps threading methods.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ThreadingExtensions.DispatchOnUi(System.Action)">
            <summary>Dispatches an Action async to the UI Thread</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.TypeExtensions">
            <summary>Wraps type methods.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.TypeExtensions.IsNumericType(System.Type)">
            <summary>Checks if type is one of the following types:
                <para><c>byte, ushort, uint, ulong, short, int, long, double, decimal, float,</c></para>
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.TypeExtensions.IsNullable(System.Type)">
            <summary>Checks if the type is a null able.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.TypeExtensions.IsNullable(System.Type,System.Type@)">
            <summary>Checks if the type is a null able and if it is it gives back the underlaying type.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.TypeExtensions.IsSpecialPrimitive(System.Type,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Checks if the type is a primitive including special checks. See params for more informations.</summary>
            <param name="type"></param>
            <param name="includeString">Includes strings into the list of valid primitives.</param>
            <param name="includeDecimal">Includes decimals into the list of valid primitives.</param>
            <param name="includeNullable">Includes null ables into the list of valid primitives.</param>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.TypeExtensions.ToUnsigned(System.Type)">
            <summary>Converts a numeric type into its unsigned equivalent.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.TypeExtensions.GetFields_IncludingBaseClasses(System.Type,System.Reflection.BindingFlags)">
            <summary>Finds all fields including the private fields on the base classes.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.ObjectExtensions">
            <summary>Object Extensions.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.ObjectExtensions.Is_DefaultValue_OfType(System.Object,System.Type)">
            <summary>Checks if the <paramref name="obj" /> is the default value of the <paramref name="type" />.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.WpfExtensions">
            <summary>Wraps a bunch of WPF extensions</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.WpfExtensions.GatherImage(Microsoft.Win32.OpenFileDialog)">
            <summary>Opens the dialog to gather an image.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.WpfExtensions.GetAbsoluteScreenCoordinates(System.Windows.FrameworkElement)">
            <summary>Gets the device independent screen coordinates for a visual.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.WpfExtensions.GetContainingNameScope(System.Windows.DependencyObject)">
            <summary>Searches the tree up until an element is found with an NameScope.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.WpfExtensions.GetVisualChildByName``1(System.Windows.Media.Visual,System.String)">
            <summary>
                Searches the visual childs fo an element of type <typeparamref name="T" /> where the name of the frame work element is
                <paramref name="name" />.
            </summary>
            <typeparam name="T">The type to search for</typeparam>
            <param name="container">the containing visual</param>
            <param name="name">the name of the element to find inside <paramref name="container" /></param>
            <returns></returns>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.WpfExtensions.GetVisualChildByCondition``1(System.Windows.Media.Visual,System.Func{``0,System.Boolean})">
            <summary>
                Searches the visual children for an element of type <typeparamref name="T" /> where the name of the frame work element is
                <paramref name="name" />.
            </summary>
            <typeparam name="T">The type to search for</typeparam>
            <param name="container">the containing visual</param>
            <param name="condition">The condition the object needs</param>
            <returns></returns>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.WpfExtensions.GetParentByCondition``1(System.Windows.FrameworkElement,System.Func{``0,System.Boolean})">
            <summary>
                Searches the parents for an element of type <typeparamref name="T" /> where the frame work element meets the <paramref name="condition"/>.
            </summary>
            <typeparam name="T">The type to search for</typeparam>
            <param name="element">the child control</param>
            <param name="condition">The condition the object needs</param>
            <returns></returns>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.WpfExtensions.ConvertTo_Image(System.Windows.FrameworkElement)">
            <summary>Converts an WPF <see cref="T:System.Windows.FrameworkElement" /> to an image.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Extensions.DataExtensions">
            <summary>Bunch of data extension methods.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.DataExtensions.PrintDiagnosticString(System.Data.DataSet,System.Int32,System.String)">
            <summary>Prints the content of each table in a formatted string for debug purpose.</summary>
            <param name="set"></param>
            <param name="columnsize">
                The size of one column in characters. If the input is larger then the exceeding character will be removed from inside and
                replaced with '~' char
            </param>
            <param name="separator">The column separator</param>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.DataExtensions.GetDiagnosticString(System.Data.DataSet,System.Int32,System.String)">
            <summary>Prints the content of each table in a formatted string for debug purpose.</summary>
            <param name="set"></param>
            <param name="columnsize">
                The size of one column in characters. If the input is larger then the exceeding character will be removed from inside and
                replaced with '~' char
            </param>
            <param name="separator">The column separator</param>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.DataExtensions.PrintDiagnosticString(System.Data.DataTable,System.String,System.Int32,System.String)">
            <summary>Prints the content of the table in a formatted string for debug purpose.</summary>
            <param name="table"></param>
            <param name="tablePrefix">The prefix after line break in the output</param>
            <param name="columnsize">
                The size of one column in characters. If the input is larger then the exceeding character will be removed from inside and
                replaced with '~' char
            </param>
            <param name="separator">The column separator</param>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.DataExtensions.PrintDiagnosticString(System.Data.DataRowCollection,System.String,System.Int32,System.String)">
            <summary>Prints the content of the table in a formatted string for debug purpose.</summary>
            <param name="table"></param>
            <param name="tablePrefix">The prefix after line break in the output</param>
            <param name="columnsize">
                The size of one column in characters. If the input is larger then the exceeding character will be removed from inside and
                replaced with '~' char
            </param>
            <param name="separator">The column separator</param>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.DataExtensions.PrintDiagnosticString(System.Collections.Generic.IEnumerable{System.Data.DataRow},System.String,System.Int32,System.String)">
            <summary>Prints the content of the table in a formatted string for debug purpose.</summary>
            <param name="rows"></param>
            <param name="tablePrefix">The prefix after line break in the output</param>
            <param name="columnsize">
                The size of one column in characters. If the input is larger then the exceeding character will be removed from inside and
                replaced with '~' char
            </param>
            <param name="separator">The column separator</param>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.DataExtensions.GetDiagnosticString(System.Data.DataTable,System.String,System.Int32,System.String)">
            <summary>Returns the tables content in a table formatted string for debug purpose.</summary>
            <param name="dataTable"></param>
            <param name="tablePrefix">The prefix after line break in the output</param>
            <param name="columnsize">
                The size of one column in characters. If the input is larger then the exceeding character will be removed from inside and
                replaced with '~' char
            </param>
            <param name="separator">The column separator</param>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.DataExtensions.GetDiagnosticString(System.Data.DataRowCollection,System.String,System.Int32,System.String)">
            <summary>Returns a rows content for debug purpose. </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Extensions.DataExtensions.GetDiagnosticString(System.Collections.Generic.IEnumerable{System.Data.DataRow},System.String,System.Int32,System.String)">
            <summary>Returns a rows content for debug purpose. </summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Cmd">
            <summary>Allows different methods to delegate CMD commands to a CMD command window.</summary>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Cmd.Hidden">
            <summary>Execute CMD command in a hidden CMD window.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Cmd.Hidden.RunElevated(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Runs a list of CMD commands in an elevated window. If current process is not elevated then UAC window is
                opened.
            </summary>
            <param name="commands">List of commands to execute by CMD window.</param>
            <returns>The associated process.</returns>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Cmd.Hidden.RunElevated(System.String)">
            <summary>Runs a CMD command in an elevated window. If current process is not elevated then UAC window is opened.</summary>
            <param name="command">The command to execute.</param>
            <returns>The associated process.</returns>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Cmd.Hidden.Run(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Runs a list of CMD commands.</summary>
            <param name="commands">List of commands to execute by CMD window.</param>
            <returns>The associated process.</returns>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Cmd.Hidden.Run(System.String)">
            <summary>Runs a CMD command.</summary>
            <param name="command">The command to execute.</param>
            <returns>The associated process.</returns>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Cmd.Hidden.Timed">
            <summary>
                Delayed command execution. Use this Wrapper to open a CMD window then wait for a specific amount of time and
                then execute commands.
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Cmd.Hidden.Timed.RunElevated(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
                Runs a list of CMD commands in an elevated window. If current process is not elevated then UAC window is
                opened.
            </summary>
            <param name="commands">List of commands to execute by CMD window.</param>
            <param name="millisecounds">Milliseconds to wait in external process before commands will be executed</param>
            <returns>The associated process.</returns>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Cmd.Hidden.Timed.Run(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>Runs a list of CMD commands.</summary>
            <param name="commands">List of commands to execute by CMD window.</param>
            <param name="millisecounds">Milliseconds to wait in external process before commands will be executed</param>
            <returns>The associated process.</returns>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Cmd.Visible">
            <summary>Execute CMD command in a visible CMD window.</summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Cmd.Visible.RunElevated(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Runs a list of CMD commands in an elevated window. If current process is not elevated then UAC window is
                opened.
            </summary>
            <param name="commands">List of commands to execute by CMD window.</param>
            <returns>The associated process.</returns>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Cmd.Visible.RunElevated(System.String)">
            <summary>Runs a CMD command in an elevated window. If current process is not elevated then UAC window is opened.</summary>
            <param name="command">The command to execute.</param>
            <returns>The associated process.</returns>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Cmd.Visible.Run(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Runs a list of CMD commands.</summary>
            <param name="commands">List of commands to execute by CMD window.</param>
            <returns>The associated process.</returns>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Cmd.Visible.Run(System.String)">
            <summary>Runs a CMD command.</summary>
            <param name="command">The command to execute.</param>
            <returns>The associated process.</returns>
        </member>
        <member name="T:CsWpfBase.Ev.Public.Cmd.Visible.Timed">
            <summary>
                Delayed command execution. Use this Wrapper to open a CMD window then wait for a specific amount of time and
                then execute commands.
            </summary>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Cmd.Visible.Timed.RunElevated(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>
                Runs a list of CMD commands in an elevated window. If current process is not elevated then UAC window is
                opened.
            </summary>
            <param name="commands">List of commands to execute by CMD window.</param>
            <param name="millisecounds">Milliseconds to wait in external process before commands will be executed</param>
            <returns>The associated process.</returns>
        </member>
        <member name="M:CsWpfBase.Ev.Public.Cmd.Visible.Timed.Run(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>Runs a list of CMD commands.</summary>
            <param name="commands">List of commands to execute by CMD window.</param>
            <param name="millisecounds">Milliseconds to wait in external process before commands will be executed</param>
            <returns>The associated process.</returns>
        </member>
        <member name="T:CsWpfBase.Ev.CsWpfBaseConfig">
            <summary>Stores the configuration for the assembly</summary>
        </member>
        <member name="P:CsWpfBase.Ev.CsWpfBaseConfig.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Ev.CsWpfBaseConfig.#ctor(System.Uri)">
            <summary>Creates a new instance by providing the source file path.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.CsWpfBaseConfig.CsOnlineServer">
            <summary>Gets or sets the CsOnlineServer.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.CsWpfBaseConfig.CsOnlineDebugServer">
            <summary>Gets or sets the CsOnlineDebugServer.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.CsWpfBaseConfig.AgreementDeveloperName">
            <summary>Gets or sets the AgreementDeveloperName.</summary>
        </member>
        <member name="P:CsWpfBase.Ev.CsWpfBaseConfig.AgreementDeveloperAddress">
            <summary>Gets or sets the AgreementDeveloperAddress.</summary>
        </member>
        <member name="T:CsWpfBase.Global.app.install.agreement.CsgAgreementWindow">
            <summary>Interaction logic for AgreementWindow.xaml</summary>
            <summary>
            CsgAgreementWindow
            </summary>
        </member>
        <member name="F:CsWpfBase.Global.app.install.agreement.CsgAgreementWindow.AgreementProperty">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Global.app.install.agreement.CsgAgreementWindow.PrivacyAgreementProperty">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Global.app.install.agreement.CsgAgreementWindow.ApplicationNameProperty">
            <summary></summary>
        </member>
        <member name="M:CsWpfBase.Global.app.install.agreement.CsgAgreementWindow.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.agreement.CsgAgreementWindow.ApplicationName">
            <summary>Gets or sets the application name.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.agreement.CsgAgreementWindow.Agreement">
            <summary>Gets or sets the agreement the window will present.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.agreement.CsgAgreementWindow.PrivacyAgreement">
            <summary>Gets or sets the privacy agreement the window will present.</summary>
        </member>
        <member name="M:CsWpfBase.Global.app.install.agreement.CsgAgreementWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CsWpfBase.Global.app.install.agreement.CsgAgreementPrivacyAddition">
            <summary>A wrapper around the privacy agreement file. Use <see cref="M:CsWpfBase.Utilitys.templates.FileTemplate.GetString" /> method to get the full agreement.</summary>
        </member>
        <member name="T:CsWpfBase.Global.app.install.agreement.CsgAgreement">
            <summary>A wrapper around the agreement file. Use <see cref="M:CsWpfBase.Utilitys.templates.FileTemplate.GetString" /> method to get the full agreement.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.agreement.CsgAgreement.ProductName">
            <summary>Configure configuration to adjust this</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.agreement.CsgAgreement.ProductDeveloper">
            <summary>Configure configuration to adjust this</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.agreement.CsgAgreement.ProductDeveloperAddress">
            <summary>Configure configuration to adjust this</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.agreement.CsgAgreement.SignatureDate">
            <summary>Automatically inserts the date</summary>
        </member>
        <member name="T:CsWpfBase.Global.app.install.agreement.CsgAppInstallAgreement">
            <summary>See <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.agreement.CsgAppInstallAgreement.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.agreement.CsgAppInstallAgreement.Agreement">
            <summary>Gets the agreement stored inside the <see cref="T:CsWpfBase.Global.app.install.agreement.CsgAgreement" /> class.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.agreement.CsgAppInstallAgreement.PrivacyAgreement">
            <summary>Gets the privacy agreement stored inside the <see cref="T:CsWpfBase.Global.app.install.agreement.CsgAgreementPrivacyAddition" /> class.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.agreement.CsgAppInstallAgreement.IsLicensed">
            <summary>Gets or sets the IsLicensed.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.agreement.CsgAppInstallAgreement.AcceptedAgreement">
            <summary>Gets or sets the AcceptedAgreement.</summary>
        </member>
        <member name="M:CsWpfBase.Global.app.install.agreement.CsgAppInstallAgreement.CheckAcceptance">
            <summary>Ensures that the user have accepted the license.</summary>
        </member>
        <member name="T:CsWpfBase.Global.app.install.shortcut.CsgAppInstallShortcut">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.shortcut.CsgAppInstallShortcut.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.app.install.shortcut.CsgAppInstallShortcut.CreateOnDesktop(System.String)">
            <summary>Creates a shortcut to the application on the desktop.</summary>
        </member>
        <member name="M:CsWpfBase.Global.app.install.shortcut.CsgAppInstallShortcut.CreateInStartmenu(System.String)">
            <summary>Creates a shortcut to the application in the start menu.</summary>
        </member>
        <member name="M:CsWpfBase.Global.app.install.shortcut.CsgAppInstallShortcut.CreateInStartupFolder(System.String)">
            <summary>Creates a shortcut to the application in the startup folder.</summary>
        </member>
        <member name="M:CsWpfBase.Global.app.install.shortcut.CsgAppInstallShortcut.CreateShortcut(CsWpfBase.Global.app.install.shortcut.CsgLnkShortcut)">
            <summary>Creates a user defined shortcut.</summary>
        </member>
        <member name="T:CsWpfBase.Global.app.install.shortcut.CsgLnkShortcut">
            <summary>Defining shortcut property's.</summary>
        </member>
        <member name="M:CsWpfBase.Global.app.install.shortcut.CsgLnkShortcut.#ctor">
            <summary>Initializes a new Shortcut file with the standard properties retrieved from <see cref="T:CsWpfBase.Global.app.CsgAppInfo"/>.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.shortcut.CsgLnkShortcut.Name">
            <summary>This name will be displayed to the user</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.shortcut.CsgLnkShortcut.Description">
            <summary>This description will be used to give the user a hint to the shortcuts destination.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.shortcut.CsgLnkShortcut.DestinationDirectory">
            <summary>Defines the owning the directory of the shortcut.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.shortcut.CsgLnkShortcut.SourceFile">
            <summary>Defines the file which will be opened by the shortcut.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.shortcut.CsgLnkShortcut.SourceIconFile">
            <summary>Defines a .ico file or another executable or DLL containing the icon for this shortcut.</summary>
        </member>
        <member name="T:CsWpfBase.Global.app.install.CsgAppInstall">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.CsgAppInstall.Shortcut">
            <summary>Subset  of methods for shortcut installation.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.install.CsgAppInstall.Agreement">
            <summary>Provides informations for the current program license agreements.</summary>
        </member>
        <member name="M:CsWpfBase.Global.app.install.CsgAppInstall.GermanThread">
            <summary>
                <para>Set current thread culture to German</para>
                <para>includes WPF based date time formating --> change it to <code>dd.MM.yyyy HH:mm:ss</code>
                </para>
            </summary>
        </member>
        <member name="T:CsWpfBase.Global.app.CsgAppData">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppData.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppData.InstanceId">
            <summary>Application unique ID. This ID is created whenever an Instance of this is created. This ID is not unique for a computer or its hardware.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppData.StartupCount">
            <summary>Whenever this instance is serialized the startup count is incremented by one starting with one.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppData.UseageTime">
            <summary>
                Whenever this instance is serialized the usage time will be incremented by the time this program was running. The time will not be updated when
                application close unexpected.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppData.FirstExecutionTime">
            <summary>The first execution time of the program.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppData.LastExecutionTime">
            <summary>Gets the time when the program was last time executed.</summary>
        </member>
        <member name="T:CsWpfBase.Global.app.CsgAppInfo">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppInfo.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppInfo.Id">
            <summary>Gets the assembly id, defined in project properties.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppInfo.Name">
            <summary>Gets the assembly name, defined in project properties.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppInfo.ProcessFile">
            <summary>Gets the file path to the current process.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppInfo.Product">
            <summary>Gets the product value, defined in project properties under the assembly informations.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppInfo.ProductTitle">
            <summary>Gets the product title value, defined in project properties under the assembly informations.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppInfo.Version">
            <summary>Gets the assembly version, defined in project properties under the assembly informations.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppInfo.Description">
            <summary>Gets the description, defined in project properties under the assembly informations.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppInfo.Copyright">
            <summary>Gets the copyright, defined in project properties under the assembly informations.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppInfo.Company">
            <summary>Gets the company, defined in project properties under the assembly informations.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgAppInfo.AttachedFiles">
            <summary>Gets the attached files to the '.exe' file. All referenced dll's should be included and also all files.</summary>
        </member>
        <member name="T:CsWpfBase.Global.app.CsgApp">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgApp.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgApp.Info">
            <summary>Gets runtime entry assembly informations about the current application. This scope is only available on applications not in web.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgApp.Data">
            <summary>Gets application data which will also be saved to disc.</summary>
        </member>
        <member name="P:CsWpfBase.Global.app.CsgApp.Install">
            <summary>Gets the application installation methods.</summary>
        </member>
        <member name="E:CsWpfBase.Global.app.CsgApp.OnExit">
            <summary>Invokes when the application exits. Use this event whenever it is possible.</summary>
        </member>
        <member name="M:CsWpfBase.Global.app.CsgApp.Exit">
            <summary>Do an ordered exit of the application. Use this function to exit the application appropriate.</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.CsgComputer">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputer.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputer.Id">
            <summary>Gets the computer id, this id will be saved to disk to gain speed.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputer.System">
            <summary>Get computer system informations</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputer.Processor">
            <summary>Get processor informations</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputer.Memory">
            <summary>Get memory informations</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputer.Screen">
            <summary>Get screen informations</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputer.Mainboard">
            <summary>Get main board informations</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputer.Graphic">
            <summary>Get graphic informations</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputer.DiskDrive">
            <summary>Get drives informations</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputer.Bios">
            <summary>Get bios informations</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputer.Network">
            <summary>Get network informations</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputer.Devices">
            <summary>Get device informations</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.CsgComputerDevices">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerDevices.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerDevices.Printers">
            <summary>Name of a computer manufacturer.</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.CsgComputerDevices.Reload(System.Boolean)">
            <summary>Reloads the hardware informations.</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.CsgComputerDiskDrive">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerDiskDrive.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerDiskDrive.Devices">
            <summary>Gets or sets the Devices.</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.CsgComputerDiskDrive.Reload">
            <summary>Reloads the hardware informations.</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.CsgComputerGraphic">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerGraphic.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerGraphic.Devices">
            <summary>Gets or sets the Devices.</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.CsgComputerGraphic.Reload(System.Boolean)">
            <summary>Reloads all the items in <see cref="P:CsWpfBase.Global.computer.CsgComputerGraphic.Devices" /> list.</summary>
            <param name="usecache">if true the WMI will only be queried if it haven't been done before.</param>
        </member>
        <member name="T:CsWpfBase.Global.computer.CsgComputerMainBoard">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerMainBoard.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.CsgComputerMainBoard.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerMainBoard.Manufacturer">
            <summary>Name of the organization responsible for producing the physical element.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerMainBoard.Product">
            <summary>Baseboard part number defined by the manufacturer.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerMainBoard.SerialNumber">
            <summary>Manufacturer-allocated number used to identify the physical element.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerMainBoard.PrimaryBusType">
            <summary>Primary bus type of the motherboard.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerMainBoard.SecondaryBusType">
            <summary>Secondary bus type of the motherboard.</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.CsgComputerMainBoard.Reload">
            <summary>Reloads the hardware informations.</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.CsgComputerNetwork">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerNetwork.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerNetwork.Devices">
            <summary>Gets a list of all network devices.</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.CsgComputerNetwork.Reload(System.Boolean)">
            <summary>Reloads all the items in <see cref="P:CsWpfBase.Global.computer.CsgComputerNetwork.Devices" /> list.</summary>
            <param name="usecache">if true the WMI will only be queried if it haven't been done before.</param>
        </member>
        <member name="T:CsWpfBase.Global.computer.CsgComputerProcessor">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerProcessor.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.CsgComputerProcessor.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerProcessor.Architecture">
            <summary>Processor architecture used by the platform.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerProcessor.Family">
            <summary>Processor family type.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerProcessor.Manufacturer">
            <summary>Name of the processor manufacturer.</summary>
            <example>A. Datum Corporation</example>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerProcessor.MaxClockSpeed">
            <summary>Maximum speed of the processor, in MHz.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerProcessor.Name">
            <summary>Label by which the object is known. When this property is a subclass, it can be overridden to be a key property.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerProcessor.NumberOfCores">
            <summary>
                Number of cores for the current instance of the processor. A core is a physical processor on the integrated circuit. For example, in a dual-core
                processor this property has a value of 2.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerProcessor.NumberOfLogicalProcessors">
            <summary>
                Number of logical processors for the current instance of the processor. For processors capable of hyperthreading, this value includes only the
                processors which have hyperthreading enabled.
            </summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.CsgComputerProcessor.Reload(System.Boolean)">
            <summary>Reloads the hardware informations.</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.CsgComputerProcessor.Architectures">
            <summary>Processor architectures. Use <see cref="M:CsWpfBase.Ev.Public.Extensions.EnumExtensions.GetName(System.Enum)"/> for proper string naming</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Architectures.X86">
            <summary>x86</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Architectures.Mips">
            <summary>MIPS</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Architectures.Alpha">
            <summary>Alpha</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Architectures.PowerPc">
            <summary>PowerPC</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Architectures.Arm">
            <summary>ARM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Architectures.Ia64">
            <summary>ia64</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Architectures.X64">
            <summary>x64</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.CsgComputerProcessor.Familys">
            <summary>Processor family's Use <see cref="M:CsWpfBase.Ev.Public.Extensions.EnumExtensions.GetName(System.Enum)"/> for proper string naming</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Other">
            <summary>Other</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Unknown">
            <summary>Unknown</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.T8086">
            <summary>8086</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.T80286">
            <summary>80286</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Intel386Processor">
            <summary>Intel386™ Processor</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Intel486Processor">
            <summary>Intel486™ Processor</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.T8087">
            <summary>8087</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.T80287">
            <summary>80287</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.T80387">
            <summary>80387</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.T80487">
            <summary>80487</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.PentiumBrand">
            <summary>Pentium Brand</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.PentiumPro">
            <summary>Pentium Pro</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Pentium2">
            <summary>Pentium II</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.PentiumProcessorwithMmxTechnology">
            <summary>Pentium Processor with MMX™ Technology</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Celeron">
            <summary>Celeron™</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Pentium2Xeon">
            <summary>Pentium II Xeon™</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Pentium3">
            <summary>Pentium III</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.M1Family">
            <summary>M1 Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.M2Family">
            <summary>M2 Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.AmdDuronProcessorFamily">
            <summary>AMD Duron™ Processor Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.K5Family">
            <summary>K5 Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.K6Family">
            <summary>K6 Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.K62">
            <summary>K6-2</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.K63">
            <summary>K6-3</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.AmdAthlonProcessorFamily">
            <summary>AMD Athlon™ Processor Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Amd2900Family">
            <summary>AMD2900 Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.K62Plus">
            <summary>K6-2+</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.PowerPcFamily">
            <summary>Power PC Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.PowerPc601">
            <summary>Power PC 601</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.PowerPc603">
            <summary>Power PC 603</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.PowerPc603Plus">
            <summary>Power PC 603+</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.PowerPc604">
            <summary>Power PC 604</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.PowerPc620">
            <summary>Power PC 620</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.PowerPcx704">
            <summary>Power PC X704</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.PowerPc750">
            <summary>Power PC 750</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.AlphaFamily">
            <summary>Alpha Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Alpha21064">
            <summary>Alpha 21064</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Alpha21066">
            <summary>Alpha 21066</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Alpha21164">
            <summary>Alpha 21164</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Alpha21164Pc">
            <summary>Alpha 21164PC</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Alpha21164A">
            <summary>Alpha 21164a</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Alpha21264">
            <summary>Alpha 21264</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Alpha21364">
            <summary>Alpha 21364</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.MipsFamily">
            <summary>MIPS Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Mipsr4000">
            <summary>MIPS R4000</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Mipsr4200">
            <summary>MIPS R4200</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Mipsr4400">
            <summary>MIPS R4400</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.MipsR4600">
            <summary>MIPS R4600</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.MipsR10000">
            <summary>MIPS R10000</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.SparcFamily">
            <summary>SPARC Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.SuperSparc">
            <summary>SuperSPARC</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.MicroSparc2">
            <summary>microSPARC II</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.MicroSparc2Ep">
            <summary>microSPARC IIep</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.UltraSparc">
            <summary>UltraSPARC</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.UltraSparc2">
            <summary>UltraSPARC II</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.UltraSparc2I">
            <summary>UltraSPARC IIi</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.UltraSparc3">
            <summary>UltraSPARC III</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.UltraSparc3I">
            <summary>UltraSPARC IIIi</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.T68040">
            <summary>68040</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.T68XxxFamily">
            <summary>68xxx Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.T68000">
            <summary>68000</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.T68010">
            <summary>68010</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.T68020">
            <summary>68020</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.T68030">
            <summary>68030</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.HobbitFamily">
            <summary>Hobbit Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.CrusoeTm5000Family">
            <summary>Crusoe™ TM5000 Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.CrusoeTm3000Family">
            <summary>Crusoe™ TM3000 Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.EfficeonTm8000Family">
            <summary>Efficeon™ TM8000 Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Weitek">
            <summary>Weitek</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.ItaniumProcessor">
            <summary>Itanium™ Processor</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.AmdAthlon64ProcessorFamily">
            <summary>AMD Athlon™ 64 Processor Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.AmdOpteronProcessorFamily">
            <summary>AMD Opteron™ Processor Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.PariscFamily">
            <summary>PA-RISC Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Parisc8500">
            <summary>PA-RISC 8500</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Parisc8000">
            <summary>PA-RISC 8000</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Parisc7300Lc">
            <summary>PA-RISC 7300LC</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Parisc7200">
            <summary>PA-RISC 7200</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Parisc7100Lc">
            <summary>PA-RISC 7100LC</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Parisc7100">
            <summary>PA-RISC 7100</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.V30Family">
            <summary>V30 Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Pentium3XeonProcessor">
            <summary>Pentium III Xeon™ Processor</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Pentium3ProcessorwithIntelSpeedStepTechnology">
            <summary>Pentium III Processor with Intel SpeedStep™ Technology</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Pentium4">
            <summary>Pentium 4</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.IntelXeon">
            <summary>Intel Xeon™</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.As400Family">
            <summary>AS400 Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.IntelXeonProcessorMp">
            <summary>Intel Xeon™ Processor MP</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.AmdAthlonXpFamily">
            <summary>AMD Athlon™ XP Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.AmdAthlonMpFamily">
            <summary>AMD Athlon™ MP Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.IntelItanium2">
            <summary>Intel Itanium 2</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.IntelPentiumMProcessor">
            <summary>Intel Pentium M Processor</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.K7">
            <summary>K7</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.IntelCorei72760Qm">
            <summary>Intel Core™ i7-2760QM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Ibm390Family">
            <summary>IBM390 Family</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.G4">
            <summary>G4</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.G5">
            <summary>G5</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.G6">
            <summary>G6</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.ArchitectureBase">
            <summary>z/Architecture Base</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.I860">
            <summary>i860</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.I960">
            <summary>i960</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Sh3">
            <summary>SH-3</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Sh4">
            <summary>SH-4</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Arm">
            <summary>ARM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.StrongArm">
            <summary>StrongARM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.T6X86">
            <summary>6x86</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.MediaGx">
            <summary>MediaGX</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Mii">
            <summary>MII</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.WinChip">
            <summary>WinChip</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.Dsp">
            <summary>DSP</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.CsgComputerProcessor.Familys.VideoProcessor">
            <summary>Video Processor</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.CsgComputerMemory">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerMemory.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.CsgComputerMemory.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerMemory.Total">
            <summary>
                Total size of physical memory. Be aware that, under some circumstances, this property may not return an accurate value for the physical memory.
                For example, it is not accurate if the BIOS is using some of the physical memory. For an accurate value, use the Capacity property in
                Win32_PhysicalMemory instead.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerMemory.Devices">
            <summary>Gets or sets the Devices.</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.CsgComputerMemory.Reload(System.Boolean)">
            <summary>Reloads all the items in <see cref="P:CsWpfBase.Global.computer.CsgComputerMemory.Devices" /> list.</summary>
            <param name="usecache">if true the WMI will only be queried if it haven't been done before.</param>
        </member>
        <member name="T:CsWpfBase.Global.computer.CsgComputerBios">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerBios.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.CsgComputerBios.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerBios.BiosCharacteristicsTable">
            <summary>Converts a bios characteristic to text.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerBios.Name">
            <summary>Name used to identify this software element.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerBios.Version">
            <summary>Gets or sets the Version.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerBios.Characteristics">
            <summary>Array of BIOS characteristics supported by the system as defined by the System Management BIOS Reference Specification.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerBios.Versions">
            <summary>
                Array of the complete system BIOS information. In many computers there can be several version strings that are stored in the registry and
                represent the system BIOS information.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerBios.CurrentLanguage">
            <summary>Name of the current BIOS language.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerBios.Manufacturer">
            <summary>Manufacturer of this software element.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerBios.ReleaseDate">
            <summary>Release date of the Windows BIOS in the Coordinated Universal Time (UTC) format </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerBios.SerialNumber">
            <summary>Assigned serial number of the software element.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerBios.SmBiosVersion">
            <summary>BIOS version as reported by SMBIOS.</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.CsgComputerBios.Reload(System.Boolean)">
            <summary>Reloads the hardware informations.</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.CsgComputerScreen">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerScreen.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.CsgComputerScreen.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerScreen.TotalWidth">
            <summary>Gets the total screen width.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerScreen.TotalHeight">
            <summary>Gets the total screen height.</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.CsgComputerSystem">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerSystem.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.CsgComputerSystem.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerSystem.Manufacturer">
            <summary>Name of a computer manufacturer.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerSystem.Model">
            <summary>Product name that a manufacturer gives to a computer. This property must have a value.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerSystem.SystemFamily">
            <summary>The family to which a particular computer belongs. A family refers to a set of computers that are similar but not identical from a hardware or software point of view.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerSystem.SystemSkuNumber">
            <summary>Identifies a particular computer configuration for sale. It is sometimes also called a product ID or purchase order number.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerSystem.PartOfDomain">
            <summary>If True, the computer is part of a domain. If the value is NULL, the computer is not in a domain or the status is unknown. If you remove the computer from a domain, the value becomes false.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.CsgComputerSystem.Workgroup">
            <summary>Name of the workgroup for this computer. If the value of the PartOfDomain property is False, then the name of the workgroup is returned.</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.CsgComputerSystem.Reload(System.Boolean)">
            <summary>Reloads the hardware informations.</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.parts.CsgNetworkDevice">
            <summary>represents the capabilities and management capacity of a partitioned area of a physical disk on a computer system running Windows.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgNetworkDevice.DeviceId">
            <summary>Address or other identifying information to uniquely name the logical device.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaType">
            <summary>The interface type as defined by the Internet Assigned Names Authority (IANA).</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgNetworkDevice.InterfaceIndex">
            <summary>
                The index that identifies the network interface. This index value may change when a network adapter is disabled and then enabled, and should not
                be considered persistent.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgNetworkDevice.PermanentAddress">
            <summary>
                The network address that is hardcoded into a port. This hardcoded address can be changed using a firmware upgrade or a software configuration.
                When this change is made, the field should be updated at the same time. PermanentAddress should be left blank if no hardcoded address exists for
                the network adapter.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgNetworkDevice.Name">
            <summary>Label by which the object is known. </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgNetworkDevice.ActiveMaximumTransmissionUnit">
            <summary>The active or negotiated maximum transmission unit (MTU) that can be supported.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgNetworkDevice.Speed">
            <summary>The bandwidth, in bits per second, of the port.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgNetworkDevice.DriverDate">
            <summary>The network adapter driver date in YYYY-MM-DD format.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgNetworkDevice.DriverVersion">
            <summary>A string representing the network adapter driver version.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgNetworkDevice.DriverProvider">
            <summary>The driver provider name.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgNetworkDevice.DriverDescription">
            <summary>The description for the network adapter driver.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgNetworkDevice.FullDuplex">
            <summary>Boolean that indicates that the port is operating in full duplex mode. </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgNetworkDevice.OperationalStatus">
            <summary>Current network interface operational status.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgNetworkDevice.WdmInterface">
            <summary>The lower-level interface of the network adapter is a WDM bus driver such as USB.</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes">
            <summary>
            Iana types
            </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Other">
            <summary>other - none of the following"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Regular1822">
            <summary>regular1822</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Hdh1822">
            <summary>hdh1822</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DdnX25">
            <summary>ddnX25</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Rfc877X25">
            <summary>rfc877x25</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.EthernetCsmacd">
            <summary>ethernetCsmacd - for all ethernet-like interfaces, regardless of speed, as per RFC3635"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Iso88023Csmacd">
            <summary>iso88023Csmacd - Deprecated via RFC3635 ethernetCsmacd (6) should be used instead"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Iso88024TokenBus">
            <summary>iso88024TokenBus</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Iso88025TokenRing">
            <summary>iso88025TokenRing</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Iso88026Man">
            <summary>iso88026Man</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.StarLan">
            <summary>starLan - Deprecated via RFC3635 ethernetCsmacd (6) should be used instead"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Proteon10Mbit">
            <summary>proteon10Mbit</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Proteon80Mbit">
            <summary>proteon80Mbit</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Hyperchannel">
            <summary>hyperchannel</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Fddi">
            <summary>fddi</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Lapb">
            <summary>lapb</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Sdlc">
            <summary>sdlc</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ds1">
            <summary>ds1 - DS1-MIB"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.E1">
            <summary>e1 - Obsolete see DS1-MIB"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.BasicIsdn">
            <summary>basicISDN - no longer used see also RFC2127"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.PrimaryIsdn">
            <summary>primaryISDN - no longer used see also RFC2127"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.PropPointToPointSerial">
            <summary>propPointToPointSerial - proprietary serial"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ppp">
            <summary>ppp</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.SoftwareLoopback">
            <summary>softwareLoopback</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Eon">
            <summary>eon - CLNP over IP "</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ethernet3Mbit">
            <summary>ethernet3Mbit</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Nsip">
            <summary>nsip - XNS over IP"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Slip">
            <summary>slip - generic SLIP"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ultra">
            <summary>ultra - ULTRA technologies"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ds3">
            <summary>ds3 - DS3-MIB"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Sip">
            <summary>sip - SMDS, coffee"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.FrameRelay">
            <summary>frameRelay - DTE only. "</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Rs232">
            <summary>rs232</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Para">
            <summary>para - parallel-port"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Arcnet">
            <summary>arcnet - arcnet"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.ArcnetPlus">
            <summary>arcnetPlus - arcnet plus"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Atm">
            <summary>atm - ATM cells"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Miox25">
            <summary>miox25</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Sonet">
            <summary>sonet - SONET or SDH "</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.X25Ple">
            <summary>x25ple</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Iso88022Llc">
            <summary>iso88022llc</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.LocalTalk">
            <summary>localTalk</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.SmdsDxi">
            <summary>smdsDxi</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.FrameRelayService">
            <summary>frameRelayService - FRNETSERV-MIB"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.V35">
            <summary>v35</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Hssi">
            <summary>hssi</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Hippi">
            <summary>hippi</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Modem">
            <summary>modem - Generic modem"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Aal5">
            <summary>aal5 - AAL5 over ATM"</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.SonetPath">
            <summary>sonetPath</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.SonetVt">
            <summary>sonetVT</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.SmdsIcip">
            <summary>SMDS InterCarrier Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.PropVirtual">
            <summary>proprietary virtual/internal</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.PropMultiplexor">
            <summary>proprietary multiplexing</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ieee80212">
            <summary>100BaseVG</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.FibreChannel">
            <summary>Fibre Channel</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.HippiInterface">
            <summary>HIPPI interfaces </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.FrameRelayInterconnect">
            <summary>Obsolete, use either frameRelay(32) or  frameRelayService(44).</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Aflane8023">
            <summary>ATM Emulated LAN for 802.3</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Aflane8025">
            <summary>ATM Emulated LAN for 802.5</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.CctEmul">
            <summary>ATM Emulated circuit</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.FastEther">
            <summary>Obsoleted via RFC3635 ethernetCsmacd (6) should be used instead</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Isdn">
            <summary>ISDN and X.25 </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.V11">
            <summary>CCITT V.11/X.21 </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.V36">
            <summary>CCITT V.36</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.G703At64K">
            <summary>CCITT G703 at 64Kbps</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.G703At2Mb">
            <summary>Obsolete see DS1-MIB</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Qllc">
            <summary>SNA QLLC </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.FastEtherFx">
            <summary>Obsoleted via RFC3635 ethernetCsmacd (6) should be used instead</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Channel">
            <summary>channel</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ieee80211">
            <summary>radio spread spectrum </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ibm370ParChan">
            <summary>IBM System 360/370 OEMI Channel</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Escon">
            <summary>IBM Enterprise Systems Connection</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Dlsw">
            <summary>Data Link Switching</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Isdns">
            <summary>ISDN S/T interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Isdnu">
            <summary>ISDN U interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Lapd">
            <summary>Link Access Protocol D</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.IpSwitch">
            <summary>IP Switching Objects</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Rsrb">
            <summary>Remote Source Route Bridging</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.AtmLogical">
            <summary>ATM Logical Port</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ds0">
            <summary>Digital Signal Level 0</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ds0Bundle">
            <summary>group of ds0s on the same ds1</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Bsc">
            <summary>Bisynchronous Protocol</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Async">
            <summary>Asynchronous Protocol</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Cnr">
            <summary>Combat Net Radio</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Iso88025Dtr">
            <summary>ISO 802.5r DTR</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Eplrs">
            <summary>Ext Pos Loc Report Sys</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Arap">
            <summary>Appletalk Remote Access Protocol</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.PropCnls">
            <summary>Proprietary Connectionless Protocol</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.HostPad">
            <summary>CCITT-ITU X.29 PAD Protocol</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.TermPad">
            <summary>CCITT-ITU X.3 PAD Facility</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.FrameRelayMpi">
            <summary>Multiproto Interconnect over FR</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.X213">
            <summary>CCITT-ITU X213</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Adsl">
            <summary>Asymmetric Digital Subscriber Loop</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Radsl">
            <summary>Rate-Adapt. Digital Subscriber Loop</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Sdsl">
            <summary>Symmetric Digital Subscriber Loop</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Vdsl">
            <summary>Very H-Speed Digital Subscrib. Loop</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Iso88025CrfpInt">
            <summary>ISO 802.5 CRFP</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Myrinet">
            <summary>Myricom Myrinet</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VoiceEm">
            <summary>voice recEive and transMit</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VoiceFxo">
            <summary>voice Foreign Exchange Office</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VoiceFxs">
            <summary>voice Foreign Exchange Station</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VoiceEncap">
            <summary>voice encapsulation</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VoiceOverIp">
            <summary>voice over IP encapsulation</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.AtmDxi">
            <summary>ATM DXI</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.AtmFuni">
            <summary>ATM FUNI</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.AtmIma">
            <summary>ATM IMA </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.PppMultilinkBundle">
            <summary>PPP Multilink Bundle</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.IpOverCdlc">
            <summary>IBM ipOverCdlc</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.IpOverClaw">
            <summary>IBM Common Link Access to Workstn</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.StackToStack">
            <summary>IBM stackToStack</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VirtualIpAddress">
            <summary>IBM VIPA</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Mpc">
            <summary>IBM multi-protocol channel support</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.IpOverAtm">
            <summary>IBM ipOverAtm</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Iso88025Fiber">
            <summary>ISO 802.5j Fiber Token Ring</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Tdlc">
            <summary>IBM twinaxial data link control</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.GigabitEthernet">
            <summary>Obsoleted via RFC3635 ethernetCsmacd (6) should be used instead</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Hdlc">
            <summary>HDLC</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Lapf">
            <summary>LAP F</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.V37">
            <summary>V.37</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.X25Mlp">
            <summary>Multi-Link Protocol</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.X25HuntGroup">
            <summary>X25 Hunt Group</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.TranspHdlc">
            <summary>Transp HDLC</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Interleave">
            <summary>Interleave channel</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Fast">
            <summary>Fast channel</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ip">
            <summary>IP (for APPN HPR in IP networks)</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DocsCableMaclayer">
            <summary>CATV Mac Layer</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DocsCableDownstream">
            <summary>CATV Downstream interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DocsCableUpstream">
            <summary>CATV Upstream interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.A12MppSwitch">
            <summary>Avalon Parallel Processor</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Tunnel">
            <summary>Encapsulation interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Coffee">
            <summary>coffee pot</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ces">
            <summary>Circuit Emulation Service</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.AtmSubInterface">
            <summary>ATM Sub Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.L2Vlan">
            <summary>Layer 2 Virtual LAN using 802.1Q</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.L3Ipvlan">
            <summary>Layer 3 Virtual LAN using IP</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.L3Ipxvlan">
            <summary>Layer 3 Virtual LAN using IPX</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DigitalPowerline">
            <summary>IP over Power Lines</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.MediaMailOverIp">
            <summary>Multimedia Mail over IP</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Dtm">
            <summary>Dynamic syncronous Transfer Mode</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Dcn">
            <summary>Data Communications Network</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.IpForward">
            <summary>IP Forwarding Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Msdsl">
            <summary>Multi-rate Symmetric DSL</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ieee1394">
            <summary>IEEE1394 High Performance Serial Bus</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ifgsn">
            <summary>HIPPI-6400 </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DvbRccMacLayer">
            <summary>DVB-RCC MAC Layer</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DvbRccDownstream">
            <summary>DVB-RCC Downstream Channel</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DvbRccUpstream">
            <summary>DVB-RCC Upstream Channel</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.AtmVirtual">
            <summary>ATM Virtual Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.MplsTunnel">
            <summary>MPLS Tunnel Virtual Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Srp">
            <summary>Spatial Reuse Protocol</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VoiceOverAtm">
            <summary>Voice Over ATM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VoiceOverFrameRelay">
            <summary>Voice Over Frame Relay </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Idsl">
            <summary>Digital Subscriber Loop over ISDN</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.CompositeLink">
            <summary>Avici Composite Link Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ss7SigLink">
            <summary>SS7 Signaling Link </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.PropWirelessP2P">
            <summary>Prop. P2P wireless interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.FrForward">
            <summary>Frame Forward Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Rfc1483">
            <summary>Multiprotocol over ATM AAL5</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Usb">
            <summary>USB Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ieee8023AdLag">
            <summary>IEEE 802.3ad Link Aggregate</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Bgppolicyaccounting">
            <summary>BGP Policy Accounting</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Frf16MfrBundle">
            <summary>FRF .16 Multilink Frame Relay </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.H323Gatekeeper">
            <summary>H323 Gatekeeper</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.H323Proxy">
            <summary>H323 Voice and Video Proxy</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Mpls">
            <summary>MPLS</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.MfSigLink">
            <summary>Multi-frequency signaling link</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Hdsl2">
            <summary>High Bit-Rate DSL - 2nd generation</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Shdsl">
            <summary>Multirate HDSL2</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ds1Fdl">
            <summary>Facility Data Link 4Kbps on a DS1</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Pos">
            <summary>Packet over SONET/SDH Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DvbAsiIn">
            <summary>DVB-ASI Input</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DvbAsiOut">
            <summary>DVB-ASI Output </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Plc">
            <summary>Power Line Communtications</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Nfas">
            <summary>Non Facility Associated Signaling</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Tr008">
            <summary>TR008</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Gr303Rdt">
            <summary>Remote Digital Terminal</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Gr303Idt">
            <summary>Integrated Digital Terminal</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Isup">
            <summary>ISUP</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.PropDocsWirelessMaclayer">
            <summary>Cisco proprietary Maclayer</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.PropDocsWirelessDownstream">
            <summary>Cisco proprietary Downstream</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.PropDocsWirelessUpstream">
            <summary>Cisco proprietary Upstream</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Hiperlan2">
            <summary>HIPERLAN Type 2 Radio Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.PropBwAp2Mp">
            <summary>
                PropBroadbandWirelessAccesspt2multipt use of this iftype for IEEE 802.16 WMAN interfaces as per IEEE Std 802.16f is deprecated and ifType 237
                should be used instead.
            </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.SonetOverheadChannel">
            <summary>SONET Overhead Channel</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DigitalWrapperOverheadChannel">
            <summary>Digital Wrapper</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Aal2">
            <summary>ATM adaptation layer 2</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.RadioMac">
            <summary>MAC layer over radio links</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.AtmRadio">
            <summary>ATM over radio links </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Imt">
            <summary>Inter Machine Trunks</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Mvl">
            <summary>Multiple Virtual Lines DSL</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.ReachDsl">
            <summary>Long Reach DSL</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.FrDlciEndPt">
            <summary>Frame Relay DLCI End Point</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.AtmVciEndPt">
            <summary>ATM VCI End Point</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.OpticalChannel">
            <summary>Optical Channel</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.OpticalTransport">
            <summary>Optical Transport</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.PropAtm">
            <summary>Proprietary ATM </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VoiceOverCable">
            <summary>Voice Over Cable Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Infiniband">
            <summary>Infiniband</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.TeLink">
            <summary>TE Link</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Q2931">
            <summary>Q.2931</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VirtualTg">
            <summary>Virtual Trunk Group</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.SipTg">
            <summary>SIP Trunk Group</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.SipSig">
            <summary>SIP Signaling </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DocsCableUpstreamChannel">
            <summary>CATV Upstream Channel</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Econet">
            <summary>Acorn Econet</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Pon155">
            <summary>FSAN 155Mb Symetrical PON interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Pon622">
            <summary>FSAN622Mb Symetrical PON interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Bridge">
            <summary>Transparent bridge interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Linegroup">
            <summary>Interface common to multiple lines </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VoiceEmfgd">
            <summary>voice EM Feature Group D</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VoiceFgdeana">
            <summary>voice FGD Exchange Access North American</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VoiceDid">
            <summary>voice Direct Inward Dialing</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.MpegTransport">
            <summary>MPEG transport interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.SixToFour">
            <summary>6to4 interface (DEPRECATED)</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Gtp">
            <summary>GTP (GPRS Tunneling Protocol)</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.PdnEtherLoop1">
            <summary>Paradyne EtherLoop 1</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.PdnEtherLoop2">
            <summary>Paradyne EtherLoop 2</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.OpticalChannelGroup">
            <summary>Optical Channel Group</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Homepna">
            <summary>HomePNA ITU-T G.989</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Gfp">
            <summary>Generic Framing Procedure (GFP)</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.CiscoIsLvlan">
            <summary>Layer 2 Virtual LAN using Cisco ISL</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.ActelisMetaLoop">
            <summary>Acteleis proprietary MetaLOOP High Speed Link </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.FcipLink">
            <summary>FCIP Link </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Rpr">
            <summary>Resilient Packet Ring Interface Type</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Qam">
            <summary>RF Qam Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Lmp">
            <summary>Link Management Protocol</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.CblVectaStar">
            <summary>Cambridge Broadband Networks Limited VectaStar</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DocsCableMCmtsDownstream">
            <summary>CATV Modular CMTS Downstream Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Adsl2">
            <summary>Asymmetric Digital Subscriber Loop Version 2  (DEPRECATED/OBSOLETED - please use adsl2plus 238 instead)</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.MacSecControlledIf">
            <summary>MACSecControlled </summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.MacSecUncontrolledIf">
            <summary>MACSecUncontrolled</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.AviciOpticalEther">
            <summary>Avici Optical Ethernet Aggregate</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Atmbond">
            <summary>atmbond</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VoiceFgdos">
            <summary>voice FGD Operator Services</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.MocaVersion1">
            <summary>MultiMedia over Coax Alliance (MoCA) Interface as documented in information provided privately to IANA</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ieee80216Wman">
            <summary>IEEE 802.16 WMAN interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Adsl2Plus">
            <summary>Asymmetric Digital Subscriber Loop Version 2,  Version 2 Plus and all variants</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DvbRcsMacLayer">
            <summary>DVB-RCS MAC Layer</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DvbTdm">
            <summary>DVB Satellite TDM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DvbRcsTdma">
            <summary>DVB-RCS TDMA</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.X86Laps">
            <summary>LAPS based on ITU-T X.86/Y.1323</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.WwanPp">
            <summary>3GPP WWAN</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.WwanPp2">
            <summary>3GPP2 WWAN</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VoiceEbs">
            <summary>voice P-phone EBS physical interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.IfPwType">
            <summary>Pseudowire interface type</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ilan">
            <summary>Internal LAN on a bridge per IEEE 802.1ap</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Pip">
            <summary>Provider Instance Port on a bridge per IEEE 802.1ah PBB</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.AluElp">
            <summary>Alcatel-Lucent Ethernet Link Protection</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Gpon">
            <summary>Gigabit-capable passive optical networks (G-PON) as per ITU-T G.948</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Vdsl2">
            <summary>Very high speed digital subscriber line Version 2 (as per ITU-T Recommendation G.993.2)</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.CapwapDot11Profile">
            <summary>WLAN Profile Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.CapwapDot11Bss">
            <summary>WLAN BSS Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.CapwapWtpVirtualRadio">
            <summary>WTP Virtual Radio Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Bits">
            <summary>bitsport</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DocsCableUpstreamRfPort">
            <summary>DOCSIS CATV Upstream RF Port</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.CableDownstreamRfPort">
            <summary>CATV downstream RF port</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VmwareVirtualNic">
            <summary>VMware Virtual Network Interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Ieee802154">
            <summary>IEEE 802.15.4 WPAN interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.OtnOdu">
            <summary>OTN Optical Data Unit</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.OtnOtu">
            <summary>OTN Optical channel Transport Unit</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.IfVfiType">
            <summary>VPLS Forwarding Instance Interface Type</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.G9981">
            <summary>G.998.1 bonded interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.G9982">
            <summary>G.998.2 bonded interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.G9983">
            <summary>G.998.3 bonded interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.AluEpon">
            <summary>Ethernet Passive Optical Networks (E-PON)</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.AluEponOnu">
            <summary>EPON Optical Network Unit</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.AluEponPhysicalUni">
            <summary>EPON physical User to Network interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.AluEponLogicalLink">
            <summary>The emulation of a point-to-point link over the EPON layer</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.AluGponOnu">
            <summary>GPON Optical Network Unit</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.AluGponPhysicalUni">
            <summary>GPON physical User to Network interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.VmwareNicTeam">
            <summary>VMware NIC Team</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DocsOfdmDownstream">
            <summary>CATV Downstream OFDM interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.DocsOfdmaUpstream">
            <summary>CATV Upstream OFDMA interface</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Gfast">
            <summary>G.fast port</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.IanaTypes.Sdci">
            <summary>SDCI (IO-Link)</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.parts.CsgNetworkDevice.OperationalStates">
            <summary>Interface operational states</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.OperationalStates.Up">
            <summary>Up</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.OperationalStates.Down">
            <summary>Down</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.OperationalStates.Testing">
            <summary>Testing</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.OperationalStates.Unknown">
            <summary>Unknown</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.OperationalStates.Dormant">
            <summary>Dormant</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.OperationalStates.NotPresent">
            <summary>Not Present</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgNetworkDevice.OperationalStates.LowerLayerDown">
            <summary>Lower layer down </summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.parts.CsgDiskDriveDevice">
            <summary> represents a physical disk drive as seen by a computer running the Windows operating system.</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.parts.CsgDiskDriveDevice.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskDriveDevice.DeviceId">
            <summary>Unique identifier of the disk drive with other devices on the system.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskDriveDevice.Index">
            <summary>
                Physical drive number of the given drive. This property is filled by the GetDriveMapInfo method. A value of 0xFF indicates that the given drive
                does not map to a physical drive.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskDriveDevice.InterfaceType">
            <summary>Interface type of physical disk drive. Values can be SCSI, HDC, IDE, USB, 1394 </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskDriveDevice.Manufacturer">
            <summary>Name of the disk drive manufacturer.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskDriveDevice.Model">
            <summary>Manufacturer's model number of the disk drive.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskDriveDevice.FirmwareRevision">
            <summary>Revision for the disk drive firmware that is assigned by the manufacturer.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskDriveDevice.Capabilitys">
            <summary>
                Array of capabilities of the media access device. For example, the device may support random access (3), removable media (7), and automatic
                cleaning (9).
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskDriveDevice.MediaLoaded">
            <summary>
                If True, the media for a disk drive is loaded, which means that the device has a readable file system and is accessible. For fixed disk drives,
                this property will always be TRUE.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskDriveDevice.MediaType">
            <summary>
                Type of media used or accessed by this device. Values: 'External hard disk media', 'Removable media other than floppy', 'Fixed hard disk media',
                'Format is unknown', 'Removable media ("Removable media other than floppy")', 'Fixed hard disk ("Fixed hard disk media")', 'Unknown ("Format is
                unknown")'
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskDriveDevice.PartitionCount">
            <summary>Number of partitions on this physical disk drive that are recognized by the operating system.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskDriveDevice.SerialNumber">
            <summary>Number allocated by the manufacturer to identify the physical media. </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskDriveDevice.Size">
            <summary>
                Size of the disk drive. It is calculated by multiplying the total number of cylinders, tracks in each cylinder, sectors in each track, and bytes
                in each sector.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskDriveDevice.Status">
            <summary>
                Current status of the object. Various operational and nonoperational statuses can be defined. Operational statuses include: "OK", "Degraded", and
                "Pred Fail" (an element, such as a SMART-enabled hard disk drive, may be functioning properly but predicting a failure in the near future).
                Nonoperational statuses include: "Error", "Starting", "Stopping", and "Service". The latter, "Service", could apply during mirror-resilvering of
                a disk, reload of a user permissions list, or other administrative work. Not all such work is online, yet the managed element is neither "OK" nor
                in one of the other states.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskDriveDevice.Partitions">
            <summary>Gets or sets the Partitions.</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.parts.CsgDiskPartition">
            <summary>represents the capabilities and management capacity of a partitioned area of a physical disk on a computer system running Windows.</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.parts.CsgDiskPartition.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskPartition.DeviceId">
            <summary>Unique identifier of the disk drive and partition, from the rest of the system.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskPartition.DiskIndex">
            <summary>Index number of the disk containing this partition.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskPartition.Bootable">
            <summary>Indicates whether the computer can be booted from this partition.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskPartition.BootPartition">
            <summary>Partition is the active partition. The operating system uses the active partition when booting from a hard disk.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskPartition.PrimaryPartition">
            <summary>If True, this is the primary partition.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskPartition.Description">
            <summary>Description of the object.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskPartition.Type">
            <summary>Type of the partition. </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskPartition.Size">
            <summary>Total size of the partition.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgDiskPartition.LogicalDisks">
            <summary>Gets or sets the LogicalDisks.</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.parts.CsgGraphicDevice">
            <summary>represents the capabilities and management capacity of the video controller on a computer system running Windows.</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.parts.CsgGraphicDevice.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.DeviceId">
            <summary>Gets or sets the DeviceId.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.AdapterRam">
            <summary>Memory size of the video adapter.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.Caption">
            <summary>Short description of the object.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.Description">
            <summary>Description of the object.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.CurrentBitsPerPixel">
            <summary>Number of bits used to display each pixel.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.CurrentHorizontalResolution">
            <summary>Current number of horizontal pixels.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.CurrentVerticalResolution">
            <summary>Current number of vertical pixels.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.CurrentNumberOfColors">
            <summary>Number of colors supported at the current resolution.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.CurrentRefreshRate">
            <summary>
                Frequency at which the video controller refreshes the image for the monitor. A value of 0 (zero) indicates the default rate is being used, while
                0xFFFFFFFF indicates the optimal rate is being used.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.CurrentScanMode">
            <summary>Current scan mode.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.DriverDate">
            <summary>Last modification date and time of the currently installed video driver.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.DriverVersion">
            <summary>Version number of the video driver.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.MaxRefreshRate">
            <summary>Maximum refresh rate of the video controller in hertz.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.MinRefreshRate">
            <summary>Minimum refresh rate of the video controller in hertz.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.Name">
            <summary>Label by which the object is known. When subclassed, the property can be overridden to be a key property.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoArchitecture">
            <summary>Type of video architecture.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoMemoryType">
            <summary>Type of video memory.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoModeDescription">
            <summary>Current resolution, color, and scan mode settings of the video controller.</summary>
            <example>"1024 x 768 x 256 colors"</example>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoProcessor">
            <summary>Free-form string describing the video processor.</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.parts.CsgGraphicDevice.ScanModes">
            <summary>Scan modes</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.ScanModes.Other">
            <summary>Other</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.ScanModes.Unknown">
            <summary>Unknown</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.ScanModes.Interlaced">
            <summary>Interlaced</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.ScanModes.NonInterlaced">
            <summary>NonInterlaced</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoArchitectures">
            <summary>Video architecture</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoArchitectures.Other">
            <summary>Other</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoArchitectures.Unknown">
            <summary>Unknown</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoArchitectures.Cga">
            <summary>CGA</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoArchitectures.Ega">
            <summary>EGA</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoArchitectures.Vga">
            <summary>VGA</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoArchitectures.Svga">
            <summary>SVGA</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoArchitectures.Mda">
            <summary>MDA</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoArchitectures.Hgc">
            <summary>HGC</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoArchitectures.Mcga">
            <summary>MCGA</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoArchitectures.T8514A">
            <summary>8514A</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoArchitectures.Xga">
            <summary>XGA</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoArchitectures.LinearFrameBuffer">
            <summary>Linear Frame Buffer</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoArchitectures.Pc9">
            <summary>PC-9</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoMemoryTypes">
            <summary>Memory types</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoMemoryTypes.Other">
            <summary>Other</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoMemoryTypes.Unknown">
            <summary>Unknown</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoMemoryTypes.Vram">
            <summary>VRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoMemoryTypes.Dram">
            <summary>DRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoMemoryTypes.Sram">
            <summary>SRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoMemoryTypes.Wram">
            <summary>WRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoMemoryTypes.Edoram">
            <summary>EDO RAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoMemoryTypes.BurstSynchronousDram">
            <summary>Burst Synchronous DRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoMemoryTypes.PipelinedBurstSram">
            <summary>Pipelined Burst SRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoMemoryTypes.Cdram">
            <summary>CDRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoMemoryTypes.T3Dram">
            <summary>3DRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoMemoryTypes.Sdram">
            <summary>SDRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgGraphicDevice.VideoMemoryTypes.Sgram">
            <summary>SGRAM</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.parts.CsgLogicalDisk">
            <summary>represents a data source that resolves to an actual local storage device on a computer system running Windows.</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.parts.CsgLogicalDisk.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgLogicalDisk.DeviceId">
            <summary>Unique identifier of the logical disk from other devices on the system.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgLogicalDisk.DriveType">
            <summary>Numeric value that corresponds to the type of disk drive this logical disk represents.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgLogicalDisk.FileSystem">
            <summary>File system on the logical disk. Example: NTFS</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgLogicalDisk.Size">
            <summary>Size of the disk drive.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgLogicalDisk.FreeSpace">
            <summary>Space, in bytes, available on the logical disk.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgLogicalDisk.Name">
            <summary>Label by which the object is known.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgLogicalDisk.VolumeName">
            <summary>Volume name of the logical disk. </summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.parts.CsgLogicalDisk.DriveTypes">
            <summary>Numeric value that corresponds to the type of disk drive this logical disk represents.</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgLogicalDisk.DriveTypes.Unknown">
            <summary>Unknown</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgLogicalDisk.DriveTypes.NoRootDirectory">
            <summary>NoRootDirectory</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgLogicalDisk.DriveTypes.RemovableDisk">
            <summary>RemovableDisk</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgLogicalDisk.DriveTypes.LocalDisk">
            <summary>LocalDisk</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgLogicalDisk.DriveTypes.NetworkDrive">
            <summary>NetworkDrive</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgLogicalDisk.DriveTypes.CompactDisc">
            <summary>CompactDisc</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgLogicalDisk.DriveTypes.RamDisk">
            <summary>RAMDisk</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.parts.CsgMemoryDevice">
            <summary>represents a physical memory device located on a computer system and available to the operating system.</summary>
        </member>
        <member name="M:CsWpfBase.Global.computer.parts.CsgMemoryDevice.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Tag">
            <summary>Unique identifier for the physical memory device that is represented by an instance of Win32_PhysicalMemory.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgMemoryDevice.BankLabel">
            <summary>Physically labeled bank where the memory is located.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Capacity">
            <summary>Total capacity of the physical memory—in bytes.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgMemoryDevice.ConfiguredClockSpeed">
            <summary>The configured clock speed of the memory device, in megahertz (MHz), or 0, if the speed is unknown.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgMemoryDevice.DeviceLocator">
            <summary>Label of the socket or circuit board that holds the memory.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Manufacturer">
            <summary>Name of the organization responsible for producing the physical element.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgMemoryDevice.MemoryType">
            <summary>
                Type of physical memory. This is a CIM value that is mapped to the SMBIOS value. The SMBIOSMemoryType property contains the raw SMBIOS
                memory type.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Speed">
            <summary>Speed of the physical memory in nanoseconds.</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types">
            <summary>possible memory types</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Unknown">
            <summary>Unknown</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Other">
            <summary>Other</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Dram">
            <summary>DRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.SynchronousDram">
            <summary>Synchronous DRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.CacheDram">
            <summary>Cache DRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Edo">
            <summary>EDO</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Edram">
            <summary>EDRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Vram">
            <summary>VRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Sram">
            <summary>SRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Ram">
            <summary>RAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Rom">
            <summary>ROM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Flash">
            <summary>Flash</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Eeprom">
            <summary>EEPROM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Feprom">
            <summary>FEPROM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Eprom">
            <summary>EPROM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Cdram">
            <summary>CDRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Dram3">
            <summary>3DRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Sdram">
            <summary>SDRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Sgram">
            <summary>SGRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Rdram">
            <summary>RDRAM</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Ddr">
            <summary>DDR</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Ddr2">
            <summary>DDR2</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Ddr2Fbdimm">
            <summary>DDR2</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Ddr3">
            <summary>DDR3</summary>
        </member>
        <member name="F:CsWpfBase.Global.computer.parts.CsgMemoryDevice.Types.Fbd2">
            <summary>FBD2</summary>
        </member>
        <member name="T:CsWpfBase.Global.computer.parts.PrinterDevice">
            <summary>represents an installed printer on the current machine.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.PrinterDevice.Name">
            <summary>Gets or sets the Name.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.PrinterDevice.DriverName">
            <summary>Gets or sets the DriverName.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.PrinterDevice.Comment">
            <summary>Gets or sets the Comment.</summary>
        </member>
        <member name="P:CsWpfBase.Global.computer.parts.PrinterDevice.Default">
            <summary>Gets or sets the Default.</summary>
        </member>
        <member name="T:CsWpfBase.Global.storage.cache.CsgCache">
            <summary>Collapses the CSG file storage cache functions</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.cache.CsgCache.Name">
            <summary>Gets or sets the Name.</summary>
        </member>
        <member name="T:CsWpfBase.Global.storage.compression.CsgCompression">
            <summary>See <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.compression.CsgCompression.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.compression.CsgCompression.Zip">
            <summary>Compression methods for zip files.</summary>
        </member>
        <member name="T:CsWpfBase.Global.storage.compression.CsgCompressionZip">
            <summary>
                <see cref="T:CsWpfBase.Global.CsGlobal" />
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.compression.CsgCompressionZip.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.compression.CsgCompressionZip.Decompress(System.String,System.String)">
            <summary>Decompresses a zip file into the specified target directory.</summary>
        </member>
        <member name="T:CsWpfBase.Global.storage.compression.zip.ZipStorer">
            <summary>
            Unique class for compression/decompression file. Represents a Zip file.
            </summary>
        </member>
        <member name="T:CsWpfBase.Global.storage.compression.zip.ZipStorer.Compression">
            <summary>
            Compression method enumeration
            </summary>
        </member>
        <member name="F:CsWpfBase.Global.storage.compression.zip.ZipStorer.Compression.Store">
            <summary>Uncompressed storage</summary> 
        </member>
        <member name="F:CsWpfBase.Global.storage.compression.zip.ZipStorer.Compression.Deflate">
            <summary>Deflate compression method</summary>
        </member>
        <member name="T:CsWpfBase.Global.storage.compression.zip.ZipStorer.ZipFileEntry">
            <summary>
            Represents an entry in Zip file directory
            </summary>
        </member>
        <member name="F:CsWpfBase.Global.storage.compression.zip.ZipStorer.ZipFileEntry.Method">
            <summary>Compression method</summary>
        </member>
        <member name="F:CsWpfBase.Global.storage.compression.zip.ZipStorer.ZipFileEntry.FilenameInZip">
            <summary>Full path and filename as stored in Zip</summary>
        </member>
        <member name="F:CsWpfBase.Global.storage.compression.zip.ZipStorer.ZipFileEntry.FileSize">
            <summary>Original file size</summary>
        </member>
        <member name="F:CsWpfBase.Global.storage.compression.zip.ZipStorer.ZipFileEntry.CompressedSize">
            <summary>Compressed file size</summary>
        </member>
        <member name="F:CsWpfBase.Global.storage.compression.zip.ZipStorer.ZipFileEntry.HeaderOffset">
            <summary>Offset of header information inside Zip storage</summary>
        </member>
        <member name="F:CsWpfBase.Global.storage.compression.zip.ZipStorer.ZipFileEntry.FileOffset">
            <summary>Offset of file inside Zip storage</summary>
        </member>
        <member name="F:CsWpfBase.Global.storage.compression.zip.ZipStorer.ZipFileEntry.HeaderSize">
            <summary>Size of header information</summary>
        </member>
        <member name="F:CsWpfBase.Global.storage.compression.zip.ZipStorer.ZipFileEntry.Crc32">
            <summary>32-bit checksum of entire file</summary>
        </member>
        <member name="F:CsWpfBase.Global.storage.compression.zip.ZipStorer.ZipFileEntry.ModifyTime">
            <summary>Last modification time of file</summary>
        </member>
        <member name="F:CsWpfBase.Global.storage.compression.zip.ZipStorer.ZipFileEntry.Comment">
            <summary>User comment for file</summary>
        </member>
        <member name="F:CsWpfBase.Global.storage.compression.zip.ZipStorer.ZipFileEntry.EncodeUTF8">
            <summary>True if UTF8 encoding for filename and comments, false if default (CP 437)</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.compression.zip.ZipStorer.ZipFileEntry.ToString">
            <summary>Overriden method</summary>
            <returns>Filename in Zip</returns>
        </member>
        <member name="F:CsWpfBase.Global.storage.compression.zip.ZipStorer.EncodeUTF8">
            <summary>True if UTF8 encoding for filename and comments, false if default (CP 437)</summary>
        </member>
        <member name="F:CsWpfBase.Global.storage.compression.zip.ZipStorer.ForceDeflating">
            <summary>Force deflate algotithm even if it inflates the stored file. Off by default.</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.compression.zip.ZipStorer.Create(System.String,System.String)">
            <summary>
            Method to create a new storage file
            </summary>
            <param name="_filename">Full path of Zip file to create</param>
            <param name="_comment">General comment for Zip file</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:CsWpfBase.Global.storage.compression.zip.ZipStorer.Create(System.IO.Stream,System.String)">
            <summary>
            Method to create a new zip storage in a stream
            </summary>
            <param name="_stream"></param>
            <param name="_comment"></param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:CsWpfBase.Global.storage.compression.zip.ZipStorer.Open(System.String,System.IO.FileAccess)">
            <summary>
            Method to open an existing storage file
            </summary>
            <param name="_filename">Full path of Zip file to open</param>
            <param name="_access">File access mode as used in FileStream constructor</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:CsWpfBase.Global.storage.compression.zip.ZipStorer.Open(System.IO.Stream,System.IO.FileAccess)">
            <summary>
            Method to open an existing storage from stream
            </summary>
            <param name="_stream">Already opened stream with zip contents</param>
            <param name="_access">File access mode for stream operations</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:CsWpfBase.Global.storage.compression.zip.ZipStorer.AddFile(CsWpfBase.Global.storage.compression.zip.ZipStorer.Compression,System.String,System.String,System.String)">
            <summary>
            Add full contents of a file into the Zip storage
            </summary>
            <param name="_method">Compression method</param>
            <param name="_pathname">Full path of file to add to Zip storage</param>
            <param name="_filenameInZip">Filename and path as desired in Zip directory</param>
            <param name="_comment">Comment for stored file</param>        
        </member>
        <member name="M:CsWpfBase.Global.storage.compression.zip.ZipStorer.AddStream(CsWpfBase.Global.storage.compression.zip.ZipStorer.Compression,System.String,System.IO.Stream,System.DateTime,System.String)">
            <summary>
            Add full contents of a stream into the Zip storage
            </summary>
            <param name="_method">Compression method</param>
            <param name="_filenameInZip">Filename and path as desired in Zip directory</param>
            <param name="_source">Stream object containing the data to store in Zip</param>
            <param name="_modTime">Modification time of the data to store</param>
            <param name="_comment">Comment for stored file</param>
        </member>
        <member name="M:CsWpfBase.Global.storage.compression.zip.ZipStorer.Close">
            <summary>
            Updates central directory (if pertinent) and close the Zip storage
            </summary>
            <remarks>This is a required step, unless automatic dispose is used</remarks>
        </member>
        <member name="M:CsWpfBase.Global.storage.compression.zip.ZipStorer.ReadCentralDir">
            <summary>
            Read all the file records in the central directory 
            </summary>
            <returns>List of all entries in directory</returns>
        </member>
        <member name="M:CsWpfBase.Global.storage.compression.zip.ZipStorer.ExtractFile(CsWpfBase.Global.storage.compression.zip.ZipStorer.ZipFileEntry,System.String)">
            <summary>
            Copy the contents of a stored file into a physical file
            </summary>
            <param name="_zfe">Entry information of file to extract</param>
            <param name="_filename">Name of file to store uncompressed data</param>
            <returns>True if success, false if not.</returns>
            <remarks>Unique compression methods are Store and Deflate</remarks>
        </member>
        <member name="M:CsWpfBase.Global.storage.compression.zip.ZipStorer.ExtractFile(CsWpfBase.Global.storage.compression.zip.ZipStorer.ZipFileEntry,System.IO.Stream)">
            <summary>
            Copy the contents of a stored file into an opened stream
            </summary>
            <param name="_zfe">Entry information of file to extract</param>
            <param name="_stream">Stream to store the uncompressed data</param>
            <returns>True if success, false if not.</returns>
            <remarks>Unique compression methods are Store and Deflate</remarks>
        </member>
        <member name="M:CsWpfBase.Global.storage.compression.zip.ZipStorer.RemoveEntries(CsWpfBase.Global.storage.compression.zip.ZipStorer@,System.Collections.Generic.List{CsWpfBase.Global.storage.compression.zip.ZipStorer.ZipFileEntry})">
            <summary>
            Removes one of many files in storage. It creates a new Zip file.
            </summary>
            <param name="_zip">Reference to the current Zip object</param>
            <param name="_zfes">List of Entries to remove from storage</param>
            <returns>True if success, false if not</returns>
            <remarks>This method only works for storage of type FileStream</remarks>
        </member>
        <member name="M:CsWpfBase.Global.storage.compression.zip.ZipStorer.Dispose">
            <summary>
            Closes the Zip file stream
            </summary>
        </member>
        <member name="T:CsWpfBase.Global.storage.CsgStorage">
            <summary>see <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.CsgStorage.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.CsgStorage.Public">
            <summary>A place for files where to user have access to this can help to backup or transfer application data.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.CsgStorage.Private">
            <summary>The private scope is meant to be as a storage place for files which the user can not change easily.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.CsgStorage.ConfigFile">
            <summary>config.txt in application folder path wrapper. Must be activated through <see cref="T:CsWpfBase.Global.GlobalFunctions" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.CsgStorage.Resource">
            <summary>Embedded resource addressing and loading.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.CsgStorage.Compression">
            <summary>Compression methods for storage.</summary>
        </member>
        <member name="T:CsWpfBase.Global.storage.configfile.CsgConfigFile">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.configfile.CsgConfigFile.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.configfile.CsgConfigFile.Params">
            <summary>Configuration file parameter.</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.configfile.CsgConfigFile.InterpretConfigFile">
            <summary>Reads the 'config.txt' in the application startup folder.</summary>
        </member>
        <member name="T:CsWpfBase.Global.storage.resource.CsgResourceDictionary">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.resource.CsgResourceDictionary.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.resource.CsgResourceDictionary.Standard">
            <summary>Gets the standard resource dictionary.</summary>
        </member>
        <member name="T:CsWpfBase.Global.storage.resource.CsgResource">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.resource.CsgResource.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.resource.CsgResource.Path">
            <summary>Provides application internal path system routines for addressing embedded resources.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.resource.CsgResource.File">
            <summary>Provides application internal file reading routines for embedded resources.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.resource.CsgResource.Dictionary">
            <summary>Subset of resource dictionaries used by this application.</summary>
        </member>
        <member name="T:CsWpfBase.Global.storage.resource.CsgResourceFile">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.resource.CsgResourceFile.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.resource.CsgResourceFile.OpenStream(System.String)">
            <summary>opens a stream to an embedded resource.</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.resource.CsgResourceFile.OpenStream(System.Uri)">
            <summary>opens a stream to an embedded resource.</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.resource.CsgResourceFile.Read(System.Uri,System.Text.Encoding)">
            <summary>Reading the text of a file by a 'pack <see cref="T:System.Uri" />'.</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.resource.CsgResourceFile.Read_AsBinary(System.Uri)">
            <summary>Reading the text of a file by a 'pack <see cref="T:System.Uri" />'.</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.resource.CsgResourceFile.Read(System.String,System.Text.Encoding)">
            <summary>Reading the text of a file by a 'pack <see cref="T:System.Uri" />'.</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.resource.CsgResourceFile.Read(System.String,System.String,System.Text.Encoding)">
            <summary>Reading the text of a file by a 'pack <see cref="T:System.Uri" />'.</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.resource.CsgResourceFile.Read_AsBinary(System.String,System.String)">
            <summary>Reading the text of a file by a 'pack <see cref="T:System.Uri" />'.</summary>
        </member>
        <member name="T:CsWpfBase.Global.storage.resource.CsgResourcesPath">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.resource.CsgResourcesPath.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.resource.CsgResourcesPath.Get(System.String,System.String)">
            <summary>returns the application internal address of a embedded resource.</summary>
        </member>
        <member name="T:CsWpfBase.Global.storage.scopes.CsgStorageScope">
            <summary>A scope is used for handled serialization and deserialization. It stores all instances and take care of saving at the application exit.</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.scopes.CsgStorageScope.#ctor(System.IO.DirectoryInfo,System.String)">
            <summary>Creates a new scope with the defined directory and extension.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.scopes.CsgStorageScope.Extension">
            <summary>Gets or sets the Extension.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.scopes.CsgStorageScope.Directory">
            <summary>Gets or sets the Directory.</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.scopes.CsgStorageScope.Handle``1(System.String,System.Func{``0})">
            <summary>Handles a serialize able object by an id (= filename). It will be save on application exit.</summary>
            <typeparam name="TObjectType">The type of the serialize able object.</typeparam>
            <param name="id">The id to associate with the object, this id is also the filename.</param>
            <param name="createFunc">The function which will be used if the object does not exist.</param>
        </member>
        <member name="M:CsWpfBase.Global.storage.scopes.CsgStorageScope.GetFilePathByName(System.String)">
            <summary>Combines the directory with the name and the extension.</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.scopes.CsgStorageScope.TransferDirectory(System.IO.DirectoryInfo)">
            <summary>Copy all files and directory's to the new target folder. It automatically deletes the source folder.</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.scopes.CsgStorageScope.TransferExtension(System.String)">
            <summary>Rename the files with the current extension to the new extension.</summary>
        </member>
        <member name="M:CsWpfBase.Global.storage.scopes.CsgStorageScope.Save">
            <summary>Saves the handles to disk</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.scopes.CsgStorageScope.FileHandle.Id">
            <summary>The unique id for this reference.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.scopes.CsgStorageScope.FileHandle.Reference">
            <summary>The associated object.</summary>
        </member>
        <member name="P:CsWpfBase.Global.storage.scopes.CsgStorageScope.FileHandle.CreateObject">
            <summary>Method used to create a new object.</summary>
        </member>
        <member name="T:CsWpfBase.Global.external.cmd.CsgreCmd">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.external.cmd.CsgreCmd.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.external.cmd.CsgreCmd.Hidden">
            <summary>Execute CMD command in a hidden CMD window.</summary>
        </member>
        <member name="P:CsWpfBase.Global.external.cmd.CsgreCmd.Visible">
            <summary>Execute CMD command in a visible CMD window.</summary>
        </member>
        <member name="T:CsWpfBase.Global.external.cmd.CsgreHiddenCmd">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.external.cmd.CsgreHiddenCmd.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.external.cmd.CsgreHiddenCmd.Timed">
            <summary>Delayed command execution. Use this to open a CMD window then wait for a specific amount of time and then execute commands.</summary>
        </member>
        <member name="M:CsWpfBase.Global.external.cmd.CsgreHiddenCmd.ElevatedCommand(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Runs a list of CMD commands in an elevated window. If current process is not elevated then UAC window is opened.</summary>
            <param name="commands">List of commands to execute by CMD window.</param>
            <returns>The associated process.</returns>
        </member>
        <member name="M:CsWpfBase.Global.external.cmd.CsgreHiddenCmd.ElevatedCommand(System.String)">
            <summary>Runs a CMD command in an elevated window. If current process is not elevated then UAC window is opened.</summary>
            <param name="command">The command to execute.</param>
            <returns>The associated process.</returns>
        </member>
        <member name="M:CsWpfBase.Global.external.cmd.CsgreHiddenCmd.Command(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Runs a list of CMD commands.</summary>
            <param name="commands">List of commands to execute by CMD window.</param>
            <returns>The associated process.</returns>
        </member>
        <member name="M:CsWpfBase.Global.external.cmd.CsgreHiddenCmd.Command(System.String)">
            <summary>Runs a CMD command.</summary>
            <param name="command">The command to execute.</param>
            <returns>The associated process.</returns>
        </member>
        <member name="T:CsWpfBase.Global.external.cmd.CsgreHiddenTimedCmd">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.external.cmd.CsgreHiddenTimedCmd.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.external.cmd.CsgreHiddenTimedCmd.ElevatedCommand(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>Runs a list of CMD commands in an elevated window. If current process is not elevated then UAC window is opened.</summary>
            <param name="commands">List of commands to execute by CMD window.</param>
            <param name="millisecounds">Milliseconds to wait in external process before commands will be executed</param>
            <returns>The associated process.</returns>
        </member>
        <member name="M:CsWpfBase.Global.external.cmd.CsgreHiddenTimedCmd.Command(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>Runs a list of CMD commands.</summary>
            <param name="commands">List of commands to execute by CMD window.</param>
            <param name="millisecounds">Milliseconds to wait in external process before commands will be executed</param>
            <returns>The associated process.</returns>
        </member>
        <member name="T:CsWpfBase.Global.external.cmd.CsgreVisibleCmd">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.external.cmd.CsgreVisibleCmd.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.external.cmd.CsgreVisibleCmd.Timed">
            <summary>Delayed command execution. Use this Wrapper to open a CMD window then wait for a specific amount of time and then execute commands.</summary>
        </member>
        <member name="M:CsWpfBase.Global.external.cmd.CsgreVisibleCmd.RunElevated(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Runs a list of CMD commands in an elevated window. If current process is not elevated then UAC window is opened.</summary>
            <param name="commands">List of commands to execute by CMD window.</param>
            <returns>The associated process.</returns>
        </member>
        <member name="M:CsWpfBase.Global.external.cmd.CsgreVisibleCmd.RunElevated(System.String)">
            <summary>Runs a CMD command in an elevated window. If current process is not elevated then UAC window is opened.</summary>
            <param name="command">The command to execute.</param>
            <returns>The associated process.</returns>
        </member>
        <member name="M:CsWpfBase.Global.external.cmd.CsgreVisibleCmd.Run(System.Collections.Generic.IEnumerable{System.String})">
            <summary>Runs a list of CMD commands.</summary>
            <param name="commands">List of commands to execute by CMD window.</param>
            <returns>The associated process.</returns>
        </member>
        <member name="M:CsWpfBase.Global.external.cmd.CsgreVisibleCmd.Run(System.String)">
            <summary>Runs a CMD command.</summary>
            <param name="command">The command to execute.</param>
            <returns>The associated process.</returns>
        </member>
        <member name="T:CsWpfBase.Global.external.cmd.CsgreVisibleTimedCmd">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.external.cmd.CsgreVisibleTimedCmd.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.external.cmd.CsgreVisibleTimedCmd.RunElevated(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>Runs a list of CMD commands in an elevated window. If current process is not elevated then UAC window is opened.</summary>
            <param name="commands">List of commands to execute by CMD window.</param>
            <param name="millisecounds">Milliseconds to wait in external process before commands will be executed</param>
            <returns>The associated process.</returns>
        </member>
        <member name="M:CsWpfBase.Global.external.cmd.CsgreVisibleTimedCmd.Run(System.Collections.Generic.List{System.String},System.Int32)">
            <summary>Runs a list of CMD commands.</summary>
            <param name="commands">List of commands to execute by CMD window.</param>
            <param name="millisecounds">Milliseconds to wait in external process before commands will be executed</param>
            <returns>The associated process.</returns>
        </member>
        <member name="T:CsWpfBase.Global.external.CsgRunExternal">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.external.CsgRunExternal.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.external.CsgRunExternal.Cmd">
            <summary>Executes a cmd command</summary>
        </member>
        <member name="M:CsWpfBase.Global.external.CsgRunExternal.Google(System.String)">
            <summary>Opens a google search for a specific term.</summary>
        </member>
        <member name="M:CsWpfBase.Global.external.CsgRunExternal.GoogleMaps(System.String)">
            <summary>Opens a google maps search for a specific term.</summary>
        </member>
        <member name="M:CsWpfBase.Global.external.CsgRunExternal.OpenWebpage(System.String)">
            <summary>Opens a Website</summary>
        </member>
        <member name="T:CsWpfBase.Global.GlobalFunctions">
            <summary>
                With the global functions enumeration the <see cref="T:CsWpfBase.Global.CsGlobal" /> engine can be partly activated. Use
                it in Combination with the following method: <see cref="M:CsWpfBase.Global.CsGlobal.Install(CsWpfBase.Global.GlobalFunctions)" />
            </summary>
        </member>
        <member name="F:CsWpfBase.Global.GlobalFunctions.RedirectUnhandledExceptions">
            <summary>Activates the automated logging of unhandled exceptions.</summary>
        </member>
        <member name="F:CsWpfBase.Global.GlobalFunctions.GermanThreadCulture">
            <summary>
                Activates the German thread culture so the <see cref="M:System.DateTime.ToString" /> method will use automatically a
                German time format.
            </summary>
        </member>
        <member name="F:CsWpfBase.Global.GlobalFunctions.Storage">
            <summary>Activates the file system so that the engine have disc writing permissions.</summary>
        </member>
        <member name="F:CsWpfBase.Global.GlobalFunctions.Setup">
            <summary>Activates the application setup engine for the application including an installer.</summary>
        </member>
        <member name="F:CsWpfBase.Global.GlobalFunctions.AppData">
            <summary>Activates the app data scope.</summary>
        </member>
        <member name="F:CsWpfBase.Global.GlobalFunctions.WpfStorage">
            <summary>Activates the WPF storage scope.</summary>
        </member>
        <member name="F:CsWpfBase.Global.GlobalFunctions.ConfigFile">
            <summary>Reads the 'config.txt' path at the startup folder in order to change the public file scope.</summary>
        </member>
        <member name="F:CsWpfBase.Global.GlobalFunctions.Agreement">
            <summary>Opens a agreement window which must be accepted in order to start the application.</summary>
        </member>
        <member name="F:CsWpfBase.Global.GlobalFunctions.OnlineConnectivity">
            <summary>Takes care of usage details and update process.</summary>
        </member>
        <member name="T:CsWpfBase.Global.CsGlobal">
            <summary>The global name space from Christian Sack, containing lot of useful features for fast program creation.</summary>
        </member>
        <member name="P:CsWpfBase.Global.CsGlobal.App">
            <summary>App specific information like usage details ids or assembly infos for the current application.</summary>
        </member>
        <member name="P:CsWpfBase.Global.CsGlobal.Debug">
            <summary>Debug helper for formatting debug messages.</summary>
        </member>
        <member name="P:CsWpfBase.Global.CsGlobal.RunExternal">
            <summary>Frequently used external programs or processes.</summary>
        </member>
        <member name="P:CsWpfBase.Global.CsGlobal.Storage">
            <summary>Used for saving objects on local discs.</summary>
        </member>
        <member name="P:CsWpfBase.Global.CsGlobal.Message">
            <summary>Message system to inform user or interact with user through a message window.</summary>
        </member>
        <member name="P:CsWpfBase.Global.CsGlobal.Wpf">
            <summary>collapsing useful functions for interacting with WPF.</summary>
        </member>
        <member name="P:CsWpfBase.Global.CsGlobal.Computer">
            <summary>computer scoped things like hardware or ids.</summary>
        </member>
        <member name="P:CsWpfBase.Global.CsGlobal.Os">
            <summary>OS scoped things like version and name.</summary>
        </member>
        <member name="P:CsWpfBase.Global.CsGlobal.Transmission">
            <summary>Gets transmission related functions.</summary>
        </member>
        <member name="M:CsWpfBase.Global.CsGlobal.IsInstalled(CsWpfBase.Global.GlobalFunctions)">
            <summary>Checks if specific code is installed.</summary>
        </member>
        <member name="M:CsWpfBase.Global.CsGlobal.Install(CsWpfBase.Global.GlobalFunctions)">
            <summary>
                <para>Installs and activate the passed components.</para>
            </summary>
        </member>
        <member name="T:CsWpfBase.Global.debug.CsgDebug">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.debug.CsgDebug.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.debug.CsgDebug.Write(System.Object,System.String,System.String,System.String,System.Int32)">
            <summary>Writes a debug message to output window</summary>
        </member>
        <member name="M:CsWpfBase.Global.debug.CsgDebug.Track(System.String,System.String,System.String,System.Int32)">
            <summary>
                Track the current line of code. Writes a message to the output window. Every time the line of code is hit an
                index is incremented by one.
            </summary>
            <param name="name"></param>
            <param name="method"></param>
            <param name="filepath"></param>
            <param name="line"></param>
        </member>
        <member name="M:CsWpfBase.Global.debug.CsgDebug.TrackKeyboardFocus">
            <summary>
                Tracks the Keyboard focus in WPF. When activated the focused element is written to the output window and is
                outlined with an border.
            </summary>
        </member>
        <member name="T:CsWpfBase.Global.debug.CodePosition">
            <summary>Wraps informations about the a code position.</summary>
        </member>
        <member name="M:CsWpfBase.Global.debug.CodePosition.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="P:CsWpfBase.Global.debug.CodePosition.PositionId">
            <summary>combining all code relevant positioning informations.</summary>
        </member>
        <member name="P:CsWpfBase.Global.debug.CodePosition.MethodName">
            <summary>The method name where the log was created from</summary>
        </member>
        <member name="P:CsWpfBase.Global.debug.CodePosition.FilePath">
            <summary>The complete file path to the code.</summary>
        </member>
        <member name="P:CsWpfBase.Global.debug.CodePosition.FileName">
            <summary>The file name extracted from <see cref="P:CsWpfBase.Global.debug.CodePosition.FilePath" />
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.debug.CodePosition.LineNumber">
            <summary>The line where the log was created at.</summary>
        </member>
        <member name="M:CsWpfBase.Global.debug.CodePosition.GetIdentifier(System.Int32)">
            <summary>Returns an human readable identifier limited to <paramref name="maxCharacters" /> for the code position.</summary>
        </member>
        <member name="T:CsWpfBase.Global.message.CsMessage">
            <summary>CsGlobal Message</summary>
        </member>
        <member name="M:CsWpfBase.Global.message.CsMessage.ToString">
            <summary>Does not return the name of the type.</summary>
        </member>
        <member name="P:CsWpfBase.Global.message.CsMessage.Id">
            <summary>Depends on the location and the message.</summary>
        </member>
        <member name="P:CsWpfBase.Global.message.CsMessage.MessageId">
            <summary>Depends on the message.</summary>
        </member>
        <member name="P:CsWpfBase.Global.message.CsMessage.Type">
            <summary>Gets the type of the message.</summary>
        </member>
        <member name="P:CsWpfBase.Global.message.CsMessage.Time">
            <summary>Gets the occurrence time of the message.</summary>
        </member>
        <member name="P:CsWpfBase.Global.message.CsMessage.Title">
            <summary>Gets or sets the Title of the message.</summary>
        </member>
        <member name="P:CsWpfBase.Global.message.CsMessage.Content">
            <summary>Gets the content of the message.</summary>
        </member>
        <member name="P:CsWpfBase.Global.message.CsMessage.Code">
            <summary>provides information of the code position where the message was fired.</summary>
        </member>
        <member name="P:CsWpfBase.Global.message.CsMessage.MessageButton">
            <summary>The message buttons to present, when presenting to the user.</summary>
        </member>
        <member name="P:CsWpfBase.Global.message.CsMessage.Result">
            <summary>The result after the message was presented to the user.</summary>
        </member>
        <member name="T:CsWpfBase.Global.message.CsMessage.MessageButtons">
            <summary>Depending on the <see cref="T:CsWpfBase.Global.message.CsMessage.MessageButtons" /> different buttons will be presented to the user.</summary>
        </member>
        <member name="F:CsWpfBase.Global.message.CsMessage.MessageButtons.Undefined">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Global.message.CsMessage.MessageButtons.YesNo">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Global.message.CsMessage.MessageButtons.YesNoCancel">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Global.message.CsMessage.MessageButtons.Ok">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Global.message.CsMessage.MessageButtons.OkCancel">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Global.message.CsMessage.MessageButtons.NoButtons">
            <summary></summary>
        </member>
        <member name="T:CsWpfBase.Global.message.CsMessage.MessageResults">
            <summary>The result of a message which result can be chosen in the message box is defined by the
                <see cref="T:CsWpfBase.Global.message.CsMessage.MessageButtons" /> enum.</summary>
        </member>
        <member name="F:CsWpfBase.Global.message.CsMessage.MessageResults.Undefined">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Global.message.CsMessage.MessageResults.Yes">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Global.message.CsMessage.MessageResults.No">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Global.message.CsMessage.MessageResults.Cancel">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Global.message.CsMessage.MessageResults.Ok">
            <summary></summary>
        </member>
        <member name="T:CsWpfBase.Global.message.CsMessage.Types">
            <summary>Log types</summary>
        </member>
        <member name="F:CsWpfBase.Global.message.CsMessage.Types.Undefined">
            <summary>Undefined.</summary>
        </member>
        <member name="F:CsWpfBase.Global.message.CsMessage.Types.Information">
            <summary>Use this to populate an information which is not necessarily needed.</summary>
        </member>
        <member name="F:CsWpfBase.Global.message.CsMessage.Types.Warning">
            <summary>Use this type when something unexpected could happen.</summary>
        </member>
        <member name="F:CsWpfBase.Global.message.CsMessage.Types.Error">
            <summary>Use this when an error happened which is handle able.</summary>
        </member>
        <member name="F:CsWpfBase.Global.message.CsMessage.Types.FatalError">
            <summary>Use this when an error happened which is not handle able. The application must be closed.</summary>
        </member>
        <member name="T:CsWpfBase.Global.message.CsgMessage">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.message.CsgMessage.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.message.CsgMessage.Push(System.Object,CsWpfBase.Global.message.CsMessage.Types,System.String,CsWpfBase.Global.message.CsMessage.MessageButtons,System.String,System.String,System.Int32)">
            <summary>Pushes a message on the users screen.</summary>
        </member>
        <member name="M:CsWpfBase.Global.message.CsgMessage.GetWindow(System.Object,CsWpfBase.Global.message.CsMessage.Types,System.String,CsWpfBase.Global.message.CsMessage.MessageButtons,System.String,System.String,System.Int32)">
            <summary>Pushes a message on the users screen.</summary>
        </member>
        <member name="M:CsWpfBase.Global.message.CsgMessage.SetDefaultScaling(System.Double)">
            <summary>Sets the default message scaling.</summary>
        </member>
        <member name="T:CsWpfBase.Global.message.CsMessageWindow">
            <summary>Interaction logic for CsMessageWindow.xaml</summary>
            <summary>
            CsMessageWindow
            </summary>
        </member>
        <member name="M:CsWpfBase.Global.message.CsMessageWindow.#ctor(CsWpfBase.Global.message.CsMessage)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Global.message.CsMessageWindow.Message">
            <summary>the message</summary>
        </member>
        <member name="P:CsWpfBase.Global.message.CsMessageWindow.YesOkButtonEnabled">
            <summary>Gets or sets the enable state for the yes button.</summary>
        </member>
        <member name="M:CsWpfBase.Global.message.CsMessageWindow.ShowDialog">
            <summary>shows the window.</summary>
        </member>
        <member name="M:CsWpfBase.Global.message.CsMessageWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CsWpfBase.Global.os.CsgOs">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.Is64Bit">
            <summary>Determines whether the current operating system is a 64-bit operating system.</summary>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.ComputerName">
            <summary> Gets the computer name.</summary>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.Name">
            <summary>
                Short description of the object—a one-line string. The string includes the operating system version. For example, "Microsoft Microsoft Windows 7
                Enterprise ". This property can be localized.
            </summary>
            <example>
                Windows Vista and Windows 7:   This property may contain trailing characters. For example, the string "Microsoft Windows 7 Enterprise " (trailing
                space included) may be necessary to retrieve information using this property.
            </example>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.Description">
            <summary>
                Description of the Windows operating system. Some user interfaces for example, those that allow editing of this description, limit its length to
                48 characters.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.CodeSet">
            <summary>
                Code page value an operating system uses. A code page contains a character table that an operating system uses to translate strings for different
                languages. The American National Standards Institute (ANSI) lists values that represent defined code pages. If an operating system does not use
                an ANSI code page, this member is set to 0 (zero). The CodeSet string can use a maximum of six characters to define the code page value.
            </summary>
            <example>"1255"</example>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.CountryCode">
            <summary>
                Code for the country/region that an operating system uses. Values are based on international phone dialing prefixes—also referred to as IBM
                country/region codes. This property can use a maximum of six characters to define the country/region code value.
            </summary>
            <example>"1" (United States)</example>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.OperatingSystemSku">
            <summary>Stock Keeping Unit (SKU) number for the operating system.</summary>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.InstallDate">
            <summary>Date object was installed. This property does not require a value to indicate that the object is installed.</summary>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.BuildType">
            <summary>Type of build used for an operating system.</summary>
            <example> Examples: ""retail build"", ""checked build""</example>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.Version">
            <summary>Version number of the operating system.</summary>
            <example>"4.0"</example>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.Architecture">
            <summary>Architecture of the operating system, as opposed to the processor. This property can be localized.</summary>
            <example>32-bit</example>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.ProductType">
            <summary>Additional system information.</summary>
            <example>1=Work Station;2=Domain Controller;3=Server</example>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.RegisteredUser">
            <summary>Name of the registered user of the operating system.</summary>
            <example>Ben Smith</example>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.SerialNumber">
            <summary>Operating system product serial identification number.</summary>
            <example>10497-OEM-0031416-71674</example>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.CurrentUser">
            <summary>Gets the current active user.</summary>
        </member>
        <member name="P:CsWpfBase.Global.os.CsgOs.Users">
            <summary>Gets all available users.</summary>
        </member>
        <member name="T:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus">
            <summary>Stock Keeping Unit (SKU) number for the operating system.</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.Anunknownproduct">
            <summary>An unknown product</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.Ultimate">
            <summary>Ultimate</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.HomeBasic">
            <summary>Home Basic</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.HomePremium">
            <summary>Home Premium</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.Enterprise">
            <summary>Enterprise</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.HomeBasicN">
            <summary>Home Basic N</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.Business">
            <summary>Business</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerStandard">
            <summary>Server Standard</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerDatacenterFullinstallation">
            <summary>Server Datacenter (full installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WindowsSmallBusinessServer">
            <summary>Windows Small Business Server</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerEnterpriseFullinstallation">
            <summary>Server Enterprise (full installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.Starter">
            <summary>Starter</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerDatacenterCoreinstallation">
            <summary>Server Datacenter (core installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerStandardCoreinstallation">
            <summary>Server Standard (core installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerEnterpriseCoreinstallation">
            <summary>Server Enterprise (core installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerEnterpriseforItaniumBasedSystems">
            <summary>Server Enterprise for Itanium-based Systems</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.BusinessN">
            <summary>Business N</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WebServerFullinstallation">
            <summary>Web Server (full installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.HpcEdition">
            <summary>HPC Edition</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WindowsStorageServer2008R2Essentials">
            <summary>Windows Storage Server 2008 R2 Essentials</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.StorageServerExpress">
            <summary>Storage Server Express</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.StorageServerStandard">
            <summary>Storage Server Standard</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.StorageServerWorkgroup">
            <summary>Storage Server Workgroup</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.StorageServerEnterprise">
            <summary>Storage Server Enterprise</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WindowsServer2008ForWindowsEssentialServerSolutions">
            <summary>Windows Server 2008 for Windows Essential Server Solutions</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.SmallBusinessServerPremium">
            <summary>Small Business Server Premium</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.HomePremiumN">
            <summary>Home Premium N</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.EnterpriseN">
            <summary>Enterprise N</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.UltimateN">
            <summary>Ultimate N</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WebServerCoreinstallation">
            <summary>Web Server (core installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WindowsEssentialBusinessServerManagementServer">
            <summary>Windows Essential Business Server Management Server</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WindowsEssentialBusinessServerSecurityServer">
            <summary>Windows Essential Business Server Security Server</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WindowsEssentialBusinessServerMessagingServer">
            <summary>Windows Essential Business Server Messaging Server</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerFoundation">
            <summary>Server Foundation</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WindowsHomeServer2011">
            <summary>Windows Home Server 2011</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WindowsServer2008WithoutHyperVforWindowsEssentialServerSolutions">
            <summary>Windows Server 2008 without Hyper-V for Windows Essential Server Solutions</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerStandardwithoutHyperV">
            <summary>Server Standard without Hyper-V</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerDatacenterwithoutHyperVFullinstallation">
            <summary>Server Datacenter without Hyper-V (full installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerEnterprisewithoutHyperVFullinstallation">
            <summary>Server Enterprise without Hyper-V (full installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerDatacenterwithoutHyperVCoreinstallation">
            <summary>Server Datacenter without Hyper-V (core installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerStandardwithoutHyperVCoreinstallation">
            <summary>Server Standard without Hyper-V (core installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerEnterprisewithoutHyperVCoreinstallation">
            <summary>Server Enterprise without Hyper-V (core installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.MicrosoftHyperVServer">
            <summary>Microsoft Hyper-V Server</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.StorageServerExpressCoreinstallation">
            <summary>Storage Server Express (core installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.StorageServerStandardCoreinstallation">
            <summary>Storage Server Standard (core installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.StorageServerWorkgroupCoreinstallation">
            <summary>Storage Server Workgroup (core installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.StorageServerEnterpriseCoreinstallation">
            <summary>Storage Server Enterprise (core installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.StarterN">
            <summary>Starter N</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.Professional">
            <summary>Professional</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ProfessionalN">
            <summary>Professional N</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WindowsSmallBusinessServer2011Essentials">
            <summary>Windows Small Business Server 2011 Essentials</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerForSbSolutions">
            <summary>Server For SB Solutions</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerSolutionsPremium">
            <summary>Server Solutions Premium</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerSolutionsPremiumCoreinstallation">
            <summary>Server Solutions Premium (core installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerForSbSolutionsEm54">
            <summary>Server For SB Solutions EM</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerForSbSolutionsEm55">
            <summary>Server For SB Solutions EM</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WindowsMultiPointServer">
            <summary>Windows MultiPoint Server</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WindowsEssentialServerSolutionManagement">
            <summary>Windows Essential Server Solution Management</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WindowsEssentialServerSolutionAdditional">
            <summary>Windows Essential Server Solution Additional</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WindowsEssentialServerSolutionManagementSvc">
            <summary>Windows Essential Server Solution Management SVC</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WindowsEssentialServerSolutionAdditionalSvc">
            <summary>Windows Essential Server Solution Additional SVC</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.SmallBusinessServerPremiumCoreinstallation">
            <summary>Small Business Server Premium (core installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerHyperCoreV">
            <summary>Server Hyper Core V</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.StarterE">
            <summary>Starter E</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.HomeBasicE">
            <summary>Home Basic E</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.HomePremiumE">
            <summary>Home Premium E</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ProfessionalE">
            <summary>Professional E</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.EnterpriseE">
            <summary>Enterprise E</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.UltimateE">
            <summary>Ultimate E</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerEnterpriseEvaluationinstallation">
            <summary>Server Enterprise (evaluation installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WindowsMultiPointServerStandardFullinstallation">
            <summary>Windows MultiPoint Server Standard (full installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.WindowsMultiPointServerPremiumFullinstallation">
            <summary>Windows MultiPoint Server Premium (full installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerStandardEvaluationinstallation">
            <summary>Server Standard (evaluation installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ServerDatacenterEvaluationinstallation">
            <summary>Server Datacenter (evaluation installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.EnterpriseNEvaluationinstallation">
            <summary>Enterprise N (evaluation installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.StorageServerWorkgroupEvaluationinstallation">
            <summary>Storage Server Workgroup (evaluation installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.StorageServerStandardEvaluationinstallation">
            <summary>Storage Server Standard (evaluation installation)</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.Windows8N">
            <summary>Windows 8 N</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.Windows8China">
            <summary>Windows 8 China</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.Windows8SingleLanguage">
            <summary>Windows 8 Single Language</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.Windows8">
            <summary>Windows 8</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.OperatingSystemSkus.ProfessionalwithMediaCenter">
            <summary>Professional with Media Center</summary>
        </member>
        <member name="T:CsWpfBase.Global.os.CsgOs.ProductTypes">
            <summary>Product types</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.ProductTypes.WorkStation">
            <summary>Work Station</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.ProductTypes.DomainController">
            <summary>Domain Controller</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.CsgOs.ProductTypes.Server">
            <summary>Server</summary>
        </member>
        <member name="T:CsWpfBase.Global.os.user.CsgOsUser">
            <summary>User in the current OS</summary>
        </member>
        <member name="P:CsWpfBase.Global.os.user.CsgOsUser.Status">
            <summary>
                Current status of an object. Various operational and nonoperational statuses can be defined. Operational statuses include: "OK", "Degraded", and
                "Pred Fail", which is an element such as a SMART-enabled hard disk drive that may be functioning properly, but predicts a failure in the near
                future. Nonoperational statuses include: "Error", "Starting", "Stopping", and "Service", which can apply during mirror resilvering of a disk,
                reloading a user permissions list, or other administrative work.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.os.user.CsgOsUser.IsLocalAccount">
            <summary>If true, the account is defined on the local computer.</summary>
        </member>
        <member name="P:CsWpfBase.Global.os.user.CsgOsUser.Name">
            <summary>Name of the Windows user account on the domain that the Domain property of this class specifies. see environment username</summary>
            <example>danwilson</example>
        </member>
        <member name="P:CsWpfBase.Global.os.user.CsgOsUser.FullName">
            <summary>Full name of a local user, for example: "Dan Wilson".</summary>
        </member>
        <member name="P:CsWpfBase.Global.os.user.CsgOsUser.Domain">
            <summary>Name of the Windows domain to which a user account belongs, for example: "NA-SALES".</summary>
        </member>
        <member name="P:CsWpfBase.Global.os.user.CsgOsUser.Description">
            <summary>Description of the account.</summary>
        </member>
        <member name="P:CsWpfBase.Global.os.user.CsgOsUser.AccountType">
            <summary>Get the account type</summary>
        </member>
        <member name="P:CsWpfBase.Global.os.user.CsgOsUser.SidType">
            <summary>Enumerated value that specifies the type of SID.</summary>
        </member>
        <member name="P:CsWpfBase.Global.os.user.CsgOsUser.Sid">
            <summary>
                Security identifier (SID) for this account. A SID is a string value of variable length that is used to identify a trustee. Each account has a
                unique SID that an authority, such as a Windows domain, issues. The SID is stored in the security database. When a user logs on, the system
                retrieves the user SID from the database, places the SID in the user access token, and then uses the SID in the user access token to identify the
                user in all subsequent interactions with Windows security. Each SID is a unique identifier for a user or group, and a different user or group
                cannot have the same SID.
            </summary>
        </member>
        <member name="T:CsWpfBase.Global.os.user.CsgOsUser.SidTypes">
            <summary>Sid types</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.user.CsgOsUser.SidTypes.User">
            <summary>SidTypeUser</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.user.CsgOsUser.SidTypes.Group">
            <summary>SidTypeGroup</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.user.CsgOsUser.SidTypes.Domain">
            <summary>SidTypeDomain</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.user.CsgOsUser.SidTypes.Alias">
            <summary>SidTypeAlias</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.user.CsgOsUser.SidTypes.WellKnownGroup">
            <summary>SidTypeWellKnownGroup</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.user.CsgOsUser.SidTypes.DeletedAccount">
            <summary>SidTypeDeletedAccount</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.user.CsgOsUser.SidTypes.Invalid">
            <summary>SidTypeInvalid</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.user.CsgOsUser.SidTypes.Unknown">
            <summary>SidTypeUnknown</summary>
        </member>
        <member name="F:CsWpfBase.Global.os.user.CsgOsUser.SidTypes.Computer">
            <summary>SidTypeComputer</summary>
        </member>
        <member name="T:CsWpfBase.Global.transmission.CsgTransmission">
            <summary>Wraps a lot of transmission functions.</summary>
        </member>
        <member name="P:CsWpfBase.Global.transmission.CsgTransmission.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.transmission.CsgTransmission.Secured">
            <summary>Secured transmission protocols.</summary>
        </member>
        <member name="T:CsWpfBase.Global.transmission.secured.http.HttpCryptoServerSession">
            <summary>
                A <see cref="T:CsWpfBase.Global.transmission.secured.http.HttpCryptoServerSession" />e is used whenever there is a client and a server where the client has the public key and the server holds the
                private key. Use this like an http request handler with a http response.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.transmission.secured.http.HttpCryptoServerSession.RequestData">
            <summary>The decrypted input data.</summary>
        </member>
        <member name="M:CsWpfBase.Global.transmission.secured.http.HttpCryptoServerSession.CreateResponse(System.Byte[])">
            <summary>Encrypts data which needs to be sent back to the client as a response.</summary>
            <param name="rawData">the data which needs to be encrypted.</param>
        </member>
        <member name="M:CsWpfBase.Global.transmission.secured.http.HttpCryptoServerSession.DecryptData">
            <summary>Decrypt a message sent by the sender (<see cref="T:CsWpfBase.Global.transmission.secured.http.HttpCryptoClientSession" />) and stores the encryption key and iv.</summary>
        </member>
        <member name="T:CsWpfBase.Global.transmission.secured.http.HttpCryptoClientSession">
            <summary>
                A <see cref="T:CsWpfBase.Global.transmission.secured.http.HttpCryptoClientSession"/> is used whenever there is a Server and a Client where the Client has the public key and the Server holds the private
                key. Use this like an http request with a http response.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.transmission.secured.http.HttpCryptoClientSession.Website">
            <summary>The target website.</summary>
        </member>
        <member name="M:CsWpfBase.Global.transmission.secured.http.HttpCryptoClientSession.Upload(System.Byte[])">
            <summary>Uploads the specified <paramref name="data" /> encrypted and returns the decrypted response from the server.</summary>
            <param name="data">The data to upload</param>
            <returns>The decrypted response</returns>
        </member>
        <member name="T:CsWpfBase.Global.transmission.secured.http.CsgTransmissionSecuredHttp">
            <summary>Wraps a bunch of secured http routines.</summary>
        </member>
        <member name="P:CsWpfBase.Global.transmission.secured.http.CsgTransmissionSecuredHttp.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.transmission.secured.http.CsgTransmissionSecuredHttp.ClientSession(System.Security.Cryptography.RSACryptoServiceProvider,System.String)">
            <summary>
                Creates a new <see cref="T:CsWpfBase.Global.transmission.secured.http.HttpCryptoClientSession" />, which can perform asymmetric/symmetric hybrid encryption operations. It is used with the
                <see cref="T:CsWpfBase.Global.transmission.secured.http.HttpCryptoServerSession" /> on the other side of the transmission.
            </summary>
        </member>
        <member name="M:CsWpfBase.Global.transmission.secured.http.CsgTransmissionSecuredHttp.ServerSession(System.Security.Cryptography.RSACryptoServiceProvider,System.Web.HttpRequestBase)">
            <summary>
                Creates a <see cref="T:CsWpfBase.Global.transmission.secured.http.HttpCryptoServerSession" />, which can perform asymmetric/symmetric hybrid encryption operations. It is used with the
                <see cref="T:CsWpfBase.Global.transmission.secured.http.HttpCryptoClientSession" /> on the other side of the transmission.
            </summary>
        </member>
        <member name="T:CsWpfBase.Global.transmission.secured.CsgTransmissionSecured">
            <summary>Wraps a bunch of secured transmission protocols.</summary>
        </member>
        <member name="P:CsWpfBase.Global.transmission.secured.CsgTransmissionSecured.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.transmission.secured.CsgTransmissionSecured.Http">
            <summary>Supports http related encryption helper.</summary>
        </member>
        <member name="T:CsWpfBase.Global.wpf.Dragging.DragDropHandler`2">
            <summary>Handles drag and drop operations from one source item to a target item.</summary>
        </member>
        <member name="M:CsWpfBase.Global.wpf.Dragging.DragDropHandler`2.#ctor(System.Windows.UIElement,`0,System.Windows.Input.MouseButtonEventArgs,CsWpfBase.Global.wpf.Dragging.DragDropHandler{`0,`1}.Del1)">
            <summary>
            Creates a new drag drop handler
            </summary>
            <param name="container">The container of the drag operation, this can be the window or the container where either the source and the target is located.</param>
            <param name="source">The source of the drag operation</param>
            <param name="e">The mouse event args of the element which got clicked</param>
            <param name="isADropableTarget">The delegate which is used to identify if a visual object is a dropable target.</param>
        </member>
        <member name="P:CsWpfBase.Global.wpf.Dragging.DragDropHandler`2.HoverAdornerType">
            <summary>The adorner to present on hovering over an questionable target.</summary>
        </member>
        <member name="E:CsWpfBase.Global.wpf.Dragging.DragDropHandler`2.Dropped">
            <summary>Occurs when the user releases the mouse over a possible target.</summary>
        </member>
        <member name="T:CsWpfBase.Global.wpf.Dragging.DragDropHandler`2.Del">
            <summary>Drop delegate</summary>
        </member>
        <member name="T:CsWpfBase.Global.wpf.Dragging.DragDropHandler`2.Del1">
            <summary>Questionable target delegate.</summary>
        </member>
        <member name="T:CsWpfBase.Global.wpf.Dragging.DropOntoAdorner">
            <summary>The default adorner for drag and drop.</summary>
        </member>
        <member name="M:CsWpfBase.Global.wpf.Dragging.DropOntoAdorner.#ctor(System.Windows.UIElement)">
            <summary>ctor</summary>
            <param name="adornedElement"></param>
        </member>
        <member name="M:CsWpfBase.Global.wpf.Dragging.DropOntoAdorner.OnRender(System.Windows.Media.DrawingContext)">
            <summary>
                When overridden in a derived class, participates in rendering operations that are directed by the layout system. The rendering instructions for
                this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing.
            </summary>
            <param name="drawingContext">The drawing instructions for a specific element. This context is provided to the layout system.</param>
        </member>
        <member name="T:CsWpfBase.Global.wpf.Storage.CsgWpfStorage">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.Storage.CsgWpfStorage.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.Storage.CsgWpfStorage.Window">
            <summary>
                With the window handler you can save the position of windows and handle size. The data will be saved to disc. To use this you have to initialize
                the window handler.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.Storage.CsgWpfStorage.ListView">
            <summary>
                With the ListView handler you can save the column widths and handle size. The data will be saved to disc. To use this you have to initialize the
                ListViewHandler.
            </summary>
        </member>
        <member name="T:CsWpfBase.Global.wpf.Storage.CsgWpfStorageListView">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.Storage.CsgWpfStorageListView.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.wpf.Storage.CsgWpfStorageListView.Handle(System.Windows.Controls.ListView,System.String)">
            <summary>Adds a new handle</summary>
        </member>
        <member name="T:CsWpfBase.Global.wpf.Storage.CsgWpfStorageListView.ListViewHandle">
            <summary>Handles the automated save.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.Storage.CsgWpfStorageListView.ListViewHandle.Name">
            <summary>Associated column name.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.Storage.CsgWpfStorageListView.ListViewHandle.ColumnWidths">
            <summary>The widths of the columns.</summary>
        </member>
        <member name="T:CsWpfBase.Global.wpf.Storage.CsgWpfStorageWindow">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.Storage.CsgWpfStorageWindow.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.wpf.Storage.CsgWpfStorageWindow.GetFittingRectangle(System.Double,System.Double,System.Double,System.Double)">
            <summary>Get a rectangle which is sure on the screen. Use this method to avoid hidden windows after unplugging a screen.</summary>
        </member>
        <member name="M:CsWpfBase.Global.wpf.Storage.CsgWpfStorageWindow.Handle(System.Windows.Window,System.String,System.Boolean)">
            <summary>Adds a new handle</summary>
        </member>
        <member name="T:CsWpfBase.Global.wpf.Storage.CsgWpfStorageWindow.WindowHandle">
            <summary>Handles the automated position save. Also provides functionality the avoid invisible positions of the window.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.Storage.CsgWpfStorageWindow.WindowHandle.Name">
            <summary>Associated window name.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.Storage.CsgWpfStorageWindow.WindowHandle.Left">
            <summary>The X position of the window.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.Storage.CsgWpfStorageWindow.WindowHandle.Top">
            <summary>The Y position of the window.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.Storage.CsgWpfStorageWindow.WindowHandle.Width">
            <summary>The width of the window.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.Storage.CsgWpfStorageWindow.WindowHandle.Height">
            <summary>The height of the window.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.Storage.CsgWpfStorageWindow.WindowHandle.Scale">
            <summary>The zoom of the window.</summary>
        </member>
        <member name="T:CsWpfBase.Global.wpf.CsgWpfDragging">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.CsgWpfDragging.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.wpf.CsgWpfDragging.BeginWithDefaultAdorner``2(System.Windows.UIElement,``0,System.Windows.Input.MouseButtonEventArgs,CsWpfBase.Global.wpf.Dragging.DragDropHandler{``0,``1}.Del,CsWpfBase.Global.wpf.Dragging.DragDropHandler{``0,``1}.Del1)">
            <summary>Starts an drag operation with a mouse click. The operation ends when the mouse is click ends.</summary>
            <typeparam name="TSource">the type of the source item which is hold by the the drag operation</typeparam>
            <typeparam name="TTarget">the possible target type where the source item can be dropped onto.</typeparam>
            <param name="container">the container around the possible targets</param>
            <param name="source">the source item which acts like the tag field. you will get the source back in the dropped event.</param>
            <param name="clickEventArgs">the click event args.</param>
            <param name="isDropableOn">a delegate which verify that the target of type <typeparamref name="TTarget"/> can be a drop target.</param>
            <param name="dropped">the callback when the source is dropped on a valid target.</param>
        </member>
        <member name="T:CsWpfBase.Global.wpf.CsgWpfVisualTree">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.CsgWpfVisualTree.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.wpf.CsgWpfVisualTree.FindChild(System.Windows.FrameworkElement,System.Predicate{System.Windows.FrameworkElement})">
            <summary>find a child in a container which fits into a predicate.</summary>
        </member>
        <member name="T:CsWpfBase.Global.wpf.CsgWpfTime">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="E:CsWpfBase.Global.wpf.CsgWpfTime.PropertyChanged">
            <summary>
                standard <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> implementation. When subscribing automatically starts the
                automated process.
            </summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.CsgWpfTime.Value">
            <summary>Gets the current Time</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.CsgWpfTime.Subscriptions">
            <summary>Current property changed subscriptions</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.CsgWpfTime.IsRunning">
            <summary>Determining whether automated notifications are running.</summary>
        </member>
        <member name="T:CsWpfBase.Global.wpf.CsgWpfAnimation">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.CsgWpfAnimation.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.wpf.CsgWpfAnimation.Opacity(System.Windows.FrameworkElement,System.Double,System.Windows.Duration,System.Nullable{System.TimeSpan},System.Action)">
            <summary>Allows to animate the opacity of an element.</summary>
            <param name="fe">the framework element to animate.</param>
            <param name="to">the target opacity.</param>
            <param name="duration">the animation duration.</param>
            <param name="beginTime">begin time of the animation.</param>
            <param name="finished">call back</param>
        </member>
        <member name="T:CsWpfBase.Global.wpf.CsgWpf">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.CsgWpf.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.CsgWpf.Storage">
            <summary>Provides a way to save states of user controls in wpf.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.CsgWpf.Animation">
            <summary>Collapsing animation helpers for code behind animations.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.CsgWpf.Time">
            <summary>Provides a singleton time class which is bind able and provides automated updates when time changes.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.CsgWpf.VisualTree">
            <summary>Visual tree helper methods.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.CsgWpf.Dragging">
            <summary>Dragging helper methods.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.CsgWpf.Window">
            <summary>Window helper methods.</summary>
        </member>
        <member name="T:CsWpfBase.Global.wpf.CsgWpfWindow">
            <summary>Internal see at <see cref="T:CsWpfBase.Global.CsGlobal" />.</summary>
        </member>
        <member name="P:CsWpfBase.Global.wpf.CsgWpfWindow.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Global.wpf.CsgWpfWindow.GrayOutAllWindows">
            <summary>Grays out all <see cref="T:CsWpfBase.Themes.Controls.Containers.CsWindow" /> instances.</summary>
        </member>
        <member name="T:CsWpfBase.Online.CsOnline">
            <summary>The online communication basis for the online server.</summary>
        </member>
        <member name="P:CsWpfBase.Online.CsOnline.Key">
            <summary>Asymmetric key management.</summary>
        </member>
        <member name="P:CsWpfBase.Online.CsOnline.Parser">
            <summary>Packet parse helper.</summary>
        </member>
        <member name="P:CsWpfBase.Online.CsOnline.Send">
            <summary>Helpers for packet send.</summary>
        </member>
        <member name="P:CsWpfBase.Online.CsOnline.SendAsync">
            <summary>Helpers for async packet send.</summary>
        </member>
        <member name="P:CsWpfBase.Online.CsOnline.Response">
            <summary>Response handling.</summary>
        </member>
        <member name="T:CsWpfBase.Online.key.CsoKey">
            <summary>Internal see at <see cref="T:CsWpfBase.Online.CsOnline" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.key.CsoKey.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Online.key.CsoKey.V1">
            <summary>Version 1 key, public only in client applications.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.CsopClientAppInfo">
            <summary>Contains informations about the client.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.CsopClientAppInfo.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.CsopClientAppInfo.#ctor(System.Boolean)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientAppInfo.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientAppInfo.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.CsopClientAppInfo.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.CsopClientAppInfo.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientAppInfo.StartupCount">
            <summary>returns the startup count.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientAppInfo.UsageTime">
            <summary>returns the usage time.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.CsopClientException">
            <summary>Contains information about a exception happened at the client side.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientException.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientException.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.CsopClientException.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.CsopClientException.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientException.Date">
            <summary>Gets or sets the Date.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientException.ExceptionType">
            <summary>Gets or sets the ExceptionType.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientException.StackTrace">
            <summary>Gets or sets the StackTrace.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientException.Message">
            <summary>Gets or sets the Message.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientException.Source">
            <summary>Gets or sets the Source.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientException.TargetSite">
            <summary>Gets or sets the TargetSite.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientException.OriginalException">
            <summary>Gets or sets the OriginalException.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.CsopClientException.From(System.Exception)">
            <summary>Generates a packet form an exception. The exception can and should contain inner exceptions.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.CsopClientFeedback">
            <summary>A packet for remotly send a feedback to the server</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientFeedback.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientFeedback.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.CsopClientFeedback.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.CsopClientFeedback.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientFeedback.Title">
            <summary> [INotify] Gets or sets Title.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientFeedback.SenderMail">
            <summary> [INotify] Gets or sets SenderMail.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientFeedback.SenderName">
            <summary> [INotify] Gets or sets SenderName.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientFeedback.Text">
            <summary> [INotify] Gets or sets Content.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClientFeedback.Rating">
            <summary> The program Rating.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwBiosInfo">
            <summary>wrapper</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwBiosInfo.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwBiosInfo.#ctor(System.Boolean)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwBiosInfo.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwBiosInfo.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwBiosInfo.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwBiosInfo.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwBiosInfo.Name">
            <summary>Name used to identify this software element.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwBiosInfo.Version">
            <summary>Gets or sets the Version.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwBiosInfo.Characteristics">
            <summary>Array of BIOS characteristics supported by the system as defined by the System Management BIOS Reference Specification.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwBiosInfo.Versions">
            <summary>
                Array of the complete system BIOS information. In many computers there can be several version strings that are stored in the registry and
                represent the system BIOS information.
            </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwBiosInfo.CurrentLanguage">
            <summary>Name of the current BIOS language.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwBiosInfo.Manufacturer">
            <summary>Manufacturer of this software element.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwBiosInfo.ReleaseDate">
            <summary>Release date of the Windows BIOS in the Coordinated Universal Time (UTC) format </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwBiosInfo.SerialNumber">
            <summary>Assigned serial number of the software element.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwBiosInfo.SmBiosVersion">
            <summary>BIOS version as reported by SMBIOS.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwDiskDriveInfo">
            <summary>wrapper</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwDiskDriveInfo.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwDiskDriveInfo.#ctor(System.Boolean)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwDiskDriveInfo.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwDiskDriveInfo.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwDiskDriveInfo.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwDiskDriveInfo.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwDiskDriveInfo.Devices">
            <summary>Gets or sets the Devices.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwDiskDriveInfo.Partitions">
            <summary>Gets or sets the Partitions.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwNetworkInfo">
            <summary>wrapper</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwNetworkInfo.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwNetworkInfo.#ctor(System.Boolean)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwNetworkInfo.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwNetworkInfo.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwNetworkInfo.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwNetworkInfo.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwNetworkInfo.Devices">
            <summary>Gets or sets the Devices.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice">
            <summary>wrapper</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.DeviceId">
            <summary>Address or other identifying information to uniquely name the logical device.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.IanaType">
            <summary>The interface type as defined by the Internet Assigned Names Authority (IANA).</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.InterfaceIndex">
            <summary>
                The index that identifies the network interface. This index value may change when a network adapter is disabled and then enabled, and should not
                be considered persistent.
            </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.PermanentAddress">
            <summary>
                The network address that is hardcoded into a port. This hardcoded address can be changed using a firmware upgrade or a software configuration.
                When this change is made, the field should be updated at the same time. PermanentAddress should be left blank if no hardcoded address exists for
                the network adapter.
            </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.Name">
            <summary>Label by which the object is known. </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.ActiveMaximumTransmissionUnit">
            <summary>The active or negotiated maximum transmission unit (MTU) that can be supported.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.Speed">
            <summary>The bandwidth, in bits per second, of the port.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.DriverDate">
            <summary>The network adapter driver date in YYYY-MM-DD format.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.DriverVersion">
            <summary>A string representing the network adapter driver version.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.DriverProvider">
            <summary>The driver provider name.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.DriverDescription">
            <summary>The description for the network adapter driver.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.FullDuplex">
            <summary>Boolean that indicates that the port is operating in full duplex mode. </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.OperationalStatus">
            <summary>Current network interface operational status.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.WdmInterface">
            <summary>The lower-level interface of the network adapter is a WDM bus driver such as USB.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartNetworkDevice.From(CsWpfBase.Global.computer.parts.CsgNetworkDevice)">
            <summary>Creates an instance from an <see cref="T:CsWpfBase.Global.computer.parts.CsgNetworkDevice" />.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartLogicalDisk">
            <summary>wrapper</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartLogicalDisk.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartLogicalDisk.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartLogicalDisk.DeviceId">
            <summary>Unique identifier of the logical disk from other devices on the system.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartLogicalDisk.DriveType">
            <summary>Numeric value that corresponds to the type of disk drive this logical disk represents.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartLogicalDisk.FileSystem">
            <summary>File system on the logical disk. Example: NTFS</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartLogicalDisk.Size">
            <summary>Size of the disk drive.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartLogicalDisk.FreeSpace">
            <summary>Space, in bytes, available on the logical disk.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartLogicalDisk.Name">
            <summary>Label by which the object is known.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartLogicalDisk.VolumeName">
            <summary>Volume name of the logical disk. </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartLogicalDisk.From(CsWpfBase.Global.computer.parts.CsgLogicalDisk)">
            <summary>Creates a part from the <see cref="T:CsWpfBase.Global.CsGlobal" /> hardware section.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskPartition">
            <summary>wrapper</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskPartition.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskPartition.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskPartition.DiskIndex">
            <summary>Index number of the disk containing this partition.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskPartition.Bootable">
            <summary>Indicates whether the computer can be booted from this partition.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskPartition.BootPartition">
            <summary>Partition is the active partition. The operating system uses the active partition when booting from a hard disk.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskPartition.PrimaryPartition">
            <summary>If True, this is the primary partition.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskPartition.Description">
            <summary>Description of the object.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskPartition.Type">
            <summary>Type of the partition. </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskPartition.Size">
            <summary>Total size of the partition.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskPartition.LogicalDisks">
            <summary>Gets or sets the LogicalDisks.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskPartition.From(CsWpfBase.Global.computer.parts.CsgDiskPartition)">
            <summary>Creates a part from the <see cref="T:CsWpfBase.Global.CsGlobal" /> hardware section.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskDriveDevice">
            <summary>wrapper</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskDriveDevice.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskDriveDevice.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskDriveDevice.Index">
            <summary>
                Physical drive number of the given drive. This property is filled by the GetDriveMapInfo method. A value of 0xFF indicates that the given drive
                does not map to a physical drive.
            </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskDriveDevice.InterfaceType">
            <summary>Interface type of physical disk drive. Values can be SCSI, HDC, IDE, USB, 1394 </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskDriveDevice.Manufacturer">
            <summary>Name of the disk drive manufacturer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskDriveDevice.Model">
            <summary>Manufacturer's model number of the disk drive.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskDriveDevice.FirmwareRevision">
            <summary>Revision for the disk drive firmware that is assigned by the manufacturer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskDriveDevice.Capabilities">
            <summary>
                Array of capabilities of the media access device. For example, the device may support random access (3), removable media (7), and automatic
                cleaning (9). Each capability is seperated by a ;
            </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskDriveDevice.MediaLoaded">
            <summary>
                If True, the media for a disk drive is loaded, which means that the device has a readable file system and is accessible. For fixed disk drives,
                this property will always be TRUE.
            </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskDriveDevice.MediaType">
            <summary>
                Type of media used or accessed by this device. Values: 'External hard disk media', 'Removable media other than floppy', 'Fixed hard disk media',
                'Format is unknown', 'Removable media ("Removable media other than floppy")', 'Fixed hard disk ("Fixed hard disk media")', 'Unknown ("Format is
                unknown")'
            </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskDriveDevice.PartitionCount">
            <summary>Number of partitions on this physical disk drive that are recognized by the operating system.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskDriveDevice.SerialNumber">
            <summary>Number allocated by the manufacturer to identify the physical media. </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskDriveDevice.Size">
            <summary>
                Size of the disk drive. It is calculated by multiplying the total number of cylinders, tracks in each cylinder, sectors in each track, and bytes
                in each sector.
            </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskDriveDevice.Status">
            <summary>
                Current status of the object. Various operational and nonoperational statuses can be defined. Operational statuses include: "OK", "Degraded", and
                "Pred Fail" (an element, such as a SMART-enabled hard disk drive, may be functioning properly but predicting a failure in the near future).
                Nonoperational statuses include: "Error", "Starting", "Stopping", and "Service". The latter, "Service", could apply during mirror-resilvering of
                a disk, reload of a user permissions list, or other administrative work. Not all such work is online, yet the managed element is neither "OK" nor
                in one of the other states.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartDiskDriveDevice.From(CsWpfBase.Global.computer.parts.CsgDiskDriveDevice)">
            <summary>Creates a part from the <see cref="T:CsWpfBase.Global.CsGlobal" /> hardware section.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice">
            <summary>wrapper</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.AdapterRam">
            <summary>Memory size of the video adapter.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.Caption">
            <summary>Short description of the object.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.Description">
            <summary>Description of the object.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.CurrentBitsPerPixel">
            <summary>Number of bits used to display each pixel.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.CurrentHorizontalResolution">
            <summary>Current number of horizontal pixels.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.CurrentVerticalResolution">
            <summary>Current number of vertical pixels.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.CurrentNumberOfColors">
            <summary>Number of colors supported at the current resolution.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.CurrentRefreshRate">
            <summary>
                Frequency at which the video controller refreshes the image for the monitor. A value of 0 (zero) indicates the default rate is being used, while
                0xFFFFFFFF indicates the optimal rate is being used.
            </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.CurrentScanMode">
            <summary>Current scan mode.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.DriverDate">
            <summary>Last modification date and time of the currently installed video driver.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.DriverVersion">
            <summary>Version number of the video driver.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.MaxRefreshRate">
            <summary>Maximum refresh rate of the video controller in hertz.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.MinRefreshRate">
            <summary>Minimum refresh rate of the video controller in hertz.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.Name">
            <summary>Label by which the object is known. When subclassed, the property can be overridden to be a key property.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.VideoArchitecture">
            <summary>Type of video architecture.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.VideoMemoryType">
            <summary>Type of video memory.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.VideoModeDescription">
            <summary>Current resolution, color, and scan mode settings of the video controller.</summary>
            <example>"1024 x 768 x 256 colors"</example>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.VideoProcessor">
            <summary>Free-form string describing the video processor.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartGraphicDevice.From(CsWpfBase.Global.computer.parts.CsgGraphicDevice)">
            <summary>Creates a part from the <see cref="T:CsWpfBase.Global.CsGlobal" /> hardware section.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartMemoryDevice">
            <summary>wrapper</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartMemoryDevice.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartMemoryDevice.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartMemoryDevice.BankLabel">
            <summary>Physically labeled bank where the memory is located.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartMemoryDevice.Capacity">
            <summary>Total capacity of the physical memory—in bytes.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartMemoryDevice.ConfiguredClockSpeed">
            <summary>The configured clock speed of the memory device, in megahertz (MHz), or 0, if the speed is unknown.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartMemoryDevice.DeviceLocator">
            <summary>Label of the socket or circuit board that holds the memory.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartMemoryDevice.Manufacturer">
            <summary>Name of the organization responsible for producing the physical element.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartMemoryDevice.MemoryType">
            <summary>
                Type of physical memory. This is a CIM value that is mapped to the SMBIOS value. The SMBIOSMemoryType property contains the raw SMBIOS
                memory type.
            </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartMemoryDevice.Speed">
            <summary>Speed of the physical memory—in nanoseconds.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.parts.CsopV1PartMemoryDevice.From(CsWpfBase.Global.computer.parts.CsgMemoryDevice)">
            <summary>Creates from memoryDevice.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwGraphicInfo">
            <summary>wrapper</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwGraphicInfo.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwGraphicInfo.#ctor(System.Boolean)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwGraphicInfo.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwGraphicInfo.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwGraphicInfo.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwGraphicInfo.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwGraphicInfo.Devices">
            <summary>Gets or sets the Devices.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwProcessorInfo">
            <summary>wrapper</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwProcessorInfo.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwProcessorInfo.#ctor(System.Boolean)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwProcessorInfo.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwProcessorInfo.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwProcessorInfo.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwProcessorInfo.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwProcessorInfo.Architecture">
            <summary>Processor architecture used by the platform.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwProcessorInfo.Family">
            <summary>Processor family type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwProcessorInfo.Manufacturer">
            <summary>Name of the processor manufacturer.</summary>
            <example>A. Datum Corporation</example>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwProcessorInfo.MaxClockSpeed">
            <summary>Maximum speed of the processor, in MHz.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwProcessorInfo.Name">
            <summary>Label by which the object is known. When this property is a subclass, it can be overridden to be a key property.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwProcessorInfo.NumberOfCores">
            <summary>
                Number of cores for the current instance of the processor. A core is a physical processor on the integrated circuit. For example, in a dual-core
                processor this property has a value of 2.
            </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwProcessorInfo.NumberOfLogicalProcessors">
            <summary>
                Number of logical processors for the current instance of the processor. For processors capable of hyperthreading, this value includes    only the
                processors which have hyperthreading enabled.
            </summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMainBoardInfo">
            <summary>wrapper</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMainBoardInfo.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMainBoardInfo.#ctor(System.Boolean)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMainBoardInfo.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMainBoardInfo.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMainBoardInfo.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMainBoardInfo.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMainBoardInfo.Manufacturer">
            <summary>Name of the organization responsible for producing the physical element.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMainBoardInfo.Product">
            <summary>Baseboard part number defined by the manufacturer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMainBoardInfo.SerialNumber">
            <summary>Manufacturer-allocated number used to identify the physical element.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMainBoardInfo.PrimaryBusType">
            <summary>Primary bus type of the motherboard.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMainBoardInfo.SecondaryBusType">
            <summary>Secondary bus type of the motherboard.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwComputerSystemInfo">
            <summary>wrapper</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwComputerSystemInfo.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwComputerSystemInfo.#ctor(System.Boolean)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwComputerSystemInfo.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwComputerSystemInfo.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwComputerSystemInfo.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwComputerSystemInfo.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwComputerSystemInfo.Manufacturer">
            <summary>Gets or sets the Manufacturer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwComputerSystemInfo.Model">
            <summary>Gets or sets the Model.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwComputerSystemInfo.SystemFamily">
            <summary>Gets or sets the SystemFamily.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwComputerSystemInfo.SystemSkuNumber">
            <summary>Gets or sets the SystemSkuNumber.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwComputerSystemInfo.PartOfDomain">
            <summary>Gets or sets the PartOfDomain.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwComputerSystemInfo.Workgroup">
            <summary>Gets or sets the Workgroup.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwScreenInfo">
            <summary>wrapper</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwScreenInfo.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwScreenInfo.#ctor(System.Boolean)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwScreenInfo.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwScreenInfo.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwScreenInfo.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwScreenInfo.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwScreenInfo.TotalWidth">
            <summary>Gets the total screen width.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwScreenInfo.TotalHeight">
            <summary>Gets the total screen height.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMemoryInfo">
            <summary>wrapper</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMemoryInfo.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMemoryInfo.#ctor(System.Boolean)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMemoryInfo.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMemoryInfo.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMemoryInfo.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMemoryInfo.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMemoryInfo.Total">
            <summary>
                Total size of physical memory. Be aware that, under some circumstances, this property may not return an accurate value for the physical memory.
                For example, it is not accurate if the BIOS is using some of the physical memory. For an accurate value, use the Capacity property in
                Win32_PhysicalMemory instead.
            </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.hardwareinfo.CsopClientHwMemoryInfo.Devices">
            <summary>Gets or sets the Devices.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo">
            <summary>Contains informations about the client os.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.#ctor(System.Boolean)">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.ClientTime">
            <summary>Gets or sets the ClientTime.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.ClientTimeZoneInfo">
            <summary>Gets or sets the ClientTimeZoneInfo.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.ComputerName">
            <summary>look at <see cref="P:CsWpfBase.Global.CsGlobal.Os" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.Architecture">
            <summary>look at <see cref="P:CsWpfBase.Global.CsGlobal.Os" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.BuildType">
            <summary>look at <see cref="P:CsWpfBase.Global.CsGlobal.Os" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.CodeSet">
            <summary>look at <see cref="P:CsWpfBase.Global.CsGlobal.Os" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.CountryCode">
            <summary>look at <see cref="P:CsWpfBase.Global.CsGlobal.Os" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.Description">
            <summary>look at <see cref="P:CsWpfBase.Global.CsGlobal.Os" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.InstallDate">
            <summary>look at <see cref="P:CsWpfBase.Global.CsGlobal.Os" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.Name">
            <summary>look at <see cref="P:CsWpfBase.Global.CsGlobal.Os" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.OperatingSystemSku">
            <summary>look at <see cref="P:CsWpfBase.Global.CsGlobal.Os" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.ProductType">
            <summary>look at <see cref="P:CsWpfBase.Global.CsGlobal.Os" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.RegisteredUser">
            <summary>look at <see cref="P:CsWpfBase.Global.CsGlobal.Os" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.SerialNumber">
            <summary>look at <see cref="P:CsWpfBase.Global.CsGlobal.Os" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.Version">
            <summary>look at <see cref="P:CsWpfBase.Global.CsGlobal.Os" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.CurrentUserIndex">
            <summary>look at <see cref="P:CsWpfBase.Global.CsGlobal.Os" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopClientOsInfo.Users">
            <summary>look at <see cref="P:CsWpfBase.Global.CsGlobal.Os" />.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.osparts.CsopV1PartUser">
            <summary>wrapper.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.osparts.CsopV1PartUser.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.osparts.CsopV1PartUser.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopV1PartUser.Status">
            <summary>see <see cref="T:CsWpfBase.Global.os.user.CsgOsUser" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopV1PartUser.IsLocalAccount">
            <summary>see <see cref="T:CsWpfBase.Global.os.user.CsgOsUser" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopV1PartUser.Name">
            <summary>see <see cref="T:CsWpfBase.Global.os.user.CsgOsUser" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopV1PartUser.FullName">
            <summary>see <see cref="T:CsWpfBase.Global.os.user.CsgOsUser" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopV1PartUser.Domain">
            <summary>see <see cref="T:CsWpfBase.Global.os.user.CsgOsUser" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopV1PartUser.Description">
            <summary>see <see cref="T:CsWpfBase.Global.os.user.CsgOsUser" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopV1PartUser.AccountType">
            <summary>see <see cref="T:CsWpfBase.Global.os.user.CsgOsUser" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopV1PartUser.SidType">
            <summary>see <see cref="T:CsWpfBase.Global.os.user.CsgOsUser" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.osparts.CsopV1PartUser.Sid">
            <summary>see <see cref="T:CsWpfBase.Global.os.user.CsgOsUser" />.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.osparts.CsopV1PartUser.FromCsg(CsWpfBase.Global.os.user.CsgOsUser)">
            <summary>converter, only the wrapper should be transmitted. If some local changes occur the wrapper have to stay the same!!!</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.client.CsopClient">
            <summary>The default client request packet.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.CsopClient.#ctor">
            <summary>default constructor</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.CsopClient.#ctor(System.Boolean)">
            <summary>Creates an empty header if not true.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClient.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClient.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.CsopClient.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.CsopClient.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClient.SendTime">
            <summary>returns the send time of the request packet.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClient.ComputerId">
            <summary>returns the hosts computer id.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClient.UserSid">
            <summary>returns the current user id.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClient.ApplicationId">
            <summary>returns the application id.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClient.ApplicationName">
            <summary>returns the hosts programm name.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClient.ApplicationVersion">
            <summary>returns the hosts application version.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClient.InstanceId">
            <summary>returns the hosts application id.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.client.CsopClient.InnerPackets">
            <summary>The inner packets of the packet.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.client.CsopClient.GetInnerPacket``1">
            <summary>Get a specific packet Type if exist.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.CsopCrypto">
            <summary>Crypto Packet V1</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.CsopCrypto.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.CsopCrypto.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.CsopCrypto.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.CsopCrypto.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.CsopCrypto.KeyVersion">
            <summary>The associated key pair version</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.CsopCrypto.Iv">
            <summary>
                initialization vector (IV) or starting variable (SV)[1] is a fixed-size input to a cryptographic primitive that is typically required to be
                random or pseudorandom.
            </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.CsopCrypto.EncryptedSymmetricKey">
            <summary>the encrypted symmetric key.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.CsopCrypto.EncryptedPacket">
            <summary>the symmetric encrypted content. usually a packet</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.CsopCrypto.Get(System.Byte[])">
            <summary>Parses the cryptographic packet from data.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.CsopCrypto.Get(System.IO.Stream,System.Int32)">
            <summary>Parses the cryptographic packet from stream.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.CsopCrypto.Session">
            <summary>Session used for temporary storing encryption details.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.CsopCrypto.Session.#ctor(System.Security.Cryptography.RSACryptoServiceProvider,System.Boolean)">
            <summary>
                initializes a new session by defining the key version used. If you are at a private key environment set the associated
                <see cref="P:CsWpfBase.Online.CsOnline.Key" /> accordingly
            </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.CsopCrypto.Session.AsymetricKey">
            <summary>the asymetric key provider. If the key provided is a private Key this provider will be either.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.CsopCrypto.Session.Iv">
            <summary>
                initialization vector (IV) or starting variable (SV)[1] is a fixed-size input to a cryptographic primitive that is typically required to be
                random or pseudorandom.
            </summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.CsopCrypto.Session.SymetricKey">
            <summary>The unencrypted symmetric key.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.CsopCrypto.Session.EncryptedSymetricKey">
            <summary>The asymmetric encrypted Key.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.CsopCrypto.Session.IsKeyLoaded">
            <summary>Defines if the key is already loaded.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.CsopCrypto.Session.GetKeys(CsWpfBase.Online.packets.v1.CsopCrypto)">
            <summary>Get the unencrypted key by reading a <see cref="T:CsWpfBase.Online.packets.v1.CsopCrypto" /> packet. Needs the private key version</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.CsopCrypto.Session.EncryptPacket(CsWpfBase.Online.packets.CsoPacket,System.Byte)">
            <summary>encrypts a packet</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.CsopCrypto.Session.DecryptPacket(CsWpfBase.Online.packets.v1.CsopCrypto)">
            <summary>Decrypts the packet</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.server.CsopServerMessage">
            <summary>Contains a message from the server which should be presented to the user.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServerMessage.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServerMessage.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.server.CsopServerMessage.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.server.CsopServerMessage.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServerMessage.MessageType">
            <summary>Gets or sets the MessageType.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServerMessage.Title">
            <summary>Gets or sets the Title.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServerMessage.Text">
            <summary>Gets or sets the Text.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.server.CsopServerMessage.Execute">
            <summary>Executes the packet</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.server.CsopServerUpdateAvailable">
            <summary>Server Response, if an update is available.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServerUpdateAvailable.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServerUpdateAvailable.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.server.CsopServerUpdateAvailable.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.server.CsopServerUpdateAvailable.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServerUpdateAvailable.IsHiddenUpdate">
            <summary>determine if user should be notified about the update process.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServerUpdateAvailable.WindowTitle">
            <summary>returns the title which should be used by the window to present the update to the user.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServerUpdateAvailable.Description">
            <summary>Update description.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServerUpdateAvailable.Changeset">
            <summary>Update changeset.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServerUpdateAvailable.Version">
            <summary>Update version.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServerUpdateAvailable.FileSize">
            <summary>Update file size.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServerUpdateAvailable.DownloadLink">
            <summary>Update download link.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServerUpdateAvailable.AutostartFiles">
            <summary>Files which should be automatically executed after update installation.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.server.CsopServerUpdateAvailable.Execute">
            <summary>Performs the update.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.v1.server.CsopServer">
            <summary>The default server response.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.server.CsopServer.#ctor">
            <summary>Creates a new server response packet.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServer.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServer.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.server.CsopServer.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.server.CsopServer.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServer.ServerTime">
            <summary>Gets the current server time.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.v1.server.CsopServer.InnerPackets">
            <summary>Gets the inner packets of the server response.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.v1.server.CsopServer.GetInnerPacket``1">
            <summary>Get a specific packet Type if exist.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.CsoPacket">
            <summary>The packet base for all types which are transmitted.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.CsoPacket.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.CsoPacket.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" /> property whenever the
                packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.CsoPacket.IPart">
            <summary>can be used in the <see cref="T:CsWpfBase.Online.packets.CsoPacket.Writer" /> or <see cref="T:CsWpfBase.Online.packets.CsoPacket.Reader" />.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.IPart.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.IPart.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion">
            <summary>
                Gets or Sets the packet version. This field can be used to extend an existing packet with properties only available in a specific version. This
                field is intended for extensibility issues.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.GetData">
            <summary>Get the packat data.</summary>
            <returns></returns>
        </member>
        <member name="T:CsWpfBase.Online.packets.CsoPacket.Types">
            <summary>Contains a list of all known packet types.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.Crypted">
            <summary>A crypted packet container.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ClientBase">
            <summary>client request, packet.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ServerBase">
            <summary>server response, packet.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ClientAppInfo">
            <summary>client request, client info.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ClientException">
            <summary>client request, client exception.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ClientOsInfo">
            <summary>client request, client os info.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ClientHwMainboardInfo">
            <summary>client request, client mainboard hardware info.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ClientHwGraphicInfo">
            <summary>client request, client graphic hardware info.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ClientHwProcessorInfo">
            <summary>client request, client processor hardware info.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ClientHwComputerSystemInfo">
            <summary>client request, client computer hardware info.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ClientHwScreenInfo">
            <summary>client request, client screen hardware info.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ClientHwMemoryInfo">
            <summary>client request, client memory hardware info.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ClientHwDiskDriveInfo">
            <summary>client request, client disc drive hardware info.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ClientHwBiosInfo">
            <summary>client request, client bios hardware info.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ClientHwNetworkInfo">
            <summary>client request, client network hardware info.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ClientFeedback">
            <summary>client request, client feedback.</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ServerUpdateAvailable">
            <summary>server response, update available</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.ServerMessage">
            <summary>server response, message for user</summary>
        </member>
        <member name="F:CsWpfBase.Online.packets.CsoPacket.Types.Unknown">
            <summary>unknown packet type.</summary>
        </member>
        <member name="T:CsWpfBase.Online.packets.CsoPacket.Reader">
            <summary>packet reader</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.#ctor(System.Byte[],System.Int32)">
            <summary>data to read.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.CsoPacket.Reader.Data">
            <summary>data to read.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.CsoPacket.Reader.Position">
            <summary>current read position.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.Byte">
            <summary>read a byte and increment position by 1.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.Int16">
            <summary>read two bytes and increment position by 2.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.Int32">
            <summary>read four bytes and increment position by 4.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.Int64">
            <summary>read eight bytes and increment position by 8.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.UInt16">
            <summary>read two bytes and increment position by 2.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.UInt32">
            <summary>read four bytes and increment position by 4.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.UInt64">
            <summary>read eight bytes and increment position by 8.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.Double">
            <summary>read eight bytes and increment position by 8.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.String">
            <summary>read the first four bytes defining the length of the string and then reads the string to its end.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.ByteArray">
            <summary>read the first four bytes defining the length of the byte array and then reads the byte array to its end.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.Guid">
            <summary>read sixteen bytes and increment position by 16.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.TimeSpan">
            <summary>read eight bytes and increment position by 8.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.DateTime">
            <summary>read eight bytes and increment position by 8. Gets the local time from serialized utc time.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.Bytes(System.Int32)">
            <summary>reads a specific amount of bytes.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.Part``1">
            <summary>reads a part of a packet collapsed inside another class.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.Packet">
            <summary>reads a packet</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.ListOfUInt16">
            <summary>reads a list of fix defined Types</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.ListOfString">
            <summary>reads a list of fix defined Types</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.ListOfParts``1">
            <summary>reads a list of fix defined Types</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.ListOfPackets">
            <summary>reads a list of packets.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Reader.List``1(System.Func{``0})">
            <summary>reads a list of types. The list must be preceded by an Int32.</summary>
            <param name="readItem">The function for reading an item in the list.</param>
        </member>
        <member name="T:CsWpfBase.Online.packets.CsoPacket.Writer">
            <summary>packet writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.CsoPacket.Writer.Data">
            <summary>the written data.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.String(System.String)">
            <summary>Add to data</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.Byte(System.Byte)">
            <summary>Add to data</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.UInt16(System.UInt16)">
            <summary>Add to data</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.UInt32(System.UInt32)">
            <summary>Add to data</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.UInt64(System.UInt64)">
            <summary>Add to data</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.Int16(System.Int16)">
            <summary>Add to data</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.Int32(System.Int32)">
            <summary>Add to data</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.Int64(System.Int64)">
            <summary>Add to data</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.Double(System.Double)">
            <summary>Add to data</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.Bytes(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>Add to data</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.ByteArray(System.Byte[])">
            <summary>Add to data</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.TimeSpan(System.TimeSpan)">
            <summary>Add to data</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.DateTime(System.DateTime)">
            <summary>Add to data</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.Guid(System.Guid)">
            <summary>Add to data</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.Part(CsWpfBase.Online.packets.CsoPacket.IPart)">
            <summary>write a part.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.Packet(CsWpfBase.Online.packets.CsoPacket)">
            <summary>Add to data</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.ListOfUInt16(System.Collections.Generic.IEnumerable{System.UInt16})">
            <summary>writes the UInt16 to the writer</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.ListOfString(System.Collections.Generic.IEnumerable{System.String})">
            <summary>writes the string to the writer</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.ListOfParts(System.Collections.Generic.IEnumerable{CsWpfBase.Online.packets.CsoPacket.IPart})">
            <summary>writes the parts to the writer</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.ListOfPackets(System.Collections.Generic.IEnumerable{CsWpfBase.Online.packets.CsoPacket})">
            <summary>writes the parts to the writer</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.CsoPacket.Writer.List``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>Writes a list of elements to the stream. The list will be preceded by an Int32 count.</summary>
            <param name="list">the list to be written to the stream</param>
            <param name="writeAction">The action to write an item of the list to the stream.</param>
        </member>
        <member name="T:CsWpfBase.Online.packets.UnknownPacket">
            <summary>A packet where the type is unknown and so the binary couldn't be resolved.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.UnknownPacket.#ctor">
            <summary>Creates a packet where even the type is unknown.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.UnknownPacket.#ctor(System.UInt32)">
            <summary>Creates a packet where the type identifier couldn't be resolved.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.UnknownPacket.PacketType">
            <summary>Gets the type code which is used to parse an unknown packet into a specific .Net type.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.UnknownPacket.InitialVersion">
            <summary>
                The initial Value of the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />, this value will be applied to the <see cref="P:CsWpfBase.Online.packets.CsoPacket.PacketVersion" />
                property whenever the packet is created or no version is defined.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.UnknownPacket.Parse(CsWpfBase.Online.packets.CsoPacket.Reader,System.Int32)">
            <summary>Interprets a binary into this object.</summary>
        </member>
        <member name="M:CsWpfBase.Online.packets.UnknownPacket.Write(CsWpfBase.Online.packets.CsoPacket.Writer)">
            <summary>converts this object into binary and writes the content to the Writer.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.UnknownPacket.TypeIdentifier">
            <summary>Gets or sets the TypeIdentifier.</summary>
        </member>
        <member name="P:CsWpfBase.Online.packets.UnknownPacket.Data">
            <summary>the data portion of the unresolved packet.</summary>
        </member>
        <member name="T:CsWpfBase.Online.parser.CsoParser">
            <summary>Internal see at <see cref="T:CsWpfBase.Online.CsOnline" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.parser.CsoParser.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Online.parser.CsoParser.ParsePacket(System.Byte[],System.Int32)">
            <summary>Parses an unencrypted packet.</summary>
        </member>
        <member name="M:CsWpfBase.Online.parser.CsoParser.ParsePacket(CsWpfBase.Online.packets.CsoPacket.Reader)">
            <summary>Parses an unencrypted packet.</summary>
        </member>
        <member name="M:CsWpfBase.Online.parser.CsoParser.ParseCryptedPacket(System.Byte[],System.Int32,CsWpfBase.Online.packets.v1.CsopCrypto.Session)">
            <summary>Parse the content of an encrypted packet. if root packet is no encrypted packet the packet will be returned.</summary>
        </member>
        <member name="M:CsWpfBase.Online.parser.CsoParser.ParseCryptedPacket(CsWpfBase.Online.packets.CsoPacket.Reader,CsWpfBase.Online.packets.v1.CsopCrypto.Session)">
            <summary>Parse the content of an encrypted packet. if root packet is no encrypted packet the packet will be returned.</summary>
        </member>
        <member name="M:CsWpfBase.Online.parser.CsoParser.ParseCryptedPacket(CsWpfBase.Online.packets.v1.CsopCrypto,CsWpfBase.Online.packets.v1.CsopCrypto.Session)">
            <summary>Parse the content of an encrypted packet.</summary>
        </member>
        <member name="T:CsWpfBase.Online.response.CsoResponse">
            <summary>Internal see at <see cref="T:CsWpfBase.Online.CsOnline" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.response.CsoResponse.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Online.response.CsoResponse.Process">
            <summary>Processes server Responses</summary>
        </member>
        <member name="T:CsWpfBase.Online.response.CsoResponseProcess">
            <summary>Internal see at <see cref="T:CsWpfBase.Online.CsOnline" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.response.CsoResponseProcess.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Online.response.CsoResponseProcess.Complete(CsWpfBase.Online.packets.CsoPacket)">
            <summary>Handles all response packets and executes them.</summary>
        </member>
        <member name="T:CsWpfBase.Online.send.CsoSend">
            <summary>Internal see at <see cref="T:CsWpfBase.Online.CsOnline" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.send.CsoSend.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Online.send.CsoSend.Ping">
            <summary>Sends an empty request. checks for updates.</summary>
        </member>
        <member name="M:CsWpfBase.Online.send.CsoSend.AppInfo">
            <summary>Sends an request with client informations.</summary>
        </member>
        <member name="M:CsWpfBase.Online.send.CsoSend.CompleteInfo">
            <summary>Sends an request with the complete computer informations.</summary>
        </member>
        <member name="M:CsWpfBase.Online.send.CsoSend.Exception(System.Exception)">
            <summary>Sends an exception to server which logs this exception</summary>
        </member>
        <member name="M:CsWpfBase.Online.send.CsoSend.Feedback(CsWpfBase.Online.packets.v1.client.CsopClientFeedback)">
            <summary>Sends an feedback.</summary>
        </member>
        <member name="T:CsWpfBase.Online.send.CsoSendAsync">
            <summary>Internal see at <see cref="T:CsWpfBase.Online.CsOnline" />.</summary>
        </member>
        <member name="P:CsWpfBase.Online.send.CsoSendAsync.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Online.send.CsoSendAsync.Ping">
            <summary>Sends an empty request. checks for updates.</summary>
        </member>
        <member name="M:CsWpfBase.Online.send.CsoSendAsync.AppInfo">
            <summary>Sends an request with client informations.</summary>
        </member>
        <member name="M:CsWpfBase.Online.send.CsoSendAsync.CompleteInfo">
            <summary>Sends an request with the complete client info.</summary>
        </member>
        <member name="M:CsWpfBase.Online.send.CsoSendAsync.Feedback(CsWpfBase.Online.packets.v1.client.CsopClientFeedback)">
            <summary>Sends an request with the complete client info.</summary>
        </member>
        <member name="M:CsWpfBase.Online.send.CsoSendAsync.Exception(System.Exception)">
            <summary>Sends an exception to the server for logging purpose.</summary>
        </member>
        <member name="T:CsWpfBase.Online.send.SendTask">
            <summary>
                A task created to give the user the possibility to make a call chain after sending data to the remote host. The user can append specialized Task
                before ending in own functions.
            </summary>
        </member>
        <member name="M:CsWpfBase.Online.send.SendTask.#ctor(System.Func{CsWpfBase.Online.packets.CsoPacket})">
            <summary>Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function.</summary>
            <param name="function">
                The delegate that represents the code to execute in the task. When the function has completed, the task's
                <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.
            </param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="function" /> argument is null.</exception>
        </member>
        <member name="M:CsWpfBase.Online.send.SendTask.#ctor(System.Func{CsWpfBase.Online.packets.CsoPacket},System.Threading.CancellationToken)">
            <summary>Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function.</summary>
            <param name="function">
                The delegate that represents the code to execute in the task. When the function has completed, the task's
                <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.
            </param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to be assigned to this task.</param>
            <exception cref="T:System.ObjectDisposedException">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="function" /> argument is null.</exception>
        </member>
        <member name="M:CsWpfBase.Online.send.SendTask.#ctor(System.Func{CsWpfBase.Online.packets.CsoPacket},System.Threading.Tasks.TaskCreationOptions)">
            <summary>Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function and creation options.</summary>
            <param name="function">
                The delegate that represents the code to execute in the task. When the function has completed, the task's
                <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.
            </param>
            <param name="creationOptions">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="creationOptions" /> argument specifies an invalid value for
                <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="function" /> argument is null.</exception>
        </member>
        <member name="M:CsWpfBase.Online.send.SendTask.#ctor(System.Func{CsWpfBase.Online.packets.CsoPacket},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
            <summary>Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function and creation options.</summary>
            <param name="function">
                The delegate that represents the code to execute in the task. When the function has completed, the task's
                <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.
            </param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> that will be assigned to the new task.</param>
            <param name="creationOptions">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</param>
            <exception cref="T:System.ObjectDisposedException">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="creationOptions" /> argument specifies an invalid value for
                <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="function" /> argument is null.</exception>
        </member>
        <member name="M:CsWpfBase.Online.send.SendTask.#ctor(System.Func{System.Object,CsWpfBase.Online.packets.CsoPacket},System.Object)">
            <summary>Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified function and state.</summary>
            <param name="function">
                The delegate that represents the code to execute in the task. When the function has completed, the task's
                <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.
            </param>
            <param name="state">An object representing data to be used by the action.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="function" /> argument is null.</exception>
        </member>
        <member name="M:CsWpfBase.Online.send.SendTask.#ctor(System.Func{System.Object,CsWpfBase.Online.packets.CsoPacket},System.Object,System.Threading.CancellationToken)">
            <summary>Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified action, state, and options.</summary>
            <param name="function">
                The delegate that represents the code to execute in the task. When the function has completed, the task's
                <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.
            </param>
            <param name="state">An object representing data to be used by the function.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to be assigned to the new task.</param>
            <exception cref="T:System.ObjectDisposedException">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="function" /> argument is null.</exception>
        </member>
        <member name="M:CsWpfBase.Online.send.SendTask.#ctor(System.Func{System.Object,CsWpfBase.Online.packets.CsoPacket},System.Object,System.Threading.Tasks.TaskCreationOptions)">
            <summary>Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified action, state, and options.</summary>
            <param name="function">
                The delegate that represents the code to execute in the task. When the function has completed, the task's
                <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.
            </param>
            <param name="state">An object representing data to be used by the function.</param>
            <param name="creationOptions">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="creationOptions" /> argument specifies an invalid value for
                <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="function" /> argument is null.</exception>
        </member>
        <member name="M:CsWpfBase.Online.send.SendTask.#ctor(System.Func{System.Object,CsWpfBase.Online.packets.CsoPacket},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
            <summary>Initializes a new <see cref="T:System.Threading.Tasks.Task`1" /> with the specified action, state, and options.</summary>
            <param name="function">
                The delegate that represents the code to execute in the task. When the function has completed, the task's
                <see cref="P:System.Threading.Tasks.Task`1.Result" /> property will be set to return the result value of the function.
            </param>
            <param name="state">An object representing data to be used by the function.</param>
            <param name="cancellationToken">The <see cref="T:System.Threading.CancellationToken" /> to be assigned to the new task.</param>
            <param name="creationOptions">The <see cref="T:System.Threading.Tasks.TaskCreationOptions" /> used to customize the task's behavior.</param>
            <exception cref="T:System.ObjectDisposedException">The provided <see cref="T:System.Threading.CancellationToken" /> has already been disposed.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="creationOptions" /> argument specifies an invalid value for
                <see cref="T:System.Threading.Tasks.TaskCreationOptions" />.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="function" /> argument is null.</exception>
        </member>
        <member name="M:CsWpfBase.Online.send.SendTask.ProcessResponse">
            <summary>Calls the cs online system and processes the server response.</summary>
        </member>
        <member name="T:CsWpfBase.Properties.CanBeNullAttribute">
            <summary>
                Indicates that the value of the marked element could be <c>null</c> sometimes, so the check for <c>null</c> is
                necessary before its usage
            </summary>
            <example>
                <code>
            [CanBeNull] public object Test() { return null; }
            public void UseTest() {
              var p = Test();
              var s = p.ToString(); // Warning: Possible 'System.NullReferenceException'
            }
            </code>
            </example>
        </member>
        <member name="T:CsWpfBase.Properties.NotNullAttribute">
            <summary>Indicates that the value of the marked element could never be <c>null</c>
            </summary>
            <example>
                <code>
            [NotNull] public object Foo() {
              return null; // Warning: Possible 'null' assignment
            }
            </code>
            </example>
        </member>
        <member name="T:CsWpfBase.Properties.StringFormatMethodAttribute">
            <summary>
                Indicates that the marked method builds string by format pattern and (optional) arguments. Parameter, which
                contains format string, should be given in constructor. The format string should be in
                <see cref="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])" />-like form
            </summary>
            <example>
                <code>
            [StringFormatMethod("message")]
            public void ShowError(string message, params object[] args) { /* do something */ }
            public void Foo() {
              ShowError("Failed: {0}"); // Warning: Non-existing argument in format string
            }
            </code>
            </example>
        </member>
        <member name="M:CsWpfBase.Properties.StringFormatMethodAttribute.#ctor(System.String)">
            <param name="formatParameterName">Specifies which parameter of an annotated method should be treated as format-string</param>
        </member>
        <member name="T:CsWpfBase.Properties.InvokerParameterNameAttribute">
            <summary>
                Indicates that the function argument should be string literal and match one of the parameters of the caller
                function. For example, ReSharper annotates the parameter of <see cref="T:System.ArgumentNullException" />
            </summary>
            <example>
                <code>
            public void Foo(string param) {
              if (param == null)
                throw new ArgumentNullException("par"); // Warning: Cannot resolve symbol
            }
            </code>
            </example>
        </member>
        <member name="T:CsWpfBase.Properties.NotifyPropertyChangedInvocatorAttribute">
            <summary>
                Indicates that the method is contained in a type that implements
                <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface and this method is used to notify that some
                property value changed
            </summary>
            <remarks>
                The method should be non-static and conform to one of the supported signatures:
                <list>
                    <item>
                        <c>NotifyChanged(string)</c>
                    </item>
                    <item>
                        <c>NotifyChanged(params string[])</c>
                    </item>
                    <item>
                        <c>NotifyChanged{T}(Expression{Func{T}})</c>
                    </item>
                    <item>
                        <c>NotifyChanged{T,U}(Expression{Func{T,U}})</c>
                    </item>
                    <item>
                        <c>SetProperty{T}(ref T, T, string)</c>
                    </item>
                </list>
            </remarks>
            <example>
                <code>
             public class Foo : INotifyPropertyChanged {
               public event PropertyChangedEventHandler PropertyChanged;
               [NotifyPropertyChangedInvocator]
               protected virtual void NotifyChanged(string propertyName) { ... }
            
               private string _name;
               public string Name {
                 get { return _name; }
                 set { _name = value; NotifyChanged("LastName"); /* Warning */ }
               }
             }
             </code>
                Examples of generated notifications:
                <list>
                    <item>
                        <c>NotifyChanged("Property")</c>
                    </item>
                    <item>
                        <c>NotifyChanged(() =&gt; Property)</c>
                    </item>
                    <item>
                        <c>NotifyChanged((VM x) =&gt; x.Property)</c>
                    </item>
                    <item>
                        <c>SetProperty(ref myField, value, "Property")</c>
                    </item>
                </list>
            </example>
        </member>
        <member name="T:CsWpfBase.Properties.ContractAnnotationAttribute">
            <summary>Describes dependency between method input and output</summary>
            <syntax>
                <p>Function Definition Table syntax:</p>
                <list>
                    <item>FDT      ::= FDTRow [;FDTRow]*</item>
                    <item>FDTRow   ::= Input =&gt; Output | Output &lt;= Input</item>
                    <item>Input    ::= ParameterName: Value [, Input]*</item>
                    <item>Output   ::= [ParameterName: Value]* {halt|stop|void|nothing|Value}</item>
                    <item>Value    ::= true | false | null | notnull | canbenull</item>
                </list>
                If method has single input parameter, it's name could be omitted.<br />
                Using <c>halt</c> (or <c>void</c>/<c>nothing</c>, which is the same) for method output means that the methos
                doesn't return normally.<br />
                <c>canbenull</c> annotation is only applicable for output parameters.<br />
                You can use multiple <c>[ContractAnnotation]</c> for each FDT row, or use single attribute with rows separated by
                semicolon.<br />
            </syntax>
            <examples>
                <list>
                    <item>
                        <code>
            [ContractAnnotation("=> halt")]
            public void TerminationMethod()
            </code>
                    </item>
                    <item>
                        <code>
            [ContractAnnotation("halt &lt;= condition: false")]
            public void Assert(bool condition, string text) // regular assertion method
            </code>
                    </item>
                    <item>
                        <code>
            [ContractAnnotation("s:null => true")]
            public bool IsNullOrEmpty(string s) // string.IsNullOrEmpty()
            </code>
                    </item>
                    <item>
                        <code>
            // A method that returns null if the parameter is null, and not null if the parameter is not null
            [ContractAnnotation("null => null; notnull => notnull")]
            public object Transform(object data) 
            </code>
                    </item>
                    <item>
                        <code>
            [ContractAnnotation("s:null=>false; =>true,result:notnull; =>false, result:null")]
            public bool TryParse(string s, out Person result)
            </code>
                    </item>
                </list>
            </examples>
        </member>
        <member name="T:CsWpfBase.Properties.LocalizationRequiredAttribute">
            <summary>Indicates that marked element should be localized or not</summary>
            <example>
                <code>
            [LocalizationRequiredAttribute(true)]
            public class Foo {
              private string str = "my string"; // Warning: Localizable string
            }
            </code>
            </example>
        </member>
        <member name="T:CsWpfBase.Properties.CannotApplyEqualityOperatorAttribute">
            <summary>
                Indicates that the value of the marked type (or its derivatives) cannot be compared using '==' or '!='
                operators and <c>Equals()</c>
                should be used instead. However, using '==' or '!=' for comparison with <c>null</c> is always permitted.
            </summary>
            <example>
                <code>
            [CannotApplyEqualityOperator]
            class NoEquality { }
            class UsesNoEquality {
              public void Test() {
                var ca1 = new NoEquality();
                var ca2 = new NoEquality();
                if (ca1 != null) { // OK
                  bool condition = ca1 == ca2; // Warning
                }
              }
            }
            </code>
            </example>
        </member>
        <member name="T:CsWpfBase.Properties.BaseTypeRequiredAttribute">
            <summary>
                When applied to a target attribute, specifies a requirement for any type marked with the target attribute to
                implement or inherit specific type or types.
            </summary>
            <example>
                <code>
            [BaseTypeRequired(typeof(IComponent)] // Specify requirement
            public class ComponentAttribute : Attribute { }
            [Component] // ComponentAttribute requires implementing IComponent interface
            public class MyComponent : IComponent { }
            </code>
            </example>
        </member>
        <member name="T:CsWpfBase.Properties.UsedImplicitlyAttribute">
            <summary>
                Indicates that the marked symbol is used implicitly (e.g. via reflection, in external library), so this symbol
                will not be marked as unused (as well as by other usage inspections)
            </summary>
        </member>
        <member name="T:CsWpfBase.Properties.MeansImplicitUseAttribute">
            <summary>
                Should be used on attributes and causes ReSharper to not mark symbols marked with such attributes as unused
                (as well as by other usage inspections)
            </summary>
        </member>
        <member name="F:CsWpfBase.Properties.ImplicitUseKindFlags.Access">
            <summary>Only entity marked with attribute considered used</summary>
        </member>
        <member name="F:CsWpfBase.Properties.ImplicitUseKindFlags.Assign">
            <summary>Indicates implicit assignment to a member</summary>
        </member>
        <member name="F:CsWpfBase.Properties.ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature">
            <summary>
                Indicates implicit instantiation of a type with fixed constructor signature. That means any unused constructor
                parameters won't be reported as such.
            </summary>
        </member>
        <member name="F:CsWpfBase.Properties.ImplicitUseKindFlags.InstantiatedNoFixedConstructorSignature">
            <summary>Indicates implicit instantiation of a type</summary>
        </member>
        <member name="T:CsWpfBase.Properties.ImplicitUseTargetFlags">
            <summary>Specify what is considered used implicitly when marked with <see cref="T:CsWpfBase.Properties.MeansImplicitUseAttribute" />
                or <see cref="T:CsWpfBase.Properties.UsedImplicitlyAttribute" />
            </summary>
        </member>
        <member name="F:CsWpfBase.Properties.ImplicitUseTargetFlags.Members">
            <summary>Members of entity marked with attribute are considered used</summary>
        </member>
        <member name="F:CsWpfBase.Properties.ImplicitUseTargetFlags.WithMembers">
            <summary>Entity marked with attribute and all its members considered used</summary>
        </member>
        <member name="T:CsWpfBase.Properties.PublicAPIAttribute">
            <summary>
                This attribute is intended to mark publicly available API which should not be removed and so is treated as
                used
            </summary>
        </member>
        <member name="T:CsWpfBase.Properties.InstantHandleAttribute">
            <summary>
                Tells code analysis engine if the parameter is completely handled when the invoked method is on stack. If the
                parameter is a delegate, indicates that delegate is executed while the method is executed. If the parameter is an
                enumerable, indicates that it is enumerated while the method is executed
            </summary>
        </member>
        <member name="T:CsWpfBase.Properties.PureAttribute">
            <summary>Indicates that a method does not make any observable state changes. The same as
                <c>System.Diagnostics.Contracts.PureAttribute</c>
            </summary>
            <example>
                <code>
            [Pure] private int Multiply(int x, int y) { return x * y; }
            public void Foo() {
              const int a = 2, b = 2;
              Multiply(a, b); // Waring: Return value of pure method is not used
            }
            </code>
            </example>
        </member>
        <member name="T:CsWpfBase.Properties.PathReferenceAttribute">
            <summary>
                Indicates that a parameter is a path to a file or a folder within a web project. Path can be relative or
                absolute, starting from web root (~)
            </summary>
        </member>
        <member name="T:CsWpfBase.Properties.AspMvcActionAttribute">
            <summary>
                ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC action. If applied to
                a method, the MVC action name is calculated implicitly from the context. Use this attribute for custom wrappers
                similar to
                <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:CsWpfBase.Properties.AspMvcAreaAttribute">
            <summary>
                ASP.NET MVC attribute. Indicates that a parameter is an MVC area. Use this attribute for custom wrappers
                similar to
                <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:CsWpfBase.Properties.AspMvcControllerAttribute">
            <summary>
                ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC controller. If
                applied to a method, the MVC controller name is calculated implicitly from the context. Use this attribute for
                custom wrappers similar to
                <c>System.Web.Mvc.Html.ChildActionExtensions.RenderAction(HtmlHelper, String, String)</c>
            </summary>
        </member>
        <member name="T:CsWpfBase.Properties.AspMvcMasterAttribute">
            <summary>
                ASP.NET MVC attribute. Indicates that a parameter is an MVC Master. Use this attribute for custom wrappers
                similar to
                <c>System.Web.Mvc.Controller.View(String, String)</c>
            </summary>
        </member>
        <member name="T:CsWpfBase.Properties.AspMvcModelTypeAttribute">
            <summary>
                ASP.NET MVC attribute. Indicates that a parameter is an MVC model type. Use this attribute for custom wrappers
                similar to
                <c>System.Web.Mvc.Controller.View(String, Object)</c>
            </summary>
        </member>
        <member name="T:CsWpfBase.Properties.AspMvcPartialViewAttribute">
            <summary>
                ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC partial view. If
                applied to a method, the MVC partial view name is calculated implicitly from the context. Use this attribute for
                custom wrappers similar to
                <c>System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:CsWpfBase.Properties.AspMvcSupressViewErrorAttribute">
            <summary>ASP.NET MVC attribute. Allows disabling all inspections for MVC views within a class or a method.</summary>
        </member>
        <member name="T:CsWpfBase.Properties.AspMvcDisplayTemplateAttribute">
            <summary>
                ASP.NET MVC attribute. Indicates that a parameter is an MVC display template. Use this attribute for custom
                wrappers similar to
                <c>System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:CsWpfBase.Properties.AspMvcEditorTemplateAttribute">
            <summary>
                ASP.NET MVC attribute. Indicates that a parameter is an MVC editor template. Use this attribute for custom
                wrappers similar to
                <c>System.Web.Mvc.Html.EditorExtensions.EditorForModel(HtmlHelper, String)</c>
            </summary>
        </member>
        <member name="T:CsWpfBase.Properties.AspMvcTemplateAttribute">
            <summary>
                ASP.NET MVC attribute. Indicates that a parameter is an MVC template. Use this attribute for custom wrappers
                similar to
                <c>System.ComponentModel.DataAnnotations.UIHintAttribute(System.String)</c>
            </summary>
        </member>
        <member name="T:CsWpfBase.Properties.AspMvcViewAttribute">
            <summary>
                ASP.NET MVC attribute. If applied to a parameter, indicates that the parameter is an MVC view. If applied to a
                method, the MVC view name is calculated implicitly from the context. Use this attribute for custom wrappers similar
                to
                <c>System.Web.Mvc.Controller.View(Object)</c>
            </summary>
        </member>
        <member name="T:CsWpfBase.Properties.AspMvcActionSelectorAttribute">
            <summary>
                ASP.NET MVC attribute. When applied to a parameter of an attribute, indicates that this parameter is an MVC
                action name
            </summary>
            <example>
                <code>
            [ActionName("Foo")]
            public ActionResult Login(string returnUrl) {
              ViewBag.ReturnUrl = Url.Action("Foo"); // OK
              return RedirectToAction("Bar"); // Error: Cannot resolve action
            }
            </code>
            </example>
        </member>
        <member name="T:CsWpfBase.Properties.RazorSectionAttribute">
            <summary>
                Razor attribute. Indicates that a parameter or a method is a Razor section. Use this attribute for custom
                wrappers similar to
                <c>System.Web.WebPages.WebPageBase.RenderSection(String)</c>
            </summary>
        </member>
        <member name="T:CsWpfBase.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CsWpfBase.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CsWpfBase.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridViewItem">
            <summary>An item for the <see cref="T:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridView" />.</summary>
        </member>
        <member name="M:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridViewItem.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridViewItem.GetContainerForItemOverride">
            <summary>Creates a new <see cref="T:System.Windows.Controls.TreeViewItem" /> to use to display the object.</summary>
            <returns>A new <see cref="T:System.Windows.Controls.TreeViewItem" />.</returns>
        </member>
        <member name="M:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridViewItem.IsItemItsOwnContainerOverride(System.Object)">
            <summary>Determines whether an object is a <see cref="T:System.Windows.Controls.TreeViewItem" />.</summary>
            <returns>true if <paramref name="item" /> is a <see cref="T:System.Windows.Controls.TreeViewItem" />; otherwise, false.</returns>
            <param name="item">The object to evaluate.</param>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridViewItem.Level">
            <summary>Indentation level of the item.</summary>
        </member>
        <member name="M:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridViewItem.GetParentTreeViewItem">
            <summary>Returns the owning <see cref="T:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridViewItem" /> of the instance.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridView">
            <summary>A tree view with an integrated grid view layout.</summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridView.FirstColumnTemplateProperty">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridView.FirstColumnWidthProperty">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridView.FirstColumnHeaderProperty">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridView.LevelMarginProperty">
            <summary></summary>
        </member>
        <member name="M:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridView.GetContainerForItemOverride">
            <summary>Creates a <see cref="T:System.Windows.Controls.TreeViewItem" /> to use to display content.</summary>
            <returns>A new <see cref="T:System.Windows.Controls.TreeViewItem" /> to use as a container for content.</returns>
        </member>
        <member name="M:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridView.IsItemItsOwnContainerOverride(System.Object)">
            <summary>Determines whether the specified item is its own container or can be its own container.</summary>
            <returns>true if <paramref name="item" /> is a <see cref="T:System.Windows.Controls.TreeViewItem" />; otherwise, false.</returns>
            <param name="item">The object to evaluate.</param>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridView.FirstColumnTemplate">
            <summary>Specifys the first column template.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridView.Columns">
            <summary>All columns. Be careful, first column is already included with <see cref="P:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridView.FirstColumnTemplate" /> as <see cref="T:System.Windows.DataTemplate" />.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridView.LevelMargin">
            <summary>the margin which is applied by each level of indentation.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridView.FirstColumnWidth">
            <summary>the width of the first column.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Basics.treelistview.TreeGridView.FirstColumnHeader">
            <summary>The header property of the first column.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.Basics.AlternatingTextBox">
            <summary>
                Can be used like a text box. It offers functionality to present a alternating text while <see cref="P:CsWpfBase.Themes.Controls.Basics.AlternatingTextBox.AlternatingText" /> is
                null or empty.
            </summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Basics.AlternatingTextBox.TextProperty">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Basics.AlternatingTextBox.AlternatingTextProperty">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Basics.AlternatingTextBox.AlternatingVisibleProperty">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Basics.AlternatingTextBox.AlternatingBrushProperty">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Basics.AlternatingTextBox.AcceptReturnProperty">
            <summary></summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Basics.AlternatingTextBox.TextWrappingProperty">
            <summary></summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Basics.AlternatingTextBox.Text">
            <summary>The text which is displayed. If null the <see cref="P:CsWpfBase.Themes.Controls.Basics.AlternatingTextBox.AlternatingText" /> will be displayed.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Basics.AlternatingTextBox.AcceptReturn">
            <summary>Look at <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Basics.AlternatingTextBox.TextWrapping">
            <summary>Look at <see cref="P:System.Windows.Controls.TextBox.TextWrapping" />.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Basics.AlternatingTextBox.AlternatingText">
            <summary>The text which will be displayed if <see cref="P:CsWpfBase.Themes.Controls.Basics.AlternatingTextBox.Text" /> is null or empty.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Basics.AlternatingTextBox.AlternatingVisible">
            <summary>Indicates if alternating text is visible.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Basics.AlternatingTextBox.AlternatingBrush">
            <summary>The brush which is used if alternating text is visible.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.Basics.ComboBoxWithNewButton">
            <summary>A default <see cref="T:System.Windows.Controls.ComboBox" /> with a new <see cref="T:System.Windows.Controls.Button" /> inside the context menu of the combo box.</summary>
        </member>
        <member name="M:CsWpfBase.Themes.Controls.Basics.ComboBoxWithNewButton.OnApplyTemplate">
            <summary>Called when <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> is called.</summary>
        </member>
        <member name="E:CsWpfBase.Themes.Controls.Basics.ComboBoxWithNewButton.NewClicked">
            <summary>Occurs when the user presses the new button inside the combobox.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.Basics.WaitCircle">
            <summary>Interaction logic for WaitCircle.xaml</summary>
            <summary>
            WaitCircle
            </summary>
        </member>
        <member name="M:CsWpfBase.Themes.Controls.Basics.WaitCircle.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.Containers.HelpTooltip">
            <summary>a designed <see cref="T:System.Windows.Controls.ToolTip" /> for a help message</summary>
            <summary>
            HelpTooltip
            </summary>
        </member>
        <member name="M:CsWpfBase.Themes.Controls.Containers.HelpTooltip.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Themes.Controls.Containers.HelpTooltip.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.Containers.ItemControl`1">
            <summary>The item control is the base for a user control which edit an item.</summary>
            <typeparam name="TItemType"></typeparam>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Containers.ItemControl`1.ItemProperty">
            <summary></summary>
        </member>
        <member name="M:CsWpfBase.Themes.Controls.Containers.ItemControl`1.ItemChanged(`0,`0)">
            <summary>Occurs whenever the item changes.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Containers.ItemControl`1.Item">
            <summary>The item to be edited by the user control.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.Containers.WindowButton">
            <summary>
                The window button provides a control which is able to embed a window directly into xaml code. The opened window style will be replaced if a
                window style is found in the resources of this control.
            </summary>
        </member>
        <member name="M:CsWpfBase.Themes.Controls.Containers.WindowButton.#ctor">
            <summary>Init a new instance.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Containers.WindowButton.Content">
            <summary>Gets or sets the content of the button.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Containers.WindowButton.WindowStyle">
            <summary>Gets or sets the style which is applied to the opened Window.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Containers.WindowButton.WindowContent">
            <summary>Gets or sets the content of the window.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Containers.WindowButton.ContentTemplate">
            <summary>Gets or sets the template for the content of the button.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Containers.WindowButton.WindowContentTemplate">
            <summary>Gets or sets the template for the window content.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Containers.WindowButton.ShowDialog">
            <summary>Defines if the window should be opened as dialog. If this option is activated a new instance of the window will be created each time opened.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Containers.WindowButton.IsOpened">
            <summary>Determines if the window is currently opened.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Containers.WindowButton.HoldRelativePosition">
            <summary>Determine whether the opened window should hold the relative position to the owned window.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Containers.WindowButton.Win">
            <summary>The window which is opened on click.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Containers.WindowButton.OwnerWindow">
            <summary>The owning window this property is set whenever control gets loaded.</summary>
        </member>
        <member name="E:CsWpfBase.Themes.Controls.Containers.WindowButton.WindowInitialized">
            <summary>Occurs whenever a new window is initialized.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl">
            <summary>Used to connect two rows by id's over an connector table. Uses the cs db base system.</summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.ConnectorRowTemplateProperty">
            <summary>Dp Key</summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.SourceRowTemplateProperty">
            <summary>Dp Key</summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.AssignmentLogicProperty">
            <summary>Dp Key</summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.ItemsSource_SourceRowsProperty">
            <summary>Dp Key</summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.TargetRowProperty">
            <summary>Dp Key</summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.ItemsSource_ConnectorRowsProperty">
            <summary>Dp Key</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.Logic">
            <summary>Look at the generic definition</summary>
        </member>
        <member name="M:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.OnApplyTemplate">
            <summary>
                When overridden in a derived class, is invoked whenever application code or internal processes call
                <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.
            </summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.TargetRow">
            <summary>The target row which needs to be connected.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.ItemsSource_SourceRows">
            <summary>The source rows which can be attached to the target row via the connector table.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.ItemsSource_ConnectorRows">
            <summary>The already existing connector rows which can be deleted.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.ConnectorRowTemplate">
            <summary>The data template for the connector rows which will be used inside the list view.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.SourceRowTemplate">
            <summary>The data template for the source rows which will be used inside the list view.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.AssignmentLogic">
            <summary>The logic which will be used to assign source rows to the target row.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.ManualLogic`3">
            <summary>The assignment logic for the control.</summary>
            <typeparam name="TTargetRow">The type of the target row where elements from the source table will be attached over an connector table.</typeparam>
            <typeparam name="TConnectorRow">the type of the table which stores the connecting rows between the target row and the source rows.</typeparam>
            <typeparam name="TSourceRow">The type of the table which stores the source rows. Multiple source rows can be attached to the target row.</typeparam>
        </member>
        <member name="M:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.ManualLogic`3.#ctor(CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.ManualLogic{`0,`1,`2}.OnAssignDelegate,CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.ManualLogic{`0,`1,`2}.OnUnAssignDelegate)">
            <summary>ctor</summary>
            <param name="assignAction">The action which is used to assign a new connector.</param>
            <param name="unassignAction">the unassign action which is used to delete a connector.</param>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.ManualLogic`3.OnAssignDelegate">
            <summary>The delegate which is used on assigning a new value to the target.</summary>
            <param name="source">The source which needs to be attached to the target.</param>
            <param name="target">The target row which needs the connection between source and target.</param>
            <returns></returns>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.Db.DbConnectorAssignmentControl.ManualLogic`3.OnUnAssignDelegate">
            <summary>The delegate which is used to unassign a connector from the target row.</summary>
            <param name="connector">The connector which needs to be deleted.</param>
            <param name="target">the target row.</param>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.Editors.Base.PathEditor">
            <summary>The <see cref="T:CsWpfBase.Themes.Controls.Editors.Base.PathEditor" /> is the style based control for the <see cref="T:CsWpfBase.Themes.Controls.Editors.FPathEditor" /> and the
                <see cref="T:CsWpfBase.Themes.Controls.Editors.DPathEditor" />. This type is styled.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.Editors.Base.PathEditor`1">
            <summary>The generic logic for the editor</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.Editors.DateTimeEditor">
            <summary>An editor for date times.</summary>
        </member>
        <member name="F:CsWpfBase.Themes.Controls.Editors.DateTimeEditor.AllowNullProperty">
            <summary></summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Editors.DateTimeEditor.AllowNull">
            <summary>Specify's whether the editor allows null as value.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Editors.DateEditor.InternalValue">
            <summary>This property is used to create an bypass and adapt the changes to the original value see
                <see cref="M:CsWpfBase.Themes.Controls.Editors.DateEditor.InternalValueChanged(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
            </summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Editors.ImageEditor.ChangeImageCommand">
            <summary>Command for opening a dialog to select the new Image.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Editors.ImageEditor.DeleteImageCommand">
            <summary>Sets the image value to null.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.Editors.TimeEditor.InternalValue">
            <summary>This property is used to create an bypass and adapt the changes to the original value see
                <see cref="M:CsWpfBase.Themes.Controls.Editors.TimeEditor.InternalValueChanged(System.Nullable{System.DateTime},System.Nullable{System.DateTime})" />
            </summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.ParameterEngine.Editors.BoolParam">
            <summary>An editor for booleans</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Editors.BoolParam.Value">
            <summary>Gets or sets the value.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Editors.BoolParam.AcceptNull">
            <summary>Defines if the value can be null.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.ParameterEngine.Editors.DateParam">
            <summary>An editor for only date fields.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Editors.DateParam.Value">
            <summary>The value from which the date will be taken.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Editors.DateParam.AllowNull">
            <summary>Specify if the source value can be set to null.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.ParameterEngine.Editors.ImageParam">
            <summary>Editor for image fields</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Editors.ImageParam.Value">
            <summary>The value which needs to be edited.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Editors.ImageParam.AllowPreview">
            <summary>Gets or sets if the preview button should be displayed.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Editors.ImageParam.ChangeImageCommand">
            <summary>Command for opening a dialog to select the new Image.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Editors.ImageParam.DeleteImageCommand">
            <summary>Sets the image value to null.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.ParameterEngine.Editors.StringParam">
            <summary>An editor for strings.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Editors.StringParam.Value">
            <summary>The value which needs to be edited.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Editors.StringParam.AcceptsReturn">
            <summary>Specifies if returns are allowed.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.ParameterEngine.Editors.TimeParam">
            <summary>An editor for a time only field.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Editors.TimeParam.Value">
            <summary>The value from which the date will be taken.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Editors.TimeParam.AllowNull">
            <summary>Specify if the source value can be set to null.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase">
            <summary>The parameter base should not be used directly instead use <see cref="T:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase" /> control.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase.Content">
            <summary>The content of the <see cref="T:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase" />.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase.ContentTemplate">
            <summary>the template associated with the content.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase.ContentAlignment">
            <summary>sets the alignment of the control content.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase.Header">
            <summary>The header will be presented on the left side it is contained in a shared size group.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase.HeaderStringFormat">
            <summary>the string format which will be used if header is presented as string.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase.HeaderTemplate">
            <summary>the template associated with the header.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase.HeaderAlignment">
            <summary>the alignment of the header.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase.Help">
            <summary>The help will be presented on a hover base.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase.HelpTemplate">
            <summary>the template associated with the help.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase.Icon">
            <summary>The Icon on the left side from the header.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase.IconVisibility">
            <summary>The icons visibility.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase.IconSize">
            <summary>the width and height of the icon.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase.IsReadOnly">
            <summary>Gets or sets whether the control is read only</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase.AutoSelect">
            <summary>Defines whether the content will be selected on focus.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.Base.ParameterEngineBase.ExtensionTemplate">
            <summary>Do not use this</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Controls.ParameterEngine.ParamView">
            <summary>Used to view the value of a parameter.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.ParamView.Value">
            <summary>The Value to display.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.ParamView.ValueStringFormat">
            <summary>The string format which applies to the value</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Controls.ParameterEngine.ParamView.AutoHide">
            <summary>If active the parameter will be collapsed if the value is null or empty.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Resources.ShaderEffects.BrightContrastEffect.BrightContrastEffect">
            <summary>Effect for adjusting the brightness or the contrast.</summary>
        </member>
        <member name="M:CsWpfBase.Themes.Resources.ShaderEffects.BrightContrastEffect.BrightContrastEffect.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Resources.ShaderEffects.BrightContrastEffect.BrightContrastEffect.Input">
            <summary>The brush to adjust.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Resources.ShaderEffects.BrightContrastEffect.BrightContrastEffect.Brightness">
            <summary>Adjust the brightness with this property.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Resources.ShaderEffects.BrightContrastEffect.BrightContrastEffect.Contrast">
            <summary>Adjust the contrast with this property.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.Resources.ShaderEffects.GrayScale.GrayscaleEffect">
            <summary>A gray scale effect to use in effects on a ui element.</summary>
        </member>
        <member name="M:CsWpfBase.Themes.Resources.ShaderEffects.GrayScale.GrayscaleEffect.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Resources.ShaderEffects.GrayScale.GrayscaleEffect.Input">
            <summary>The brush to modify.</summary>
        </member>
        <member name="P:CsWpfBase.Themes.Resources.ShaderEffects.GrayScale.GrayscaleEffect.DesaturationFactor">
            <summary>Grayscale</summary>
        </member>
        <member name="T:CsWpfBase.Themes.AttachedProperties.AKeyboardFocusRedirection">
            <summary>
                Redirects the keyboard focus of the actual element to another element. If the target is not focusable the
                first child will be taken which is focusable.
            </summary>
        </member>
        <member name="T:CsWpfBase.Themes.AttachedProperties.Sort">
            <summary>Sort can be used for GridView's to apply sorting by property paths</summary>
        </member>
        <member name="T:CsWpfBase.Themes.AttachedProperties.ATextBox">
            <summary>Contains different properties to apply logic to a text box.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.AttachedProperties.AWindowDragMove">
            <summary>Allows to apply the <see cref="M:System.Windows.Window.DragMove" /> method to any UIElement contained in a window.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.AttachedProperties.AWindowResizeBorder">
            <summary>Extensions for the manual implementation of resize borders to a window.</summary>
        </member>
        <member name="T:CsWpfBase.Themes.AttachedProperties.AWindowResizeBorder.Target">
            <summary>Defines the target resize direction.</summary>
        </member>
        <member name="F:CsWpfBase.Themes.AttachedProperties.AWindowResizeBorder.Target.TopLeft">
            <summary>corner</summary>
        </member>
        <member name="F:CsWpfBase.Themes.AttachedProperties.AWindowResizeBorder.Target.Top">
            <summary>border</summary>
        </member>
        <member name="F:CsWpfBase.Themes.AttachedProperties.AWindowResizeBorder.Target.TopRight">
            <summary>corner</summary>
        </member>
        <member name="F:CsWpfBase.Themes.AttachedProperties.AWindowResizeBorder.Target.Right">
            <summary>border</summary>
        </member>
        <member name="F:CsWpfBase.Themes.AttachedProperties.AWindowResizeBorder.Target.BottomRight">
            <summary>corner</summary>
        </member>
        <member name="F:CsWpfBase.Themes.AttachedProperties.AWindowResizeBorder.Target.Bottom">
            <summary>border</summary>
        </member>
        <member name="F:CsWpfBase.Themes.AttachedProperties.AWindowResizeBorder.Target.BottomLeft">
            <summary>corner</summary>
        </member>
        <member name="F:CsWpfBase.Themes.AttachedProperties.AWindowResizeBorder.Target.Left">
            <summary>border</summary>
        </member>
        <member name="T:CsWpfBase.Themes.AttachedProperties.EnumerationExtension">
            <summary>
                Usage:
                <ComboBox SelectedValue="{Binding Path=AutoReorder}" SelectedValuePath="Value" DisplayMemberPath="Description" ItemsSource="{Binding Source={EnumerationExtension {x:Type local:Ipv4LanScannerView+Option+AutoReorderingTypes}}}"></ComboBox>
            </summary>
        </member>
        <member name="T:CsWpfBase.Themes.Generic">
            <summary>
            Generic
            </summary>
        </member>
        <member name="M:CsWpfBase.Themes.Generic.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.AnonComparer`2">
            <summary>An anonymous comparer for a default comparison with generic types.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.AnonComparer`2.#ctor(System.Func{`0,`1})">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.AnonComparer`2.Compare(`0,`0)">
            <summary>Compares two objects with the default comparer.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.AnonComparer`2.Equals(`0,`0)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <returns>
            true if the specified objects are equal; otherwise, false.
            </returns>
            <param name="x">The first object of type <paramref name="T"/> to compare.</param><param name="y">The second object of type <paramref name="T"/> to compare.</param>
        </member>
        <member name="M:CsWpfBase.Utilitys.AnonComparer`2.GetHashCode(`0)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <returns>
            A hash code for the specified object.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> for which a hash code is to be returned.</param><exception cref="T:System.ArgumentNullException">The type of <paramref name="obj"/> is a reference type and <paramref name="obj"/> is null.</exception>
        </member>
        <member name="T:CsWpfBase.Utilitys.codingTestUtils.CsTest">
            <summary>Used on all Stuff for testing purpose</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.codingTestUtils.CsTest.Data">
            <summary>All kind of data stuff for testing purpose.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.codingTestUtils.CsTest.Comparison">
            <summary>All kind of comparing tools.</summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.codingTestUtils.comparison.CsTestComparison">
            <summary>See at <see cref="T:CsWpfBase.Utilitys.codingTestUtils.CsTest" />.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.codingTestUtils.comparison.CsTestComparison.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.codingTestUtils.comparison.CsTestComparison.Compare_PrimitiveFields(System.Object,System.Object)">
            <summary>Compares all fields of type primitive or primitive array of an object an asserts that both values are equal.</summary>
            <param name="firstObject">The first object</param>
            <param name="secondObject">The second object</param>
        </member>
        <member name="T:CsWpfBase.Utilitys.codingTestUtils.data.CsTestData">
            <summary>See at <see cref="T:CsWpfBase.Utilitys.codingTestUtils.CsTest" />.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.codingTestUtils.data.CsTestData.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.codingTestUtils.data.CsTestData.Generate">
            <summary>All kind of generating stuff for testing purpose.</summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.codingTestUtils.data.CsTestDataGenerator">
            <summary>See at <see cref="T:CsWpfBase.Utilitys.codingTestUtils.CsTest" />.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.codingTestUtils.data.CsTestDataGenerator.I">
            <summary>Returns the singleton instance</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.codingTestUtils.data.CsTestDataGenerator.PrimitivesData_Into(System.Object)">
            <summary>Generates random primitive data for all fields found in type.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.codingTestUtils.data.CsTestDataGenerator.PrimitiveArrayData_Into(System.Object)">
            <summary>Generates random primitive array data for all fields of type primitive[] found in type.</summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.ListAssimilator`2">
            <summary>Used to assimilate an existing list to mirror an model. Extend and withdraws items and order it like the model.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.ListAssimilator`2.#ctor(System.Collections.Generic.IList{`0},System.Collections.Generic.IEnumerable{`1})">
            <summary>ctor</summary>
            <param name="existingList">the list to assimalte</param>
            <param name="toAssimilate">the target list layout</param>
        </member>
        <member name="P:CsWpfBase.Utilitys.ListAssimilator`2.EqualFunc">
            <summary>This function is used to compare two objects.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.ListAssimilator`2.ConvertFunc">
            <summary>Invokes when an item need to be added to the collection. Convert the item an as a example: Use this method to invoke an OnAdded event</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.ListAssimilator`2.OnPairFound">
            <summary>Invokes when a pair is found by the EqualFunc. As a example: Use this method to update an existing item.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.ListAssimilator`2.OnRemoved">
            <summary>Invokes when an existing item was removed. As a example: Use this method to invoke an OnRemoved event.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.ListAssimilator`2.Execute">
            <summary>Assimilates the existingList</summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.ConfigEngine.ConfigCreator">
            <summary>Creates a configuration string for an given object.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.ConfigEngine.ConfigCreator.#ctor(System.String,System.Object)">
            <summary>Creates an new instance of an <see cref="T:CsWpfBase.Utilitys.ConfigEngine.ConfigCreator" />.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.ConfigEngine.ConfigCreator.#ctor(System.String,System.Type)">
            <summary>Creates an new instance of an <see cref="T:CsWpfBase.Utilitys.ConfigEngine.ConfigCreator" />.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.ConfigEngine.ConfigCreator.Converters">
            <summary>Gets or sets the converters are used to convert a specific type to string.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.ConfigEngine.ConfigCreator.GetConfigString">
            <summary>Returns the configuration text for the given object.</summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.ConfigEngine.ConfigMemberAttribute">
            <summary>Includes a property or a field into the generated configuration file.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.ConfigEngine.ConfigMemberAttribute.Name">
            <summary>The name is used instead of the real property or field name.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.ConfigEngine.ConfigMemberAttribute.StringFormat">
            <summary>The string format which will be used to convert member to text.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.ConfigEngine.ConfigMemberAttribute.UseFallbackValue">
            <summary>
                If use fall back value is true, no exception will be thrown on invalid input instead, the default value for
                the type will be taken.
            </summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.ConfigEngine.ConfigParser">
            <summary>Parses the output of an <see cref="T:CsWpfBase.Utilitys.ConfigEngine.ConfigCreator" /> output.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.ConfigEngine.ConfigParser.#ctor(System.String,System.Object)">
            <summary>
                Parses a given string into a <paramref name="target" />. The object should hold the properties flagged with
                the appropriate <see cref="T:CsWpfBase.Utilitys.ConfigEngine.ConfigMemberAttribute" />.
            </summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.ConfigEngine.ConfigParser.#ctor(System.Collections.Generic.Dictionary{System.String,System.String},System.Object)">
            <summary>
                Parses a given value collection into a  <paramref name="target" />. The object should hold the properties
                flagged with the appropriate <see cref="T:CsWpfBase.Utilitys.ConfigEngine.ConfigMemberAttribute" />.
            </summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.ConfigEngine.ConfigParser.Converters">
            <summary>Gets or sets the converters are used to convert a specific type to string.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.ConfigEngine.ConfigParser.Parse``1(System.String,System.Boolean)">
            <summary>Parses a given string into the T. The T should hold the properties flagged with the appropriate
                <see cref="T:CsWpfBase.Utilitys.ConfigEngine.ConfigMemberAttribute" />. If no <see cref="T:System.Activator" /> is used the <see cref="T:System.Runtime.Serialization.FormatterServices" />
                will be used to create an uninitialized instance of the T.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.ConfigEngine.ConfigParser.ParseToObject">
            <summary>Starts parsing the input.</summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.DateDiff">
            <summary>DateDiff allows to create strings which calculates the amount of years months or days between two dates.</summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.feedback.FeedbackControl">
            <summary>Interaction logic for FeedbackControl.xaml</summary>
            <summary>
            FeedbackControl
            </summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.feedback.FeedbackControl.#ctor">
            <summary>ctor</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.feedback.FeedbackControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.searializer.CsSerializer">
            <summary>Used to serialize data, this serializer helps with version controlling.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.searializer.CsSerializer.Serialize(System.Object)">
            <summary>Serializes the object to binary.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.searializer.CsSerializer.Deserialize(System.Byte[])">
            <summary>Serializes the object to binary.</summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.searializer.v1.deserialization.typeDefinitions.CssDeserializedClass">
            <summary>The base class for all deserialized type definitions.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.v1.deserialization.typeDefinitions.CssDeserializedClass.FullQualifiedAssemblyName">
            <summary>Gets the full qualified assembly name</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.v1.deserialization.typeDefinitions.CssDeserializedClass.Type">
            <summary>The type of the definition.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.v1.deserialization.typeDefinitions.CssDeserializedClass.IsKnownType">
            <summary>Gets a boolean indicating if the type is known in this assembly and can be created.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.searializer.v1.deserialization.CssDeserializationContext.Dispose">
            <summary>
                All references to this object are freed by setting <see cref="E:CsWpfBase.Ev.Objects.Base.PropertyChanged" /> to null. In inherited classes override this method to free
                all other events.
            </summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionClass">
            <summary>The reflected properties of a class.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionClass.Create(System.Type)">
            <summary>Create a new class definition.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionClass.#ctor(System.Type)">
            <summary>Creates a new instance from a known type.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionClass.IsKnownType">
            <summary>Gets a boolean indicating if the type is known in this assembly and can be created.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionClass.FullQualifiedAssemblyName">
            <summary>Gets the full qualified assembly name</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionClass.Type">
            <summary>The .NET type of the class.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionClass.Fields">
            <summary>Serialize able or deserialize able fields</summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionClass.Field">
            <summary>A reflected field definition inside a <see cref="T:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionClass" />.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionClass.Field.Aliases">
            <summary>The legacy aliases for the fields.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionClass.Field.GetValue(System.Object)">
            <summary>Gets the value of the field by providing the owning class object. Internally calling <see cref="M:System.Reflection.FieldInfo.GetValue(System.Object)" />.</summary>
            <param name="container">The class which contains the field.</param>
        </member>
        <member name="M:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionClass.Field.SetValue(System.Object,System.Object)">
            <summary>
                Sets the value of the field by providing the owning class object where the value needs to be set. Internally calling
                <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object)" />.
            </summary>
            <param name="container">The containing class instance where the value needs to be set.</param>
            <param name="value">The value to be set on the field.</param>
        </member>
        <member name="T:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionPrimitive">
            <summary>The definition wrapper for primitive types.</summary>
        </member>
        <member name="F:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionPrimitive.Instances">
            <summary>All primitives encapsulated into an instance of <see cref="T:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionPrimitive" />.</summary>
        </member>
        <member name="F:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionPrimitive.InstancesById">
            <summary>All primitives encapsulated into an instance of <see cref="T:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionPrimitive" />.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionPrimitive.FullQualifiedAssemblyName">
            <summary>Gets the full qualified assembly name</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionPrimitive.Type">
            <summary>The type of the definition.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionPrimitive.IsKnownType">
            <summary>Gets a boolean indicating if the type is known in this assembly and can be created.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionPrimitive.IsNullable">
            <summary>Indicates if the primitive type is a null able type.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinitionPrimitive.Id">
            <summary>The unique global identifier for this primitive type.</summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinition">
            <summary>The reflected properties of members including classes, properties and other attributes or types.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinition.FullQualifiedAssemblyName">
            <summary>Gets the full qualified assembly name</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinition.Type">
            <summary>The type of the definition.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinition.IsKnownType">
            <summary>Gets a boolean indicating if the type is known in this assembly and can be created.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.searializer.v1.reflection.CssTypeDefinition.ToString">
            <summary>Returns the name of the type.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.searializer.v1.CssV1.GetReflectedDefinition(System.Type)">
            <summary>Gets a cached well known type definition</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.searializer.v1.serialization.CssSerializationDefinition.GetOrCreate_TypeId(System.Type)">
            <summary>Assumed that there is no call with primitive types.</summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.searializer.v1.serialization.CssSerializationContextPart">
            <summary>A part of the <see cref="T:CsWpfBase.Utilitys.searializer.v1.serialization.CssSerializationContext" />.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.searializer.v1.serialization.CssSerializationContextPart.Dispose">
            <summary>
                All references to this object are freed by setting <see cref="E:CsWpfBase.Ev.Objects.Base.PropertyChanged" /> to null. In inherited classes override this method to free
                all other events.
            </summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.searializer.v1.serialization.CssSerializationContext">
            <summary>The version 1 serialization context.</summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.searializer.attributes.CssLegacyAliasAttribute">
            <summary>
                Used to define an alias for a field. This alias allows older versions of the software to identify this field. Especially when renaming fields in
                new versions
            </summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.searializer.attributes.CssLegacyAliasAttribute.#ctor(System.String)">
            <summary>ctor</summary>
            <param name="name">The alias name for the field.</param>
        </member>
        <member name="P:CsWpfBase.Utilitys.searializer.attributes.CssLegacyAliasAttribute.Name">
            <summary>The alias name of the field.</summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.templates.ConfigFileBase">
            <summary>A configuration file base class for reading and writing configuration files.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.templates.ConfigFileBase.#ctor(System.IO.FileInfo)">
            <summary>Creates a new instance by providing the source file path.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.templates.ConfigFileBase.#ctor(System.Uri)">
            <summary>Creates a new instance by providing the source file path.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.templates.ConfigFileBase.Path">
            <summary>Gets or sets the Path.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.templates.ConfigFileBase.PackUri">
            <summary>Gets or sets the PackUri.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.templates.ConfigFileBase.IsLoaded">
            <summary>Gets or sets the IsLoaded.</summary>
        </member>
        <member name="E:CsWpfBase.Utilitys.templates.ConfigFileBase.LoadError">
            <summary>Whenever invalid entrys are found in config file this event will fire.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.templates.ConfigFileBase.Load">
            <summary>Loads the configuration file into the instance.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.templates.ConfigFileBase.Save">
            <summary>Saves the configuration file back to the file.</summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.templates.ConfigFileBase.KeyAttribute">
            <summary>Assign this Attribute to property's or fields which represent a key value pair in the config file.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.templates.ConfigFileBase.KeyAttribute.Name">
            <summary>Sets the name of the key.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.templates.ConfigFileBase.KeyAttribute.StringFormat">
            <summary>The String format which will be used on save.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.templates.ConfigFileBase.KeyMember.ToString">
            <summary>Returns a <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</summary>
            <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:CsWpfBase.Utilitys.templates.FileTemplate">
            <summary>A Template Wrapper for inserting text fragments into predefined files.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.templates.FileTemplate.TemplateString">
            <summary>At default the template string will be loaded from an .txt file with the exact same name of the source code file name with an .txt appended.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.templates.FileTemplate.TemplateFileName">
            <summary>The template file name. The name of the resource file at the same name space as the source file.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.templates.FileTemplate.PropNameToKey(System.String)">
            <summary>Converts the <paramref name="propName" /> to the associated TemplateKey.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.templates.FileTemplate.GetString">
            <summary>Gets the template String.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.templates.FileTemplate.GetString(System.Int32)">
            <summary>Creates the string, but with an indentation level.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.templates.FileTemplate.GetHash">
            <summary>Takes all Key elements inside template and generates a MD5 hash.</summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.templates.FileTemplate.KeyAttribute">
            <summary>Assign this Attribute to property's or field's which represent a value in a template file.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.templates.FileTemplate.KeyAttribute.FullName">
            <summary>Sets the complete key name including the starting sequence and ending sequence.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.templates.FileTemplate.KeyAttribute.Name">
            <summary>Sets the name of the key.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.templates.FileTemplate.KeyAttribute.ValuePrefix">
            <summary>Sets a value which is inserted before the value.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.templates.FileTemplate.KeyAttribute.ValueSuffix">
            <summary>Sets a value which is appended to the value</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.templates.FileTemplate.KeyAttribute.StringFormat">
            <summary>The string format to apply.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.templates.FileTemplate.KeyAttribute.IncludeInHash">
            <summary>Defines if the value should be included inside the hashing algorithm. Default is true</summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.DynamicNumber">
            <summary>The Number is used for an dynamic calculation of different number types.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.DynamicNumber.#ctor(System.Type)">
            <summary>Init the number with an value.</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.DynamicNumber.Value">
            <summary>Gets the value</summary>
        </member>
        <member name="P:CsWpfBase.Utilitys.DynamicNumber.Type">
            <summary>Gets the type of the value</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.DynamicNumber.op_Addition(CsWpfBase.Utilitys.DynamicNumber,System.Object)">
            <summary>
            Adds an value of type object from the dynamic number. This object can be of any numeric type or a <see cref="T:CsWpfBase.Utilitys.DynamicNumber"/>.
            </summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.DynamicNumber.op_Subtraction(CsWpfBase.Utilitys.DynamicNumber,System.Object)">
            <summary>
            Subtracts an value of type object from the dynamic number. This object can be of any numeric type or a <see cref="T:CsWpfBase.Utilitys.DynamicNumber"/>.
            </summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.DynamicNumber.op_LessThan(CsWpfBase.Utilitys.DynamicNumber,System.Object)">
            <summary>
            Compares the dynamic number with an object. This object can be of any numeric type or a <see cref="T:CsWpfBase.Utilitys.DynamicNumber"/>.
            </summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.DynamicNumber.op_GreaterThan(CsWpfBase.Utilitys.DynamicNumber,System.Object)">
            <summary>
            Compares the dynamic number with an object. This object can be of any numeric type or a <see cref="T:CsWpfBase.Utilitys.DynamicNumber"/>.
            </summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.DynamicNumber.Invert">
            <summary>
            Multiplies with -1 or throws an exception if the number format does not allow negativ numbers.
            </summary>
        </member>
        <member name="T:CsWpfBase.Utilitys.ProcessLock">
            <summary>The process lock allows to build a construct which is capable of ignoring when some other activity is running.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.ProcessLock.Dispose">
            <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:CsWpfBase.Utilitys.ProcessLock.Active">
            <summary>Gets if some activity has currently locked the process.</summary>
        </member>
        <member name="M:CsWpfBase.Utilitys.ProcessLock.Activate">
            <summary>Activate the lock.</summary>
        </member>
        <member name="T:CsWpfBase._files.html.CsHtmlPage">
            <summary>The default base file template for html pages. If you are generating html files this should be your base.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.TemplateFileName">
            <summary>The template file name. The name of the resource file at the same name space as the source file.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.HiddenDocInfo">
            <summary>Gets or sets the associated key.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.HiddenDocumentText">
            <summary>Gets or sets the associated key.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.Title">
            <summary>Gets or sets the associated key.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.Styles">
            <summary>Gets or sets the associated key.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.Scripts">
            <summary>Gets or sets the associated key.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.Head">
            <summary>Gets or sets the associated key.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.Icon">
            <summary>Gets or sets the associated key.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.HeaderText">
            <summary>Gets or sets the associated key.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.Content">
            <summary>Gets or sets the associated key.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.CreationDate">
            <summary>Gets or sets the associated key.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.CopyRights">
            <summary>Gets or sets the associated key.</summary>
        </member>
        <member name="M:CsWpfBase._files.html.CsHtmlPage.SetIcon(System.Windows.Media.Imaging.BitmapSource)">
            <summary>Sets the <see cref="P:CsWpfBase._files.html.CsHtmlPage.Icon" /> field appropriate.</summary>
        </member>
        <member name="T:CsWpfBase._files.html.CsHtmlPage.Hdi">
            <summary>Represents hidden document informations.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.Hdi.TemplateString">
            <summary>At default the template string will be loaded from an .txt file with the exact same name of the source code file name with an .txt appended.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.Hdi.Type">
            <summary>Gets or sets the associated key.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.Hdi.Id">
            <summary>Gets or sets the associated key.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.Hdi.Title">
            <summary>Gets or sets the associated key.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.Hdi.CreationDate">
            <summary>Gets or sets the associated key.</summary>
        </member>
        <member name="P:CsWpfBase._files.html.CsHtmlPage.Hdi.CopyRights">
            <summary>Gets or sets the associated key.</summary>
        </member>
        <member name="M:CsWpfBase._files.html.CsHtmlPage.Hdi.Parse(System.IO.FileInfo)">
            <summary>Parses the beginning of a file to match the DocInfo.</summary>
        </member>
    </members>
</doc>
