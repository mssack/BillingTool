<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/CsWpfBase;component/Themes/Resources/Brushes.xaml" />
		<ResourceDictionary Source="/CsWpfBase;component/Themes/Resources/Converters.xaml" />
	</ResourceDictionary.MergedDictionaries>


	<Style TargetType="{x:Type ComboBox}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Padding" Value="4,2,3,2" />
		<Setter Property="Margin" Value="1" />
	</Style>
	<Style TargetType="{x:Type TextBlock}">
		<Setter Property="VerticalAlignment" Value="Center" />
	</Style>
	<Style TargetType="{x:Type TextBox}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderBrush" Value="{StaticResource GBrush-Border-Normal}" />
		<Setter Property="Padding" Value="0,1,0,1" />
		<Setter Property="Margin" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" HorizontalAlignment="Stretch"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{StaticResource GBrush-Border-MouseOver}" />
			</Trigger>
			<Trigger Property="IsKeyboardFocusWithin" Value="True">
				<Setter Property="BorderBrush" Value="{StaticResource GBrush-Border-KeyboardFocusWithin}" />
			</Trigger>
			<Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Cursor" Value="{x:Static Cursors.Arrow}"/>
                <Setter Property="BorderBrush" Value="{StaticResource GBrush-Border-Normal}" />
            </Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type CheckBox}">
		<Setter Property="Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
					<GradientStop Color="#D4D6D4" Offset="0" />
					<GradientStop Color="#FDFDFD" Offset="1" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{StaticResource GBrush-Border-Normal}" />
		<Setter Property="Padding" Value="0,1,0,1" />
		<Setter Property="Margin" Value="1" />
		<Setter Property="MinHeight" Value="15" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Border DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Padding="{TemplateBinding Padding}" Background="Transparent">

						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Border MaxHeight="14" Padding="1,1,1,1" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
									Width="{Binding RelativeSource={RelativeSource Self},Path=ActualHeight}">
								<Grid>
									<Path Margin="0,0,0,0" Stretch="Uniform" Stroke="{Binding Path=(TextElement.Foreground)}" StrokeThickness="2" Data="M 2,0 L 2,0 1,2 0,1.5"
										Visibility="{Binding Path=IsChecked, Converter={StaticResource GConv-BoolVisibility}}" />
									<Border Background="{Binding Path=(TextElement.Foreground)}" Visibility="{Binding Path=IsChecked, Converter={StaticResource GConv-InvNullToVisibility}}" />
								</Grid>
							</Border>
							<ContentPresenter Grid.Column="1" Margin="3,0,0,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{StaticResource GBrush-Border-MouseOver}" />
			</Trigger>
			<Trigger Property="IsKeyboardFocusWithin" Value="True">
				<Setter Property="BorderBrush" Value="{StaticResource GBrush-Border-KeyboardFocusWithin}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type Button}">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="3,1,3,1" />
		<Setter Property="Margin" Value="1" />
		<Setter Property="BorderBrush" Value="{StaticResource GBrush-Border-Normal}" />
		<Setter Property="Background" Value="{StaticResource GBrush-Background-Button}" />
		<Setter Property="Cursor" Value="{x:Static Cursors.Hand}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid>
						<Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
								Padding="{TemplateBinding Padding}">
							<ContentControl SnapsToDevicePixels="False" Focusable="False" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
											VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
						</Border>
						<Border SnapsToDevicePixels="True" Background="#A4FFFFFF"
								Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEnabled, Converter={StaticResource GConv-InvBoolVisibility}}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{StaticResource GBrush-Border-MouseOver}" />
				<Setter Property="Background" Value="{StaticResource GBrush-Background-MouseOver}" />
			</Trigger>
			<Trigger Property="IsKeyboardFocusWithin" Value="True">
				<Setter Property="BorderBrush" Value="{StaticResource GBrush-Border-KeyboardFocusWithin}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type ListView}">
		<Setter Property="Margin" Value="1" />
	</Style>
	<Style TargetType="{x:Type ListViewItem}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
	</Style>

	<Style TargetType="ToolTip" x:Key="{x:Type ToolTip}">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="5,3,5,3" />
		<Setter Property="Background" Value="#FDFDFD" />
		<Setter Property="BorderBrush" Value="#4C4C4C" />
		<Setter Property="Placement" Value="Left" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToolTip">
					<Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}">
						<ContentPresenter />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>