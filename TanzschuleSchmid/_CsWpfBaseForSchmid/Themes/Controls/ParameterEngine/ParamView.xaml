<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:local="clr-namespace:CsWpfBase.Themes.Controls.ParameterEngine"
					xmlns:base="clr-namespace:CsWpfBase.Themes.Controls.ParameterEngine.Base"
					xmlns:attachedProperties="clr-namespace:CsWpfBase.Themes.AttachedProperties"
					mc:Ignorable="d">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/CsWpfBase;component/Themes/Controls/_shared/Styles.xaml" />
		<ResourceDictionary Source="/CsWpfBase;component/Themes/Controls/ParameterEngine/Base/ParameterEngineBase.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<Style TargetType="{x:Type local:ParamView}" BasedOn="{StaticResource {x:Type base:ParameterEngineBase}}" d:DataContext="{d:DesignInstance local:ParamView}">
		<Setter Property="AutoHide" Value="True" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="ExtensionVerticalAlignment" Value="Center"/>
		<Setter Property="ExtensionHorizontalAlignment" Value="Left"/>
		<Setter Property="ExtensionTemplate">
			<Setter.Value>
				<DataTemplate DataType="{x:Type local:ParamView}">
					<TextBox Margin="0" Padding="{Binding Path=Padding}" attachedProperties:ATextBox.AutoSelection="True" TextWrapping="Wrap">
						<TextBox.Style>
							<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
								<Setter Property="Background" Value="Transparent" />
								<Setter Property="IsTabStop" Value="{Binding Path=IsTabStop}"/>
								<Setter Property="IsReadOnly" Value="True" />
								<Setter Property="BorderThickness" Value="0" />
								<Setter Property="Foreground" Value="{Binding Path=Foreground}" />
								<Setter Property="HorizontalContentAlignment" Value="{Binding Path=ExtensionHorizontalAlignment}"/>
								<Setter Property="VerticalContentAlignment" Value="{Binding Path=ExtensionVerticalAlignment}"/>
								<Setter Property="Text" Value="{Binding Path=Value}" />
								<Style.Triggers>
									<DataTrigger Binding="{Binding Path=Value, Converter={StaticResource GConv-IsOfType}, ConverterParameter={x:Type s:Boolean}}" Value="True">
										<Setter Property="Text" Value="{Binding Path=Value, Converter={StaticResource GConv-BoolToYesNo}}" />
									</DataTrigger>
									<DataTrigger Binding="{Binding Path=Value, Converter={StaticResource GConv-IsOfType}, ConverterParameter={x:Type s:DateTime}}" Value="True">
										<Setter Property="Text" Value="{Binding Path=Value, StringFormat={}dd.MM.yyyy HH:mm}" />
									</DataTrigger>
									<DataTrigger Binding="{Binding Path=ValueStringFormat, Converter={StaticResource GConv-IsNullOrEmpty}}" Value="False">
										<Setter Property="Text">
											<Setter.Value>
												<MultiBinding Converter="{StaticResource GConv-MultiBindingStringFormat}">
													<Binding Path="ValueStringFormat" />
													<Binding Path="Value" />
												</MultiBinding>
											</Setter.Value>
										</Setter>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBox.Style>
					</TextBox>
				</DataTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Value" Value="{x:Null}" />
					<Condition Property="AutoHide" Value="True" />
				</MultiTrigger.Conditions>
				<Setter Property="Visibility" Value="Collapsed" />
			</MultiTrigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="Value" Value="{x:Static s:String.Empty}" />
					<Condition Property="AutoHide" Value="True" />
				</MultiTrigger.Conditions>
				<Setter Property="Visibility" Value="Collapsed" />
			</MultiTrigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>