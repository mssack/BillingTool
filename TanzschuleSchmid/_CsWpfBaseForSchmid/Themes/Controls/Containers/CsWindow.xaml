<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" mc:Ignorable="d"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:grayScale="clr-namespace:CsWpfBase.Themes.Resources.ShaderEffects.GrayScale" xmlns:ap="clr-namespace:CsWpfBase.Themes.AttachedProperties"
					xmlns:containers="clr-namespace:CsWpfBase.Themes.Controls.Containers">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/CsWpfBase;component/Themes/Controls/_shared/Styles.xaml" />
		<ResourceDictionary Source="/CsWpfBase;component/Themes/Standard.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style TargetType="Image" x:Key="WindowIconStyle" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="Source" Value="{Binding Path=Icon}" />
		<Setter Property="Visibility" Value="{Binding Path=IconVisibility}" />
		<Setter Property="Height" Value="16" />
		<Setter Property="Margin" Value="4,0,0,0" />
		<Setter Property="RenderOptions.BitmapScalingMode" Value="Fant" />
		<Setter Property="SnapsToDevicePixels" Value="False" />
		<Setter Property="Effect">
			<Setter.Value>
				<grayScale:GrayscaleEffect x:Name="grayscaleEffect" DesaturationFactor="1" />
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Path=IsActive}" Value="False">
				<DataTrigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation To="0.0" Duration="0:0:0.5" Storyboard.TargetProperty="Effect.(grayScale:GrayscaleEffect.DesaturationFactor)" />
						</Storyboard>
					</BeginStoryboard>
				</DataTrigger.EnterActions>
				<DataTrigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation To="1.0" Duration="0:0:0.5" Storyboard.TargetProperty="Effect.(grayScale:GrayscaleEffect.DesaturationFactor)" />
						</Storyboard>
					</BeginStoryboard>
				</DataTrigger.ExitActions>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="TextBlock" x:Key="WindowTitleStyle" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="FontSize" Value="15" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="TextAlignment" Value="Center" />
		<Setter Property="Margin" Value="4" />
		<Setter Property="FontFamily" Value="Segoe WP Light" />
		<Setter Property="Text" Value="{Binding Path= Title}" />
		<Style.Triggers>
			<DataTrigger Binding="{Binding Path=IsActive}" Value="False">
				<Setter Property="Foreground" Value="DimGray" />
			</DataTrigger>
		</Style.Triggers>
	</Style>


	<containers:WindowRzMarginCalculator x:Key="RzMarginCalculator" />

	<Style TargetType="Border" x:Key="GausianBorderStyle" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{Binding Path=GausianBorderBrush}" />
		<Setter Property="Margin" Value="{Binding BorderThickness, Converter={StaticResource GConv-ThicknessInverter}}" />
		<Setter Property="Grid.Column" Value="1" />
		<Setter Property="Grid.Row" Value="1" />
		<Setter Property="Effect">
			<Setter.Value>
				<BlurEffect KernelType="Gaussian" Radius="5" RenderingBias="Performance" />
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Path=IsActive}" Value="False">
				<Setter Property="BorderBrush" Value="Silver" />
			</DataTrigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="Border" x:Key="ResizeStyle" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="Background" Value="#01000000" />
		<Setter Property="IsHitTestVisible" Value="True" />
		<Style.Triggers>
			<DataTrigger Binding="{Binding Path=ResizeMode}" Value="{x:Static ResizeMode.NoResize}">
				<Setter Property="Cursor" Value="{x:Static Cursors.Arrow}" />
				<Setter Property="IsHitTestVisible" Value="False" />
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="Border" x:Key="ResizeStyleNw" BasedOn="{StaticResource ResizeStyle}" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="Cursor" Value="{x:Static Cursors.SizeNWSE}" />
		<Setter Property="VerticalAlignment" Value="Bottom" />
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="Grid.Row" Value="0" />
		<Setter Property="Grid.Column" Value="0" />
		<Setter Property="Width" Value="{Binding Path=ResizeThickness.Left}" />
		<Setter Property="Height" Value="{Binding Path=ResizeThickness.Top}" />
		<Setter Property="Margin" Value="{Binding Path=BorderThickness, ConverterParameter={x:Static ap:AWindowResizeBorder+Target.TopLeft}, Converter={StaticResource RzMarginCalculator}}" />
		<Setter Property="ap:AWindowResizeBorder.Type" Value="TopLeft" />
	</Style>
	<Style TargetType="Border" x:Key="ResizeStyleNe" BasedOn="{StaticResource ResizeStyle}" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="Cursor" Value="{x:Static Cursors.SizeNESW}" />
		<Setter Property="VerticalAlignment" Value="Bottom" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="Grid.Row" Value="0" />
		<Setter Property="Grid.Column" Value="2" />
		<Setter Property="Width" Value="{Binding Path=ResizeThickness.Right}" />
		<Setter Property="Height" Value="{Binding Path=ResizeThickness.Top}" />
		<Setter Property="Margin" Value="{Binding Path=BorderThickness, ConverterParameter={x:Static ap:AWindowResizeBorder+Target.TopRight}, Converter={StaticResource RzMarginCalculator}}" />
		<Setter Property="ap:AWindowResizeBorder.Type" Value="TopRight" />
	</Style>
	<Style TargetType="Border" x:Key="ResizeStyleSw" BasedOn="{StaticResource ResizeStyle}" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="Cursor" Value="{x:Static Cursors.SizeNESW}" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="Grid.Row" Value="2" />
		<Setter Property="Grid.Column" Value="0" />
		<Setter Property="Width" Value="{Binding Path=ResizeThickness.Left}" />
		<Setter Property="Height" Value="{Binding Path=ResizeThickness.Bottom}" />
		<Setter Property="Margin" Value="{Binding Path=BorderThickness, ConverterParameter={x:Static ap:AWindowResizeBorder+Target.BottomLeft}, Converter={StaticResource RzMarginCalculator}}" />
		<Setter Property="ap:AWindowResizeBorder.Type" Value="BottomLeft" />
	</Style>
	<Style TargetType="Border" x:Key="ResizeStyleSe" BasedOn="{StaticResource ResizeStyle}" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="Cursor" Value="{x:Static Cursors.SizeNWSE}" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="Grid.Row" Value="2" />
		<Setter Property="Grid.Column" Value="2" />
		<Setter Property="Width" Value="{Binding Path=ResizeThickness.Right}" />
		<Setter Property="Height" Value="{Binding Path=ResizeThickness.Bottom}" />
		<Setter Property="Margin" Value="{Binding Path=BorderThickness, ConverterParameter={x:Static ap:AWindowResizeBorder+Target.BottomRight}, Converter={StaticResource RzMarginCalculator}}" />
		<Setter Property="ap:AWindowResizeBorder.Type" Value="BottomRight" />
	</Style>


	<Style TargetType="Border" x:Key="ResizeStyleN" BasedOn="{StaticResource ResizeStyle}" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="Cursor" Value="{x:Static Cursors.SizeNS}" />
		<Setter Property="VerticalAlignment" Value="Bottom" />
		<Setter Property="Grid.Row" Value="0" />
		<Setter Property="Grid.Column" Value="1" />
		<Setter Property="Height" Value="{Binding Path=ResizeThickness.Top}" />
		<Setter Property="Margin" Value="{Binding Path=BorderThickness, ConverterParameter={x:Static ap:AWindowResizeBorder+Target.Top}, Converter={StaticResource RzMarginCalculator}}" />
		<Setter Property="ap:AWindowResizeBorder.Type" Value="Top" />
	</Style>
	<Style TargetType="Border" x:Key="ResizeStyleS" BasedOn="{StaticResource ResizeStyle}" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="Cursor" Value="{x:Static Cursors.SizeNS}" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="Grid.Row" Value="2" />
		<Setter Property="Grid.Column" Value="1" />
		<Setter Property="Height" Value="{Binding Path=ResizeThickness.Bottom}" />
		<Setter Property="Margin" Value="{Binding Path=BorderThickness, ConverterParameter={x:Static ap:AWindowResizeBorder+Target.Bottom}, Converter={StaticResource RzMarginCalculator}}" />
		<Setter Property="ap:AWindowResizeBorder.Type" Value="Bottom" />
	</Style>
	<Style TargetType="Border" x:Key="ResizeStyleW" BasedOn="{StaticResource ResizeStyle}" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="Cursor" Value="{x:Static Cursors.SizeWE}" />
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="Grid.Row" Value="1" />
		<Setter Property="Grid.Column" Value="0" />
		<Setter Property="Width" Value="{Binding Path=ResizeThickness.Left}" />
		<Setter Property="Margin" Value="{Binding Path=BorderThickness, ConverterParameter={x:Static ap:AWindowResizeBorder+Target.Left}, Converter={StaticResource RzMarginCalculator}}" />
		<Setter Property="ap:AWindowResizeBorder.Type" Value="Left" />
	</Style>
	<Style TargetType="Border" x:Key="ResizeStyleE" BasedOn="{StaticResource ResizeStyle}" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="Cursor" Value="{x:Static Cursors.SizeWE}" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="Grid.Row" Value="1" />
		<Setter Property="Grid.Column" Value="2" />
		<Setter Property="Width" Value="{Binding Path=ResizeThickness.Right}" />
		<Setter Property="Margin" Value="{Binding Path=BorderThickness, ConverterParameter={x:Static ap:AWindowResizeBorder+Target.Right}, Converter={StaticResource RzMarginCalculator}}" />
		<Setter Property="ap:AWindowResizeBorder.Type" Value="Right" />
	</Style>

	<Style TargetType="Button" x:Key="WindowControlButtonBaseStyle">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Width" Value="34" />
		<Setter Property="Height" Value="26" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="BorderThickness" Value="0" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="White" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="Button" x:Key="CloseButtonStyle" BasedOn="{StaticResource WindowControlButtonBaseStyle}" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="Visibility" Value="{Binding Path=CloseButtonVisibility}" />
		<Setter Property="Command" Value="{Binding Path=CloseCommand}" />
		<Setter Property="BorderBrush" Value="Black" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
						<Border Width="10" Height="10">
							<Border.Background>
								<DrawingBrush Stretch="Uniform">
									<DrawingBrush.Drawing>
										<GeometryDrawing x:Name="drawing" Geometry="M 0,0L 10,8M 10,0L 0,8">
											<GeometryDrawing.Pen>
												<Pen Thickness="1.3" Brush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBrush}" />
											</GeometryDrawing.Pen>
										</GeometryDrawing>
									</DrawingBrush.Drawing>
								</DrawingBrush>
							</Border.Background>
						</Border>
						<!--<Image SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="NearestNeighbor" Height="10" Width="10" x:Name="img" Source="{StaticResource GIco-Window-Close}" />-->
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<!--<Setter TargetName="img" Property="Source" Value="{StaticResource GIco-Window-CloseHighlited}" />-->
							<Setter Property="BorderBrush" Value="#007ACC" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="Button" x:Key="MaximiseButtonStyle" BasedOn="{StaticResource WindowControlButtonBaseStyle}" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="Command" Value="{Binding Path=MaximizeCommand}" />
		<Setter Property="Visibility" Value="{Binding Path=MaximizeButtonVisibility}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
						<Image RenderOptions.BitmapScalingMode="NearestNeighbor" Width="9" Height="9" SnapsToDevicePixels="True" x:Name="img" Source="{StaticResource GIco-Window-Maximize}" />
					</Border>
					<ControlTemplate.Triggers>

						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="img" Property="Source" Value="{StaticResource GIco-Window-MaximizeHighlited}" />
						</Trigger>


						<DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="{x:Static WindowState.Maximized}">
							<Setter TargetName="img" Property="Source" Value="{StaticResource GIco-Window-Restore}" />
							<Setter TargetName="img" Property="Width" Value="10" />
							<Setter TargetName="img" Property="Height" Value="10" />
						</DataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="{x:Static WindowState.Maximized}" />
								<Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
							</MultiDataTrigger.Conditions>
							<Setter TargetName="img" Property="Source" Value="{StaticResource GIco-Window-RestoreHighlited}" />
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="Button" x:Key="MinimizeButtonStyle" BasedOn="{StaticResource WindowControlButtonBaseStyle}" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="Command" Value="{Binding Path=MinimizeCommand}" />
		<Setter Property="Visibility" Value="{Binding Path=MinimizeButtonVisibility}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
						<Image SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="NearestNeighbor" Width="9" Height="3" Margin="0,3,0,0" x:Name="img" Source="{StaticResource GIco-Window-Minimize}" />
					</Border>
					<ControlTemplate.Triggers>

						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="img" Property="Source" Value="{StaticResource GIco-Window-MinimizeHighlited}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ContentControl}" x:Key="FooterStyle" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="ContentTemplate" Value="{Binding Path=FooterTemplate}" />
		<Setter Property="Content" Value="{Binding Path=Footer}" />
		<Setter Property="Focusable" Value="False" />
		<Style.Triggers>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=FooterTemplate}" Value="{x:Null}" />
					<Condition Binding="{Binding Path=Footer}" Value="{x:Null}" />
				</MultiDataTrigger.Conditions>
				<Setter Property="ContentTemplate">
					<Setter.Value>
						<DataTemplate DataType="{x:Type containers:CsWindow}">
							<Border Padding="4,2,4,2" Background="#64FFFFFF" DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type containers:CsWindow}}}">
								<Grid>
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Slider Focusable="False" Width="150" Grid.Column="0" Value="{Binding Path=Scale}" Minimum="1" Maximum="2" />
									<Button Grid.Column="2" Style="{StaticResource LinkButton}" Content="Feedback" FontFamily="Lucida Console" Command="{Binding Path=OpenFeedbackCommand}" />
								</Grid>
							</Border>
						</DataTemplate>
					</Setter.Value>
				</Setter>
			</MultiDataTrigger>
		</Style.Triggers>
	</Style>
	<Style TargetType="{x:Type ContentControl}" x:Key="HeaderStyle" d:DataContext="{d:DesignInstance containers:CsWindow}">
		<Setter Property="ContentTemplate" Value="{Binding Path=HeaderTemplate}" />
		<Setter Property="Content" Value="{Binding Path=Header}" />
		<Setter Property="Focusable" Value="False" />
		<Style.Triggers>
			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=HeaderTemplate}" Value="{x:Null}" />
					<Condition Binding="{Binding Path=Header}" Value="{x:Null}" />
				</MultiDataTrigger.Conditions>
				<Setter Property="ContentTemplate">
					<Setter.Value>
						<DataTemplate DataType="{x:Type containers:CsWindow}">
							<Border DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type containers:CsWindow}}}" Height="26" Background="{Binding Path=HeaderBackground}"
									ap:AWindowDragMove.IsActive="True">
								<Border.InputBindings>
									<MouseBinding Command="{Binding Path=MaximizeCommand}" MouseAction="LeftDoubleClick" />
								</Border.InputBindings>
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Image Style="{StaticResource WindowIconStyle}" HorizontalAlignment="Left" />
									<TextBlock Style="{StaticResource WindowTitleStyle}" HorizontalAlignment="Center" />
								</Grid>
							</Border>
						</DataTemplate>
					</Setter.Value>
				</Setter>
			</MultiDataTrigger>
		</Style.Triggers>
	</Style>


	<Style TargetType="{x:Type containers:CsWindow}" BasedOn="{StaticResource {x:Type Window}}">
		<Setter Property="GausianBorderBrush" Value="RoyalBlue"/>
		<Setter Property="Scale" Value="1" />
		<Setter Property="ScaleActivated" Value="True" />
		<Setter Property="ResizeThickness" Value="8" />
		<Setter Property="WindowStyle" Value="None" />
		<Setter Property="WindowState" Value="Normal" />
		<Setter Property="AllowsTransparency" Value="True" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="#7A7A7A" />
		<Setter Property="Icon" Value="{StaticResource GIco-App-Standard}" />
		<Setter Property="IconVisibility" Value="Visible" />
		<Setter Property="FontFamily" Value="Segoe UI" />
		<Setter Property="CloseButtonVisibility" Value="Visible" />
		<Setter Property="MinimizeButtonVisibility" Value="Visible" />
		<Setter Property="MaximizeButtonVisibility" Value="Visible" />
		<Setter Property="HeaderVisibility" Value="Visible" />
		<Setter Property="HeaderBackground" Value="{StaticResource GBrush-Background-Window}" />
		<Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=HeaderBackground}" />
		<Setter Property="FooterVisibility" Value="Visible" />
		<Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type containers:CsWindow}">
					<AdornerDecorator>
						<Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" x:Name="PART_FirstElementInTemplate">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Border Style="{StaticResource GausianBorderStyle}" />
							<Border Grid.Row="1" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
								<Grid ClipToBounds="True">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="*" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<Border Grid.Row="0" Visibility="{Binding Path=HeaderVisibility}">
										<ContentControl Style="{StaticResource HeaderStyle}" />
									</Border>
									<Grid Grid.Row="0" Grid.RowSpan="2" HorizontalAlignment="Right" VerticalAlignment="Top" SnapsToDevicePixels="True" Panel.ZIndex="2">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Button Grid.Column="0" Style="{StaticResource MinimizeButtonStyle}" />
										<Button Grid.Column="1" Style="{StaticResource MaximiseButtonStyle}" />
										<Button Grid.Column="2" Style="{StaticResource CloseButtonStyle}" />
									</Grid>

									<Border Grid.Row="1" Padding="{TemplateBinding Padding}" >
										<ContentPresenter Content="{Binding Path=Content}" ContentTemplate="{Binding Path=ContentTemplate}" Focusable="False">

											<ContentPresenter.Style>
												<Style TargetType="{x:Type ContentPresenter}">
													<Style.Triggers>
														<DataTrigger Binding="{Binding Path=ScaleActivated}" Value="True">
															<Setter Property="LayoutTransform">
																<Setter.Value>
																	<!--See following link, it explains the x:Name fiel http://stackoverflow.com/questions/3181890/binding-in-wpf-style-causes-inexplicable-cannot-find-governing-frameworkelement-->
																	<ScaleTransform x:Name="implementedToSupressOutputError" ScaleX="{Binding Path=Scale}" ScaleY="{Binding Path=Scale}" />
																</Setter.Value>
															</Setter>
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</ContentPresenter.Style>
										</ContentPresenter>
									</Border>
									<Border Grid.Row="2" Visibility="{TemplateBinding FooterVisibility}">
										<ContentControl Style="{StaticResource FooterStyle}" />
									</Border>

									<Border Grid.Row="0" Grid.RowSpan="3" Background="#64000000" Visibility="{Binding Path=IsGrayedOut, Converter={StaticResource GConv-BoolVisibility}}" >
										
									</Border>
								</Grid>
							</Border>

							<Border Style="{StaticResource ResizeStyleN}" />
							<Border Style="{StaticResource ResizeStyleE}" />
							<Border Style="{StaticResource ResizeStyleS}" />
							<Border Style="{StaticResource ResizeStyleW}" />
							<Border Style="{StaticResource ResizeStyleNe}" />
							<Border Style="{StaticResource ResizeStyleNw}" />
							<Border Style="{StaticResource ResizeStyleSe}" />
							<Border Style="{StaticResource ResizeStyleSw}" />
						</Grid>
					</AdornerDecorator>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsActive" Value="False">
				<Setter Property="BorderBrush" Value="#CCCEDB" />
			</Trigger>
			<Trigger Property="WindowState" Value="Maximized">
				<Setter Property="ResizeThickness" Value="6" />
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>